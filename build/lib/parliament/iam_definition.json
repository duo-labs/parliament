[
  {
    "conditions": [
      {
        "condition": "a4b:amazonId",
        "description": "Filters actions based on the Amazon Id in the request",
        "type": "String"
      },
      {
        "condition": "a4b:filters_deviceType",
        "description": "Filters actions based on the device type in the request",
        "type": "String"
      },
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value assoicated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of mandatory tags in the request",
        "type": "String"
      }
    ],
    "prefix": "a4b",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Associates a skill with the organization under the customer's AWS account. If a skill is private, the user implicitly accepts access to this skill during enablement.",
        "privilege": "ApproveSkill",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates a contact with a given address book.",
        "privilege": "AssociateContactWithAddressBook",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "addressbook*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "contact*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates device with given room.",
        "privilege": "AssociateDeviceWithRoom",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates the skill group with given room. SkillGroup ARN and Room ARN must be specified.",
        "privilege": "AssociateSkillGroupWithRoom",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "skillgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates a skill with a skill group.",
        "privilege": "AssociateSkillWithSkillGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "skillgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Makes a private skill available for enrolled users to enable on their devices.",
        "privilege": "AssociateSkillWithUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Completes the operation of registering an Alexa device.",
        "privilege": "CompleteRegistration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an address book with the specified details.",
        "privilege": "CreateAddressBook",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a recurring schedule for usage reports to deliver to the specified S3 location with a specified daily or weekly interval.",
        "privilege": "CreateBusinessReportSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds a new conference provider under the user's AWS account.",
        "privilege": "CreateConferenceProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a contact with the specified details.",
        "privilege": "CreateContact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new profile.",
        "privilege": "CreateProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create room with the specified details.",
        "privilege": "CreateRoom",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "profile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a skill group with given name and description.",
        "privilege": "CreateSkillGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a user.",
        "privilege": "CreateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an address book by the address book ARN.",
        "privilege": "DeleteAddressBook",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "addressbook*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the recurring report delivery schedule with the specified schedule ARN.",
        "privilege": "DeleteBusinessReportSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schedule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a conference provider.",
        "privilege": "DeleteConferenceProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "conferenceprovider*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a contact by the contact ARN.",
        "privilege": "DeleteContact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "contact*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes a device from Alexa For Business.",
        "privilege": "DeleteDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete profile by profile ARN.",
        "privilege": "DeleteProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "profile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete room.",
        "privilege": "DeleteRoom",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a parameter from a skill and room.",
        "privilege": "DeleteRoomSkillParameter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Unlinks a third-party account from a skill.",
        "privilege": "DeleteSkillAuthorization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes skill group with skill group ARN. Skillgroup ARN must be specified.",
        "privilege": "DeleteSkillGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "skillgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a user.",
        "privilege": "DeleteUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates a contact from a given address book.",
        "privilege": "DisassociateContactFromAddressBook",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "addressbook*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "contact*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates device from its current room.",
        "privilege": "DisassociateDeviceFromRoom",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates a skill from a skill group.",
        "privilege": "DisassociateSkillFromSkillGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "skillgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Makes a private skill unavailable for enrolled users and prevents them from enabling it on their devices.",
        "privilege": "DisassociateSkillFromUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates the skill group from given room. SkillGroup ARN and Room ARN must be specified.",
        "privilege": "DisassociateSkillGroupFromRoom",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "skillgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Forgets smart home appliances associated to a room.",
        "privilege": "ForgetSmartHomeAppliances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the address book details by the address book ARN.",
        "privilege": "GetAddressBook",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "addressbook*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the existing conference preferences.",
        "privilege": "GetConferencePreference",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets details about a specific conference provider.",
        "privilege": "GetConferenceProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "conferenceprovider*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the contact details by the contact ARN.",
        "privilege": "GetContact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "contact*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get device details.",
        "privilege": "GetDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the network profile details by the network profile ARN.",
        "privilege": "GetNetworkProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "networkprofile*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets profile when provided with Profile ARN.",
        "privilege": "GetProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "profile*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get room details.",
        "privilege": "GetRoom",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get an existing parameter that has been set for a skill and room.",
        "privilege": "GetRoomSkillParameter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets skill group details with skill group ARN. Skillgroup ARN must be specified.",
        "privilege": "GetSkillGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "skillgroup*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the details of the schedules that a user configured.",
        "privilege": "ListBusinessReportSchedules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists conference providers under a specific AWS account.",
        "privilege": "ListConferenceProviders",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the device event history, including device connection status, for up to 30 days.",
        "privilege": "ListDeviceEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists skills.",
        "privilege": "ListSkills",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all categories in the Alexa skill store.",
        "privilege": "ListSkillsStoreCategories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all skills in the Alexa skill store by category.",
        "privilege": "ListSkillsStoreSkillsByCategory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all of the smart home appliances associated with a room.",
        "privilege": "ListSmartHomeAppliances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists all tags on a resource.",
        "privilege": "ListTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the conference preferences on a specific conference provider at the account level.",
        "privilege": "PutConferencePreference",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Publishes Alexa device setup events.",
        "privilege": "PutDeviceSetupEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Put a room specific parameter for a skill.",
        "privilege": "PutRoomSkillParameter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Links a user's account to a third-party skill provider. If this API operation is called by an assumed IAM role, the skill being linked must be a private skill. Also, the skill must be owned by the AWS account that assumed the IAM role.",
        "privilege": "PutSkillAuthorization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers an Alexa-enabled device built by an Original Equipment Manufacturer (OEM) using Alexa Voice Service (AVS).",
        "privilege": "RegisterAVSDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers an Alexa device.",
        "privilege": "RegisterDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates a skill from the organization under a user's AWS account. If the skill is a private skill, it moves to an AcceptStatus of PENDING.",
        "privilege": "RejectSkill",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns resolved room information.",
        "privilege": "ResolveRoom",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Revoke an invitation.",
        "privilege": "RevokeInvitation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Searches address books and lists the ones that meet a set of filter and sort criteria.",
        "privilege": "SearchAddressBooks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Searches contacts and lists the ones that meet a set of filter and sort criteria.",
        "privilege": "SearchContacts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Search for devices.",
        "privilege": "SearchDevices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Searches network profiles and lists the ones that meet a set of filter and sort criteria.",
        "privilege": "SearchNetworkProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Search for profiles.",
        "privilege": "SearchProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Search for rooms.",
        "privilege": "SearchRooms",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Search for skill groups.",
        "privilege": "SearchSkillGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Search for users.",
        "privilege": "SearchUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Send an invitation to a user.",
        "privilege": "SendInvitation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Restore the device and its account to its known, default settings by clearing all information and settings set by its previous users.",
        "privilege": "StartDeviceSync",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Initiates the discovery of any smart home appliances associated with the room.",
        "privilege": "StartSmartHomeApplianceDiscovery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds metadata tags to a resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes metadata tags from a resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates address book details by the address book ARN.",
        "privilege": "UpdateAddressBook",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "addressbook*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the configuration of the report delivery schedule with the specified schedule ARN.",
        "privilege": "UpdateBusinessReportSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schedule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing conference provider's settings.",
        "privilege": "UpdateConferenceProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "conferenceprovider*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the contact details by the contact ARN.",
        "privilege": "UpdateContact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "contact*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates device name.",
        "privilege": "UpdateDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing profile.",
        "privilege": "UpdateProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "profile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update room details.",
        "privilege": "UpdateRoom",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "room*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates skill group details with skill group ARN. Skillgroup ARN must be specified.",
        "privilege": "UpdateSkillGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "skillgroup*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:profile/${Resource_id}",
        "condition_keys": [],
        "resource": "profile"
      },
      {
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:room/${Resource_id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "room"
      },
      {
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:device/${Resource_id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "device"
      },
      {
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:skill-group/${Resource_id}",
        "condition_keys": [],
        "resource": "skillgroup"
      },
      {
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:user/${Resource_id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "user"
      },
      {
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:address-book/${Resource_id}",
        "condition_keys": [],
        "resource": "addressbook"
      },
      {
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:conference-provider/${Resource_id}",
        "condition_keys": [],
        "resource": "conferenceprovider"
      },
      {
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:contact/${Resource_id}",
        "condition_keys": [],
        "resource": "contact"
      },
      {
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:schedule/${Resource_id}",
        "condition_keys": [],
        "resource": "schedule"
      },
      {
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:network-profile/${Resource_id}",
        "condition_keys": [],
        "resource": "networkprofile"
      }
    ],
    "service_name": "Alexa for Business"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "access-analyzer",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to create an analyzer.",
        "privilege": "CreateAnalyzer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Analyzer*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an archive rule for the specified analyzer.",
        "privilege": "CreateArchiveRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Analyzer*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ArchiveRule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified analyzer.",
        "privilege": "DeleteAnalyzer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Analyzer*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete archive rules for the specified analyzer.",
        "privilege": "DeleteArchiveRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Analyzer*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ArchiveRule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about an analyzed resource.",
        "privilege": "GetAnalyzedResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about analyzers.",
        "privilege": "GetAnalyzer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Analyzer*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about archive rules for the specified analyzer.",
        "privilege": "GetArchiveRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Analyzer*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ArchiveRule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve findings.",
        "privilege": "GetFinding",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of resources that have been analyzed.",
        "privilege": "ListAnalyzedResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieves a list of analyzers.",
        "privilege": "ListAnalyzers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of archive rules from an analyzer.",
        "privilege": "ListArchiveRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Analyzer*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of findings from an analyzer.",
        "privilege": "ListFindings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of tags applied to a resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Analyzer"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start a scan of the policies applied to a resource.",
        "privilege": "StartResourceScan",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add a tag to a resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Analyzer"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove a tag from a resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Analyzer"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an archive rule.",
        "privilege": "UpdateArchiveRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Analyzer*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ArchiveRule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify findings.",
        "privilege": "UpdateFindings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:access-analyzer:${Region}:${Account}:analyzer/${analyzerName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "Analyzer"
      },
      {
        "arn": "arn:${Partition}:access-analyzer:${Region}:${Account}:analyzer/${analyzerName}/archive-rule/${ruleName}",
        "condition_keys": [],
        "resource": "ArchiveRule"
      }
    ],
    "service_name": "IAM Access Analyzer"
  },
  {
    "conditions": [
      {
        "condition": "account:TargetRegion",
        "description": "Filters access by a list of regions",
        "type": "String"
      }
    ],
    "prefix": "account",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to disable a region",
        "privilege": "DisableRegion",
        "resource_types": [
          {
            "condition_keys": [
              "account:TargetRegion"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable a region",
        "privilege": "EnableRegion",
        "resource_types": [
          {
            "condition_keys": [
              "account:TargetRegion"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list regions",
        "privilege": "ListRegions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Accounts"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "acm",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "Adds one or more tags to a certificate.",
        "privilege": "AddTagsToCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a certificate and its associated private key.",
        "privilege": "DeleteCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of the fields contained in the specified certificate.",
        "privilege": "DescribeCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Exports a private certificate issued by a private certificate authority (CA) for use anywhere.",
        "privilege": "ExportCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a certificate and certificate chain for the certificate specified by an ARN.",
        "privilege": "GetCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Imports a 3rd party SSL/TLS certificate into AWS Certificate Manager (ACM).",
        "privilege": "ImportCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves a list of the certificate ARNs and the domain name for each ARN.",
        "privilege": "ListCertificates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the tags that have been applied to the certificate.",
        "privilege": "ListTagsForCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Remove one or more tags from a certificate. A tag consists of a key-value pair",
        "privilege": "RemoveTagsFromCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Renews an eligable private certificate.",
        "privilege": "RenewCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Requests a public or private certificate.",
        "privilege": "RequestCertificate",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Resends an email to request domain ownership validation.",
        "privilege": "ResendValidationEmail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a certificate. Use to specify whether to opt in to or out of certificate transparency logging.",
        "privilege": "UpdateCertificateOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:acm:${Region}:${Account}:certificate/${CertificateId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "certificate"
      }
    ],
    "service_name": "AWS Certificate Manager"
  },
  {
    "conditions": [
      {
        "condition": "acm-pca:TemplateArn",
        "description": "Filters issue certificate requests based on the presence of TemplateArn in the request.",
        "type": "String"
      },
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters create requests based on the allowed set of values for each of the tags.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value associated with the resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters create requests based on the presence of mandatory tags in the request.",
        "type": "String"
      }
    ],
    "prefix": "acm-pca",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "Creates an ACM Private CA and its associated private key and configuration.",
        "privilege": "CreateCertificateAuthority",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an audit report for an ACM Private CA.",
        "privilege": "CreateCertificateAuthorityAuditReport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Creates a permission for an ACM Private CA.",
        "privilege": "CreatePermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an ACM Private CA and its associated private key and configuration.",
        "privilege": "DeleteCertificateAuthority",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Deletes a permission for an ACM Private CA.",
        "privilege": "DeletePermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of the configuration and status fields contained in the specified ACM Private CA.",
        "privilege": "DescribeCertificateAuthority",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the status and information about an ACM Private CA audit report.",
        "privilege": "DescribeCertificateAuthorityAuditReport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves an ACM Private CA certificate and certificate chain for the certificate authority specified by an ARN.",
        "privilege": "GetCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves an ACM Private CA certificate and certificate chain for the certificate authority specified by an ARN.",
        "privilege": "GetCertificateAuthorityCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves an ACM Private CA certificate signing request (CSR) for the certificate-authority specified by an ARN.",
        "privilege": "GetCertificateAuthorityCsr",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Imports an SSL/TLS certificate into ACM Private CA for use as the CA certificate of an ACM Private CA.",
        "privilege": "ImportCertificateAuthorityCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Issues an ACM Private CA certificate.",
        "privilege": "IssueCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          },
          {
            "condition_keys": [
              "acm-pca:TemplateArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves a list of the ACM Private CA certificate authority ARNs, and a summary of the status of each CA in the calling account.",
        "privilege": "ListCertificateAuthorities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the permissions that have been applied to the ACM Private CA certificate authority.",
        "privilege": "ListPermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the tags that have been applied to the ACM Private CA certificate authority.",
        "privilege": "ListTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Restores an ACM Private CA from the deleted state to the state it was in when deleted.",
        "privilege": "RestoreCertificateAuthority",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Revokes a certificate issued by an ACM Private CA.",
        "privilege": "RevokeCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds one or more tags to an ACM Private CA.",
        "privilege": "TagCertificateAuthority",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Remove one or more tags from an ACM Private CA.",
        "privilege": "UntagCertificateAuthority",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the configuration of an ACM Private CA.",
        "privilege": "UpdateCertificateAuthority",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificate-authority*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:acm-pca:${Region}:${Account}:certificate-authority/${CertificateAuthorityId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "certificate-authority"
      }
    ],
    "service_name": "AWS Certificate Manager Private Certificate Authority"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "",
        "type": "String"
      }
    ],
    "prefix": "amplify",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a new Amplify App.",
        "privilege": "CreateApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new backend environment for an Amplify App.",
        "privilege": "CreateBackendEnvironment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new Branch for an Amplify App.",
        "privilege": "CreateBranch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a deployment for manual deploy apps. (Apps are not connected to repository)",
        "privilege": "CreateDeployment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "branches*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new DomainAssociation on an App",
        "privilege": "CreateDomainAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new webhook on an App.",
        "privilege": "CreateWebHook",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "branches*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an existing Amplify App by appId.",
        "privilege": "DeleteApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a branch for an Amplify App.",
        "privilege": "DeleteBackendEnvironment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a branch for an Amplify App.",
        "privilege": "DeleteBranch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "branches*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a DomainAssociation.",
        "privilege": "DeleteDomainAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domains*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a job, for an Amplify branch, part of Amplify App.",
        "privilege": "DeleteJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "jobs*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a webhook by id.",
        "privilege": "DeleteWebHook",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Generate website access logs for a specific time range via a pre-signed URL.",
        "privilege": "GenerateAccessLogs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves an existing Amplify App by appId.",
        "privilege": "GetApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves artifact info that corresponds to a artifactId.",
        "privilege": "GetArtifactUrl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a backend environment for an Amplify App.",
        "privilege": "GetBackendEnvironment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a branch for an Amplify App.",
        "privilege": "GetBranch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "branches*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves domain info that corresponds to an appId and domainName.",
        "privilege": "GetDomainAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domains*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get a job for a branch, part of an Amplify App.",
        "privilege": "GetJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "jobs*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves webhook info that corresponds to a webhookId.",
        "privilege": "GetWebHook",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists existing Amplify Apps.",
        "privilege": "ListApps",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List artifacts with an app, a branch, a job and an artifact type.",
        "privilege": "ListArtifacts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists backend environments for an Amplify App.",
        "privilege": "ListBackendEnvironments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists branches for an Amplify App.",
        "privilege": "ListBranches",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List domains with an app",
        "privilege": "ListDomainAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List Jobs for a branch, part of an Amplify App.",
        "privilege": "ListJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "branches*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List webhooks on an App.",
        "privilege": "ListWebHooks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Start a deployment for manual deploy apps. (Apps are not connected to repository)",
        "privilege": "StartDeployment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "branches*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a new job for a branch, part of an Amplify App.",
        "privilege": "StartJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "jobs*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stop a job that is in progress, for an Amplify branch, part of Amplify App.",
        "privilege": "StopJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "jobs*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action tags an AWS Amplify Console resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "branches"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "jobs"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action removes a tag from an AWS Amplify Console resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "branches"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "jobs"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing Amplify App.",
        "privilege": "UpdateApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a branch for an Amplify App.",
        "privilege": "UpdateBranch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "branches*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update a DomainAssociation on an App.",
        "privilege": "UpdateDomainAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domains*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update a webhook.",
        "privilege": "UpdateWebHook",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:amplify:${Region}:${Account}:apps/${AppId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "apps"
      },
      {
        "arn": "arn:${Partition}:amplify:${Region}:${Account}:apps/${AppId}/branches/${BranchName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "branches"
      },
      {
        "arn": "arn:${Partition}:amplify:${Region}:${Account}:apps/${AppId}/branches/${BranchName}/jobs/${JobId}",
        "condition_keys": [],
        "resource": "jobs"
      },
      {
        "arn": "arn:${Partition}:amplify:${Region}:${Account}:apps/${AppId}/domains/${DomainName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "domains"
      }
    ],
    "service_name": "AWS Amplify"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "",
        "type": "String"
      }
    ],
    "prefix": "apigateway",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Used to delete resources",
        "privilege": "DELETE",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apigateway-general*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Used to get information about resources",
        "privilege": "GET",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apigateway-general*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used to update resources",
        "privilege": "PATCH",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apigateway-general*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used to create child resources",
        "privilege": "POST",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apigateway-general*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used to update resources (and, although not recommended, can be used to create child resources)",
        "privilege": "PUT",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apigateway-general*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Gives WebAcl permissions to WAF",
        "privilege": "SetWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apigateway-general*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used to update the Resource Policy for a given API",
        "privilege": "UpdateRestApiPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apigateway-general*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:apigateway:${Region}::${ApiGatewayResourcePath}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "apigateway-general"
      }
    ],
    "service_name": "Manage Amazon API Gateway"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters 'Create' requests based on the allowed set of values for a specified tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters access based on a tag key-value pair assigned to the AWS resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters 'Create' requests based on whether mandatory tags are included in the request",
        "type": "String"
      }
    ],
    "prefix": "appconfig",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to create an application",
        "privilege": "CreateApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a configuration profile",
        "privilege": "CreateConfigurationProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurationprofile*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a deployment strategy",
        "privilege": "CreateDeploymentStrategy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentstrategy*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an environment",
        "privilege": "CreateEnvironment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an application",
        "privilege": "DeleteApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a configuration profile",
        "privilege": "DeleteConfigurationProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurationprofile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a deployment strategy",
        "privilege": "DeleteDeploymentStrategy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentstrategy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an environment",
        "privilege": "DeleteEnvironment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about an application",
        "privilege": "GetApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about a configuration",
        "privilege": "GetConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurationprofile*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about a configuration profile",
        "privilege": "GetConfigurationProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurationprofile*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about a deployment",
        "privilege": "GetDeployment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deployment*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about a deployment strategy",
        "privilege": "GetDeploymentStrategy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentstrategy*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about an environment",
        "privilege": "GetEnvironment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the applications in your account",
        "privilege": "ListApplications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the configuration profiles for an application",
        "privilege": "ListConfigurationProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the deployment strategies for your account",
        "privilege": "ListDeploymentStrategies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the deployments for an environment",
        "privilege": "ListDeployments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the environments for an application",
        "privilege": "ListEnvironments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view a list of resource tags for a specified resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurationprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deployment"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentstrategy"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to initiate a deployment",
        "privilege": "StartDeployment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurationprofile*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deployment*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentstrategy*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop a deployment",
        "privilege": "StopDeployment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deployment*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to tag an appconfig resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurationprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deployment"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentstrategy"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to untag an appconfig resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurationprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deployment"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentstrategy"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an application",
        "privilege": "UpdateApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify a configuration profile",
        "privilege": "UpdateConfigurationProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurationprofile*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify a deployment strategy",
        "privilege": "UpdateDeploymentStrategy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentstrategy*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an environment",
        "privilege": "UpdateEnvironment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to validate a configuration",
        "privilege": "ValidateConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurationprofile*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:appconfig:${Region}:${Account}:application/${ApplicationId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "application"
      },
      {
        "arn": "arn:${Partition}:appconfig:${Region}:${Account}:application/${ApplicationId}/environment/${EnvironmentId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "environment"
      },
      {
        "arn": "arn:${Partition}:appconfig:${Region}:${Account}:application/${ApplicationId}/configurationprofile/${ConfigurationProfileId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "configurationprofile"
      },
      {
        "arn": "arn:${Partition}:appconfig:${Region}:${Account}:deploymentstrategy/${DeploymentStrategyId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "deploymentstrategy"
      },
      {
        "arn": "arn:${Partition}:appconfig:${Region}:${Account}:application/${ApplicationId}/environment/${EnvironmentId}/deployment/${DeploymentNumber}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "deployment"
      }
    ],
    "service_name": "AWS AppConfig"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value associated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of mandatory tags in the request",
        "type": "String"
      }
    ],
    "prefix": "appflow",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to create a login profile to be used with AppFlow flows",
        "privilege": "CreateConnectorProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an AppFlow flow",
        "privilege": "CreateFlow",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a login profile set up for use with AppFlow",
        "privilege": "DeleteConnectorProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connectorprofile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an AppFlow flow",
        "privilege": "DeleteFlow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "flow*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe all fields supported by AppFlow",
        "privilege": "DescribeConnectorFields",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connectorprofile*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe all login profiles configured in AppFlow",
        "privilege": "DescribeConnectorProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe all connectors supported by AppFlow",
        "privilege": "DescribeConnectors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe all flow executions for a flow configured in AppFlow",
        "privilege": "DescribeFlowExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "flow*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe all flows configured in AppFlow",
        "privilege": "DescribeFlows",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list all fields supported by AppFlow",
        "privilege": "ListConnectorFields",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connectorprofile*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list tags for a flow",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "flow*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to run a flow configured in AppFlow",
        "privilege": "RunFlow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "flow*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to tag a flow",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "flow*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to untag a flow",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "flow*"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an AppFlow flow",
        "privilege": "UpdateFlow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "flow*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:appflow::${Account}:flow/${flowName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "flow"
      },
      {
        "arn": "arn:${Partition}:appflow::${Account}:connectorprofile/${profileName}",
        "condition_keys": [],
        "resource": "connectorprofile"
      }
    ],
    "service_name": "Amazon AppFlow"
  },
  {
    "conditions": [],
    "prefix": "application-autoscaling",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Deletes an Application Auto Scaling scaling policy that was previously created.",
        "privilege": "DeleteScalingPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an Application Auto Scaling scheduled action that was previously created.",
        "privilege": "DeleteScheduledAction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deregisters a scalable target that was previously registered.",
        "privilege": "DeregisterScalableTarget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Provides descriptive information for scalable targets with a specified service namespace.",
        "privilege": "DescribeScalableTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Provides descriptive information for scaling activities with a specified service namespace for the previous six weeks.",
        "privilege": "DescribeScalingActivities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Provides descriptive information for scaling policies with a specified service namespace.",
        "privilege": "DescribeScalingPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Provides descriptive information for scheduled actions with a specified service namespace.",
        "privilege": "DescribeScheduledActions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates a policy for an existing Application Auto Scaling scalable target.",
        "privilege": "PutScalingPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates a scheduled action for an existing Application Auto Scaling scalable target.",
        "privilege": "PutScheduledAction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers or updates a scalable target. A scalable target is a resource that can be scaled out or in with Application Auto Scaling.",
        "privilege": "RegisterScalableTarget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Application Auto Scaling"
  },
  {
    "conditions": [],
    "prefix": "applicationinsights",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates an application from a resource group",
        "privilege": "CreateApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a component from a group of resources",
        "privilege": "CreateComponent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an application",
        "privilege": "DeleteApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a component",
        "privilege": "DeleteComponent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an application",
        "privilege": "DescribeApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a component",
        "privilege": "DescribeComponent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a component configuration",
        "privilege": "DescribeComponentConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe the recommended application component configuration",
        "privilege": "DescribeComponentConfigurationRecommendation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an observation",
        "privilege": "DescribeObservation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a problem",
        "privilege": "DescribeProblem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the observation in a problem",
        "privilege": "DescribeProblemObservations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all applications",
        "privilege": "ListApplications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List an application's components",
        "privilege": "ListComponents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the problems in an application",
        "privilege": "ListProblems",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an application",
        "privilege": "UpdateApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a component",
        "privilege": "UpdateComponent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a component configuration",
        "privilege": "UpdateComponentConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "CloudWatch Application Insights"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request.",
        "type": "String"
      }
    ],
    "prefix": "appmesh",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a service mesh.",
        "privilege": "CreateMesh",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mesh*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a route that is associated with a virtual router.",
        "privilege": "CreateRoute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "route*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a virtual node within a service mesh.",
        "privilege": "CreateVirtualNode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualService"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a virtual router within a service mesh.",
        "privilege": "CreateVirtualRouter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a virtual service within a service mesh.",
        "privilege": "CreateVirtualService",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualService*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing service mesh.",
        "privilege": "DeleteMesh",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mesh*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing route.",
        "privilege": "DeleteRoute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "route*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing virtual node.",
        "privilege": "DeleteVirtualNode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing virtual router.",
        "privilege": "DeleteVirtualRouter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing virtual service.",
        "privilege": "DeleteVirtualService",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualService*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an existing service mesh.",
        "privilege": "DescribeMesh",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mesh*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an existing route.",
        "privilege": "DescribeRoute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "route*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an existing virtual node.",
        "privilege": "DescribeVirtualNode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an existing virtual router.",
        "privilege": "DescribeVirtualRouter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an existing virtual service.",
        "privilege": "DescribeVirtualService",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualService*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of existing service meshes.",
        "privilege": "ListMeshes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of existing routes in a service mesh.",
        "privilege": "ListRoutes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the tags for an App Mesh resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mesh"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "route"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualService"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of existing virtual nodes.",
        "privilege": "ListVirtualNodes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mesh*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of existing virtual routers in a service mesh.",
        "privilege": "ListVirtualRouters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of existing virtual services in a service mesh.",
        "privilege": "ListVirtualServices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualService*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Allows an Envoy Proxy to receive streamed resources for a VirtualNode.",
        "privilege": "StreamAggregatedResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates the specified tags to a resource with the specified resourceArn.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mesh"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "route"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualService"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes specified tags from a resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mesh"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "route"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualService"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing service mesh.",
        "privilege": "UpdateMesh",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mesh*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing route for a specified service mesh and virtual router.",
        "privilege": "UpdateRoute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "route*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing virtual node in a specified service mesh.",
        "privilege": "UpdateVirtualNode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing virtual router in a specified service mesh.",
        "privilege": "UpdateVirtualRouter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing virtual service in a specified service mesh.",
        "privilege": "UpdateVirtualService",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mesh*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:appmesh:${Region}:${Account}:mesh/${MeshName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "mesh"
      },
      {
        "arn": "arn:${Partition}:appmesh:${Region}:${Account}:mesh/${MeshName}/virtualService/${VirtualServiceName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "virtualService"
      },
      {
        "arn": "arn:${Partition}:appmesh:${Region}:${Account}:mesh/${MeshName}/virtualNode/${VirtualNodeName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "virtualNode"
      },
      {
        "arn": "arn:${Partition}:appmesh:${Region}:${Account}:mesh/${MeshName}/virtualRouter/${VirtualRouterName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "virtualRouter"
      },
      {
        "arn": "arn:${Partition}:appmesh:${Region}:${Account}:mesh/${MeshName}/virtualRouter/${VirtualRouterName}/route/${RouteName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "route"
      }
    ],
    "service_name": "AWS App Mesh"
  },
  {
    "conditions": [],
    "prefix": "appmesh-preview",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a service mesh.",
        "privilege": "CreateMesh",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mesh*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a route that is associated with a virtual router.",
        "privilege": "CreateRoute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "route*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a virtual node within a service mesh.",
        "privilege": "CreateVirtualNode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualService"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a virtual router within a service mesh.",
        "privilege": "CreateVirtualRouter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a virtual service within a service mesh.",
        "privilege": "CreateVirtualService",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualService*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing service mesh.",
        "privilege": "DeleteMesh",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mesh*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing route.",
        "privilege": "DeleteRoute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "route*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing virtual node.",
        "privilege": "DeleteVirtualNode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing virtual router.",
        "privilege": "DeleteVirtualRouter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing virtual service.",
        "privilege": "DeleteVirtualService",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualService*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an existing service mesh.",
        "privilege": "DescribeMesh",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mesh*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an existing route.",
        "privilege": "DescribeRoute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "route*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an existing virtual node.",
        "privilege": "DescribeVirtualNode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an existing virtual router.",
        "privilege": "DescribeVirtualRouter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an existing virtual service.",
        "privilege": "DescribeVirtualService",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualService*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of existing service meshes.",
        "privilege": "ListMeshes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of existing routes in a service mesh.",
        "privilege": "ListRoutes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of existing virtual nodes.",
        "privilege": "ListVirtualNodes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mesh*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of existing virtual routers in a service mesh.",
        "privilege": "ListVirtualRouters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of existing virtual services in a service mesh.",
        "privilege": "ListVirtualServices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualService*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Allows an Envoy Proxy to receive streamed resources for a VirtualNode.",
        "privilege": "StreamAggregatedResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing service mesh.",
        "privilege": "UpdateMesh",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mesh*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing route for a specified service mesh and virtual router.",
        "privilege": "UpdateRoute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "route*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing virtual node in a specified service mesh.",
        "privilege": "UpdateVirtualNode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing virtual router in a specified service mesh.",
        "privilege": "UpdateVirtualRouter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing virtual service in a specified service mesh.",
        "privilege": "UpdateVirtualService",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mesh*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualNode"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "virtualRouter"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/${MeshName}",
        "condition_keys": [],
        "resource": "mesh"
      },
      {
        "arn": "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/${MeshName}/virtualService/${VirtualServiceName}",
        "condition_keys": [],
        "resource": "virtualService"
      },
      {
        "arn": "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/${MeshName}/virtualNode/${VirtualNodeName}",
        "condition_keys": [],
        "resource": "virtualNode"
      },
      {
        "arn": "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/${MeshName}/virtualRouter/${VirtualRouterName}",
        "condition_keys": [],
        "resource": "virtualRouter"
      },
      {
        "arn": "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/${MeshName}/virtualRouter/${VirtualRouterName}/route/${RouteName}",
        "condition_keys": [],
        "resource": "route"
      }
    ],
    "service_name": "AWS App Mesh Preview"
  },
  {
    "conditions": [
      {
        "condition": "appstream:userId",
        "description": "Filters access by the ID of the AppStream 2.0 user",
        "type": "String"
      },
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "appstream",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to associate the specified fleet with the specified stack",
        "privilege": "AssociateFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate the specified users with the specified stacks. Users in a user pool cannot be assigned to stacks with fleets that are joined to an Active Directory domain",
        "privilege": "BatchAssociateUserStack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate the specified users from the specified stacks",
        "privilege": "BatchDisassociateUserStack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to copy the specified image within the same Region or to a new Region within the same AWS account",
        "privilege": "CopyImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a Directory Config object in AppStream 2.0. This object includes the configuration information required to join fleets and image builders to Microsoft Active Directory domains",
        "privilege": "CreateDirectoryConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a fleet. A fleet is a group of streaming instances from which applications are launched and streamed to users",
        "privilege": "CreateFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an image builder. An image builder is a virtual machine that is used to create an image",
        "privilege": "CreateImageBuilder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image-builder*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a URL to start an image builder streaming session",
        "privilege": "CreateImageBuilderStreamingURL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image-builder*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a stack to start streaming applications to users. A stack consists of an associated fleet, user access policies, and storage configurations",
        "privilege": "CreateStack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a temporary URL to start an AppStream 2.0 streaming session for the specified user. A streaming URL enables application streaming to be tested without user setup",
        "privilege": "CreateStreamingURL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a usage report subscription. Usage reports are generated daily",
        "privilege": "CreateUsageReportSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new user in the user pool",
        "privilege": "CreateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified Directory Config object from AppStream 2.0. This object includes the configuration information required to join fleets and image builders to Microsoft Active Directory domains",
        "privilege": "DeleteDirectoryConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified fleet",
        "privilege": "DeleteFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified image. An image cannot be deleted when it is in use",
        "privilege": "DeleteImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified image builder and release capacity",
        "privilege": "DeleteImageBuilder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image-builder*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete permissions for the specified private image",
        "privilege": "DeleteImagePermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified stack. After the stack is deleted, the application streaming environment provided by the stack is no longer available to users. Also, any reservations made for application streaming sessions for the stack are released",
        "privilege": "DeleteStack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable usage report generation",
        "privilege": "DeleteUsageReportSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a user from the user pool",
        "privilege": "DeleteUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list that describes one or more specified Directory Config objects for AppStream 2.0, if the names for these objects are provided. Otherwise, all Directory Config objects in the account are described. This object includes the configuration information required to join fleets and image builders to Microsoft Active Directory domains",
        "privilege": "DescribeDirectoryConfigs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list that describes one or more specified fleets, if the fleet names are provided. Otherwise, all fleets in the account are described",
        "privilege": "DescribeFleets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list that describes one or more specified image builders, if the image builder names are provided. Otherwise, all image builders in the account are described",
        "privilege": "DescribeImageBuilders",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image-builder"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list that describes the permissions for shared AWS account IDs on a private image that you own",
        "privilege": "DescribeImagePermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list that describes one or more specified images, if the image names or image ARNs are provided. Otherwise, all images in the account are described",
        "privilege": "DescribeImages",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list that describes the streaming sessions for the specified stack and fleet. If a user ID is provided for the stack and fleet, only the streaming sessions for that user are described",
        "privilege": "DescribeSessions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list that describes one or more specified stacks, if the stack names are provided. Otherwise, all stacks in the account are described",
        "privilege": "DescribeStacks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list that describes one or more usage report subscriptions",
        "privilege": "DescribeUsageReportSubscriptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list that describes the UserStackAssociation objects",
        "privilege": "DescribeUserStackAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list that describes users in the user pool",
        "privilege": "DescribeUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable the specified user in the user pool. This action does not delete the user",
        "privilege": "DisableUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate the specified fleet from the specified stack",
        "privilege": "DisassociateFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable a user in the user pool",
        "privilege": "EnableUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to immediately stop the specified streaming session",
        "privilege": "ExpireSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list that describes one or more specified image builders, if the image builder names are provided. Otherwise, all image builders in the account are described",
        "privilege": "GetImageBuilders",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to upload theme assets",
        "privilege": "GetParametersForThemeAssetUpload",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the name of the fleet that is associated with the specified stack",
        "privilege": "ListAssociatedFleets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the name of the stack with which the specified fleet is associated",
        "privilege": "ListAssociatedStacks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of all tags for the specified AppStream 2.0 resource. The following resources can be tagged: Image builders, images, fleets, and stacks",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start the specified fleet",
        "privilege": "StartFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start the specified image builder",
        "privilege": "StartImageBuilder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image-builder*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop the specified fleet",
        "privilege": "StopFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop the specified image builder",
        "privilege": "StopImageBuilder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image-builder*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to federated users to sign in by using their existing credentials and stream applications from the specified stack",
        "privilege": "Stream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "appstream:userId"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add or overwrite one or more tags for the specified AppStream 2.0 resource. The following resources can be tagged: Image builders, images, fleets, and stacks",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image-builder"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to disassociate one or more tags from the specified AppStream 2.0 resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image-builder"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the specified Directory Config object in AppStream 2.0. This object includes the configuration information required to join fleets and image builders to Microsoft Active Directory domains",
        "privilege": "UpdateDirectoryConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the specified fleet. All attributes except the fleet name can be updated when the fleet is in the STOPPED state",
        "privilege": "UpdateFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add or update permissions for the specified private image",
        "privilege": "UpdateImagePermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the specified fields for the specified stack",
        "privilege": "UpdateStack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:appstream:${Region}:${Account}:fleet/${FleetName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "fleet"
      },
      {
        "arn": "arn:${Partition}:appstream:${Region}:${Account}:image/${ImageName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "image"
      },
      {
        "arn": "arn:${Partition}:appstream:${Region}:${Account}:image-builder/${ImageBuilderName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "image-builder"
      },
      {
        "arn": "arn:${Partition}:appstream:${Region}:${Account}:stack/${StackName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "stack"
      }
    ],
    "service_name": "Amazon AppStream 2.0"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "appsync",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a unique key that you can distribute to clients who are executing your API.",
        "privilege": "CreateApiKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a DataSource object.",
        "privilege": "CreateDataSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new Function object.",
        "privilege": "CreateFunction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a GraphqlApi object, which is the top level AppSync resource.",
        "privilege": "CreateGraphqlApi",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a Resolver object. A resolver converts incoming requests into a format that a data source can understand, and converts the data source's responses into GraphQL.",
        "privilege": "CreateResolver",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a Type object.",
        "privilege": "CreateType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an API key.",
        "privilege": "DeleteApiKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a DataSource object.",
        "privilege": "DeleteDataSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a Function object.",
        "privilege": "DeleteFunction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a GraphqlApi object. This will also clean up every AppSync resource below that API.",
        "privilege": "DeleteGraphqlApi",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "graphqlapi*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a Resolver object.",
        "privilege": "DeleteResolver",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a Type object.",
        "privilege": "DeleteType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a DataSource object.",
        "privilege": "GetDataSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a Function object.",
        "privilege": "GetFunction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a GraphqlApi object.",
        "privilege": "GetGraphqlApi",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "graphqlapi*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the introspection schema for a GraphQL API.",
        "privilege": "GetIntrospectionSchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a Resolver object.",
        "privilege": "GetResolver",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the current status of a schema creation operation.",
        "privilege": "GetSchemaCreationStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a Type object.",
        "privilege": "GetType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sends a GraphQL query to a GraphQL API.",
        "privilege": "GraphQL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "field*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "graphqlapi*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the API keys for a given API.",
        "privilege": "ListApiKeys",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the data sources for a given API.",
        "privilege": "ListDataSources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the functions for a given API.",
        "privilege": "ListFunctions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists your GraphQL APIs.",
        "privilege": "ListGraphqlApis",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the resolvers for a given API and type.",
        "privilege": "ListResolvers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the resolvers that are associated with a specific function.",
        "privilege": "ListResolversByFunction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "List the tags for a resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "graphqlapi"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the types for a given API.",
        "privilege": "ListTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds a new schema to your GraphQL API. This operation is asynchronous - GetSchemaCreationStatus can show when it has completed.",
        "privilege": "StartSchemaCreation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Tag a resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "graphqlapi"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:ResourceTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Untag a resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "graphqlapi"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an API key for a given API.",
        "privilege": "UpdateApiKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a DataSource object.",
        "privilege": "UpdateDataSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing Function object.",
        "privilege": "UpdateFunction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a GraphqlApi object.",
        "privilege": "UpdateGraphqlApi",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "graphqlapi*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a Resolver object.",
        "privilege": "UpdateResolver",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a Type object.",
        "privilege": "UpdateType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}/datasources/${DatasourceName}",
        "condition_keys": [],
        "resource": "datasource"
      },
      {
        "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "graphqlapi"
      },
      {
        "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}/types/${TypeName}/fields/${FieldName}",
        "condition_keys": [],
        "resource": "field"
      },
      {
        "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}/types/${TypeName}",
        "condition_keys": [],
        "resource": "type"
      },
      {
        "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}/functions/${FunctionId}",
        "condition_keys": [],
        "resource": "function"
      }
    ],
    "service_name": "AWS AppSync"
  },
  {
    "conditions": [],
    "prefix": "arsenal",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to register AWS provided data collectors to the Application Discovery Service",
        "privilege": "RegisterOnPremisesAgent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Application Discovery Arsenal"
  },
  {
    "conditions": [],
    "prefix": "artifact",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to accept an AWS agreement that has not yet been accepted by the customer account.",
        "privilege": "AcceptAgreement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "agreement*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to download an AWS agreement that has not yet been accepted or a customer agreement that has been accepted by the customer account.",
        "privilege": "DownloadAgreement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "agreement"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "customer-agreement"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to download an AWS compliance report package.",
        "privilege": "Get",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "report-package*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to terminate a customer agreement that was previously accepted by the customer account.",
        "privilege": "TerminateAgreement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "customer-agreement*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:artifact:::report-package/*",
        "condition_keys": [],
        "resource": "report-package"
      },
      {
        "arn": "arn:${Partition}:artifact::${Account}:customer-agreement/*",
        "condition_keys": [],
        "resource": "customer-agreement"
      },
      {
        "arn": "arn:${Partition}:artifact:::agreement/*",
        "condition_keys": [],
        "resource": "agreement"
      }
    ],
    "service_name": "AWS Artifact"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "athena",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Grants permissions to get information about one or more named queries.",
        "privilege": "BatchGetNamedQuery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permissions to get information about one or more query executions.",
        "privilege": "BatchGetQueryExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deprecated. Applies only to AWS services and principals that use Athena JDBC driver earlier than 1.1.0. Use StopQueryExecution otherwise.",
        "privilege": "CancelQueryExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to create a named query.",
        "privilege": "CreateNamedQuery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permissions to create a workgroup.",
        "privilege": "CreateWorkGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to delete a named query specified.",
        "privilege": "DeleteNamedQuery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to delete a workgroup.",
        "privilege": "DeleteWorkGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Applies only to AWS services managed policy and principals that use an Athena JDBC driver version 1.1.0. Grants permissions to enable access to databases and tables.",
        "privilege": "GetCatalogs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Applies only to AWS services managed policy and principals that use an Athena JDBC driver version 1.1.0. Grants permissions to enable access to the specified database and table.",
        "privilege": "GetExecutionEngine",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Applies only to AWS services managed policy and principals that use an Athena JDBC driver version 1.1.0. Grants permissions to enable access to databases and tables.",
        "privilege": "GetExecutionEngines",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permissions to get information about the specified named query.",
        "privilege": "GetNamedQuery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Applies only to AWS services managed policy and principals that use an Athena JDBC driver version 1.1.0. Grants permissions to enable access to the specified database and table.",
        "privilege": "GetNamespace",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Applies only to AWS services managed policy and principals that use an Athena JDBC driver version 1.1.0. Grants permissions to enable access to databases and tables.",
        "privilege": "GetNamespaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permissions to get information about the specified query execution.",
        "privilege": "GetQueryExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Deprecated. Applies only to AWS services and principals that use Athena JDBC driver earlier than 1.1.0. Use ListQueryExecutions otherwise.",
        "privilege": "GetQueryExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permissions to get the query results.",
        "privilege": "GetQueryResults",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permissions to get the query results stream.",
        "privilege": "GetQueryResultsStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Applies only to AWS services managed policy and principals that use an Athena JDBC driver version 1.1.0. Grants permissions to enable access to the specified table.",
        "privilege": "GetTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Applies only to AWS services managed policy and principals that use an Athena JDBC driver version 1.1.0. Grants permissions to enable access to tables.",
        "privilege": "GetTables",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permissions to get a workgroup.",
        "privilege": "GetWorkGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to return a list of named queries in Amazon Athena for the specified AWS account.",
        "privilege": "ListNamedQueries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to return a list of query executions for the specified AWS account.",
        "privilege": "ListQueryExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permissions to return a list of tags for a workgroup.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to return a list of workgroups for the specified AWS account.",
        "privilege": "ListWorkGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deprecated. Applies only to AWS services and principals that use Athena JDBC driver earlier than 1.1.0. Use StartQueryExecution otherwise.",
        "privilege": "RunQuery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to start a query execution using an SQL query provided as a string.",
        "privilege": "StartQueryExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to stop the specified query execution.",
        "privilege": "StopQueryExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permissions to add a tag to a workgroup.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permissions to remove a tag from a workgroup.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to update a workgroup.",
        "privilege": "UpdateWorkGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workgroup*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:athena:${Region}:${Account}:workgroup/${WorkGroupName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "workgroup"
      }
    ],
    "service_name": "Amazon Athena"
  },
  {
    "conditions": [
      {
        "condition": "autoscaling:ImageId",
        "description": "The AMI used to create the instance.",
        "type": "String"
      },
      {
        "condition": "autoscaling:InstanceType",
        "description": "The type of instance, in terms of the hardware resources available.",
        "type": "String"
      },
      {
        "condition": "autoscaling:InstanceTypes",
        "description": "The types of instances, in terms of the hardware resources available.",
        "type": "String"
      },
      {
        "condition": "autoscaling:LaunchConfigurationName",
        "description": "The name of a launch configuration.",
        "type": "String"
      },
      {
        "condition": "autoscaling:LaunchTemplateVersionSpecified",
        "description": "Filters access by whether users can specify any version of a launch template or only the Latest or Default version",
        "type": "Bool"
      },
      {
        "condition": "autoscaling:LoadBalancerNames",
        "description": "The name of the load balancer.",
        "type": "String"
      },
      {
        "condition": "autoscaling:MaxSize",
        "description": "The maximum scaling size.",
        "type": "Numeric"
      },
      {
        "condition": "autoscaling:MinSize",
        "description": "The minimum scaling size.",
        "type": "Numeric"
      },
      {
        "condition": "autoscaling:ResourceTag/${TagKey}",
        "description": "The value of a tag attached to a resource.",
        "type": "String"
      },
      {
        "condition": "autoscaling:SpotPrice",
        "description": "The spot price associated with an instance.",
        "type": "Numeric"
      },
      {
        "condition": "autoscaling:TargetGroupARNs",
        "description": "The ARN of a target group.",
        "type": "ARN"
      },
      {
        "condition": "autoscaling:VPCZoneIdentifiers",
        "description": "The identifier of a VPC zone.",
        "type": "String"
      },
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "The value of a tag associated with the request.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value associated with the resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters create requests based on the presence of mandatory tags in the request.",
        "type": "String"
      }
    ],
    "prefix": "autoscaling",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Attaches one or more EC2 instances to the specified Auto Scaling group.",
        "privilege": "AttachInstances",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Attaches one or more target groups to the specified Auto Scaling group.",
        "privilege": "AttachLoadBalancerTargetGroups",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          },
          {
            "condition_keys": [
              "autoscaling:TargetGroupARNs"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Attaches one or more load balancers to the specified Auto Scaling group.",
        "privilege": "AttachLoadBalancers",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          },
          {
            "condition_keys": [
              "autoscaling:LoadBalancerNames"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified scheduled actions.",
        "privilege": "BatchDeleteScheduledAction",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates multiple scheduled scaling actions for an Auto Scaling group.",
        "privilege": "BatchPutScheduledUpdateGroupAction",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Completes the lifecycle action for the specified token or instance with the specified result.",
        "privilege": "CompleteLifecycleAction",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates an Auto Scaling group with the specified name and attributes.",
        "privilege": "CreateAutoScalingGroup",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          },
          {
            "condition_keys": [
              "autoscaling:InstanceTypes",
              "autoscaling:LaunchConfigurationName",
              "autoscaling:LaunchTemplateVersionSpecified",
              "autoscaling:LoadBalancerNames",
              "autoscaling:MaxSize",
              "autoscaling:MinSize",
              "autoscaling:TargetGroupARNs",
              "autoscaling:VPCZoneIdentifiers",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a launch configuration.",
        "privilege": "CreateLaunchConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "launchConfiguration*"
          },
          {
            "condition_keys": [
              "autoscaling:ImageId",
              "autoscaling:InstanceType",
              "autoscaling:SpotPrice"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates or updates tags for the specified Auto Scaling group.",
        "privilege": "CreateOrUpdateTags",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified Auto Scaling group.",
        "privilege": "DeleteAutoScalingGroup",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified launch configuration.",
        "privilege": "DeleteLaunchConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "launchConfiguration*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified lifecycle hook.",
        "privilege": "DeleteLifecycleHook",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified notification.",
        "privilege": "DeleteNotificationConfiguration",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified Auto Scaling policy.",
        "privilege": "DeletePolicy",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified scheduled action.",
        "privilege": "DeleteScheduledAction",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Deletes the specified tags.",
        "privilege": "DeleteTags",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the current Auto Scaling resource limits for your AWS account.",
        "privilege": "DescribeAccountLimits",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the policy adjustment types for use with PutScalingPolicy.",
        "privilege": "DescribeAdjustmentTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes one or more Auto Scaling groups. If a list of names is not provided, the call describes all Auto Scaling groups.",
        "privilege": "DescribeAutoScalingGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes one or more Auto Scaling instances. If a list is not provided, the call describes all instances.",
        "privilege": "DescribeAutoScalingInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the notification types that are supported by Auto Scaling.",
        "privilege": "DescribeAutoScalingNotificationTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes one or more launch configurations. If you omit the list of names, then the call describes all launch configurations.",
        "privilege": "DescribeLaunchConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the available types of lifecycle hooks.",
        "privilege": "DescribeLifecycleHookTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the lifecycle hooks for the specified Auto Scaling group.",
        "privilege": "DescribeLifecycleHooks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the target groups for the specified Auto Scaling group.",
        "privilege": "DescribeLoadBalancerTargetGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the load balancers for the specified Auto Scaling group.",
        "privilege": "DescribeLoadBalancers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the available CloudWatch metrics for Auto Scaling.",
        "privilege": "DescribeMetricCollectionTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the notification actions associated with the specified Auto Scaling group.",
        "privilege": "DescribeNotificationConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the policies for the specified Auto Scaling group.",
        "privilege": "DescribePolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes one or more scaling activities for the specified Auto Scaling group.",
        "privilege": "DescribeScalingActivities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the scaling process types for use with ResumeProcesses and SuspendProcesses.",
        "privilege": "DescribeScalingProcessTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the actions scheduled for your Auto Scaling group that haven't run.",
        "privilege": "DescribeScheduledActions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified tags.",
        "privilege": "DescribeTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the termination policies supported by Auto Scaling.",
        "privilege": "DescribeTerminationPolicyTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes one or more instances from the specified Auto Scaling group.",
        "privilege": "DetachInstances",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Detaches one or more target groups from the specified Auto Scaling group.",
        "privilege": "DetachLoadBalancerTargetGroups",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          },
          {
            "condition_keys": [
              "autoscaling:TargetGroupARNs"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes one or more load balancers from the specified Auto Scaling group.",
        "privilege": "DetachLoadBalancers",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          },
          {
            "condition_keys": [
              "autoscaling:LoadBalancerNames"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disables monitoring of the specified metrics for the specified Auto Scaling group.",
        "privilege": "DisableMetricsCollection",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables monitoring of the specified metrics for the specified Auto Scaling group.",
        "privilege": "EnableMetricsCollection",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Moves the specified instances into Standby mode.",
        "privilege": "EnterStandby",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Executes the specified policy.",
        "privilege": "ExecutePolicy",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Moves the specified instances out of Standby mode.",
        "privilege": "ExitStandby",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates a lifecycle hook for the specified Auto Scaling Group.",
        "privilege": "PutLifecycleHook",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Configures an Auto Scaling group to send notifications when specified events take place.",
        "privilege": "PutNotificationConfiguration",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates a policy for an Auto Scaling group.",
        "privilege": "PutScalingPolicy",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates a scheduled scaling action for an Auto Scaling group.",
        "privilege": "PutScheduledUpdateGroupAction",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          },
          {
            "condition_keys": [
              "autoscaling:MaxSize",
              "autoscaling:MinSize"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Records a heartbeat for the lifecycle action associated with the specified token or instance.",
        "privilege": "RecordLifecycleActionHeartbeat",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Resumes the specified suspended Auto Scaling processes, or all suspended process, for the specified Auto Scaling group.",
        "privilege": "ResumeProcesses",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the size of the specified Auto Scaling group.",
        "privilege": "SetDesiredCapacity",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the health status of the specified instance.",
        "privilege": "SetInstanceHealth",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the instance protection settings of the specified instances.",
        "privilege": "SetInstanceProtection",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Suspends the specified Auto Scaling processes, or all processes, for the specified Auto Scaling group.",
        "privilege": "SuspendProcesses",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Terminates the specified instance and optionally adjusts the desired group size.",
        "privilege": "TerminateInstanceInAutoScalingGroup",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the configuration for the specified Auto Scaling group.",
        "privilege": "UpdateAutoScalingGroup",
        "resource_types": [
          {
            "condition_keys": [
              "autoscaling:ResourceTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "autoScalingGroup*"
          },
          {
            "condition_keys": [
              "autoscaling:InstanceTypes",
              "autoscaling:LaunchConfigurationName",
              "autoscaling:LaunchTemplateVersionSpecified",
              "autoscaling:MaxSize",
              "autoscaling:MinSize",
              "autoscaling:VPCZoneIdentifiers"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:autoscaling:${Region}:${Account}:autoScalingGroup:${GroupId}:autoScalingGroupName/${GroupFriendlyName}",
        "condition_keys": [
          "autoscaling:ResourceTag/${TagKey}",
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "autoScalingGroup"
      },
      {
        "arn": "arn:${Partition}:autoscaling:${Region}:${Account}:launchConfiguration:${Id}:launchConfigurationName/${LaunchConfigurationName}",
        "condition_keys": [],
        "resource": "launchConfiguration"
      }
    ],
    "service_name": "Amazon EC2 Auto Scaling"
  },
  {
    "conditions": [],
    "prefix": "autoscaling-plans",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a scaling plan.",
        "privilege": "CreateScalingPlan",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified scaling plan.",
        "privilege": "DeleteScalingPlan",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the scalable resources in the specified scaling plan.",
        "privilege": "DescribeScalingPlanResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified scaling plans or all of your scaling plans.",
        "privilege": "DescribeScalingPlans",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the forecast data for a scalable resource.",
        "privilege": "GetScalingPlanResourceForecastData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a scaling plan.",
        "privilege": "UpdateScalingPlan",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Auto Scaling"
  },
  {
    "conditions": [],
    "prefix": "aws-marketplace",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Allows users to approve an incoming subscription request (for providers who provide products that require subscription verification).",
        "privilege": "AcceptAgreementApprovalRequest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows users to cancel pending subscription requests for products that require subscription verification.",
        "privilege": "CancelAgreementRequest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Allows users to view the details of their incoming subscription requests (for providers who provide products that require subscription verification).",
        "privilege": "GetAgreementApprovalRequest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Allows users to view the details of their subscription requests for data products that require subscription verification.",
        "privilege": "GetAgreementRequest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Allows users to list their incoming subscription requests (for providers who provide products that require subscription verification).",
        "privilege": "ListAgreementApprovalRequests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Allows users to list their subscription requests for products that require subscription verification.",
        "privilege": "ListAgreementRequests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows users to decline an incoming subscription requests (for providers who provide products that require subscription verification).",
        "privilege": "RejectAgreementApprovalRequest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows users to subscribe to AWS Marketplace products. Includes the ability to send a subscription request for products that require subscription verification. Includes the ability to enable auto-renewal for an existing subscription.",
        "privilege": "Subscribe",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows users to remove subscriptions to AWS Marketplace products. Includes the ability to disable auto-renewal for an existing subscription.",
        "privilege": "Unsubscribe",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows users to make changes to an incoming subscription request, including the ability to delete the prospective subscriber's information (for providers who provide products that require subscription verification).",
        "privilege": "UpdateAgreementApprovalRequest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Allows users to see their account's subscriptions.",
        "privilege": "ViewSubscriptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Marketplace"
  },
  {
    "conditions": [
      {
        "condition": "catalog:ChangeType",
        "description": "Enables you to verify change type in the StartChangeSet request.",
        "type": "String"
      }
    ],
    "prefix": "aws-marketplace",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Cancels a running change set.",
        "privilege": "CancelChangeSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Complete an existing task and submit the content to the associated change.",
        "privilege": "CompleteTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the details of an existing change set.",
        "privilege": "DescribeChangeSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the details of an existing entity.",
        "privilege": "DescribeEntity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the details of an existing task.",
        "privilege": "DescribeTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists existing change sets.",
        "privilege": "ListChangeSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists existing entities.",
        "privilege": "ListEntities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists existing tasks.",
        "privilege": "ListTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Requests a new change set.",
        "privilege": "StartChangeSet",
        "resource_types": [
          {
            "condition_keys": [
              "catalog:ChangeType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the content of an existing task.",
        "privilege": "UpdateTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:aws-marketplace:${Region}:${Account}:${Catalog}/${EntityType}/${ResourceId}",
        "condition_keys": [],
        "resource": "Entity"
      },
      {
        "arn": "arn:${Partition}:aws-marketplace:${Region}:${Account}:${Catalog}/ChangeSet/${ResourceId}",
        "condition_keys": [],
        "resource": "ChangeSet"
      }
    ],
    "service_name": "AWS Marketplace Catalog"
  },
  {
    "conditions": [],
    "prefix": "aws-marketplace",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Adds new approved products to the Private Marketplace. Also allows to approve a request for a product to be associated with the Private Marketplace. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization's Service Control Policies allow it.",
        "privilege": "AssociateProductsWithPrivateMarketplace",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a Private Marketplace for the individual account, or for the entire AWS Organization if one exists. This action can only be performed by the master account if using an AWS Organization.",
        "privilege": "CreatePrivateMarketplace",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a Private Marketplace Profile that customizes the white label experience on the AWS Marketplace website for the individual account, or for the entire AWS Organization if one exists. This action can only be performed by the master account if using an AWS Organization.",
        "privilege": "CreatePrivateMarketplaceProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new request for a product or products to be associated with the Private Marketplace. This action can be performed by any account in an in an AWS Organization, provided the user has permissions to do so, and the Organization's Service Control Policies allow it.",
        "privilege": "CreatePrivateMarketplaceRequests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the status of requested products in the Private Marketplace for administrative purposes. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization's Service Control Policies allow it.",
        "privilege": "DescribePrivateMarketplaceProducts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes details about the Private Marketplace Profile for administrative purposes. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization's Service Control Policies allow it.",
        "privilege": "DescribePrivateMarketplaceProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes requests and associated products in the Private Marketplace. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization's Service Control Policies allow it.",
        "privilege": "DescribePrivateMarketplaceRequests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the Private Marketplace settings. This includes setting for enabling requests from end users and preferences for notifications. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization's Service Control Policies allow it.",
        "privilege": "DescribePrivateMarketplaceSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the status of the Private Marketplace for administrative purposes. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization's Service Control Policies allow it.",
        "privilege": "DescribePrivateMarketplaceStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes approved products from the Private Marketplace. Also allows to decline a request for a product to be associated with the Private Marketplace. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization's Service Control Policies allow it.",
        "privilege": "DisassociateProductsFromPrivateMarketplace",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Queryable list for the products and status of products in the Private Marketplace for administrative purposes. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization's Service Control Policies allow it.",
        "privilege": "ListPrivateMarketplaceProducts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Queryable list for requests and associated products in the Private Marketplace. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization's Service Control Policies allow it.",
        "privilege": "ListPrivateMarketplaceRequests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts the Private Marketplace, enabling the customized AWS Marketplace experience, and enabling restrictions on the procurement of products based on what is available in the Private Marketplace. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization's Service Control Policies allow it.",
        "privilege": "StartPrivateMarketplace",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops the Private Marketplace, disabling the customized AWS Marketplace experience and removing the Private Marketplace procurement restrictions on products. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization's Service Control Policies allow it.",
        "privilege": "StopPrivateMarketplace",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the Private Marketplace Profile that customizes the white label experience on the AWS Marketplace website for the individual account, or for the entire AWS Organization if one exists. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization's Service Control Policies allow it.",
        "privilege": "UpdatePrivateMarketplaceProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the Private Marketplace settings. This includes setting for enabling requests from end users and preferences for notifications. This action can be performed by any account in an AWS Organization, provided the user has permissions to do so, and the Organization's Service Control Policies allow it.",
        "privilege": "UpdatePrivateMarketplaceSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Private Marketplace"
  },
  {
    "conditions": [],
    "prefix": "aws-marketplace",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Called from a SaaS application listed on the AWS Marketplace to post metering records for a set of customers.",
        "privilege": "BatchMeterUsage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Emits metering records.",
        "privilege": "MeterUsage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows you to verify that the customer running your paid software is subscribed to your product on AWS Marketplace, enabling you to guard against unauthorized use. Meters software use per ECS task, per hour, with usage prorated to the second.",
        "privilege": "RegisterUsage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Resolves a registration token to obtain a CustomerIdentifier and product code.",
        "privilege": "ResolveCustomer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Marketplace Metering Service"
  },
  {
    "conditions": [],
    "prefix": "aws-marketplace",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Describes the Procurement System integration configuration (e.g. Coupa) for the individual account, or for the entire AWS Organization if one exists. This action can only be performed by the master account if using an AWS Organization.",
        "privilege": "DescribeProcurementSystemConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates the Procurement System integration configuration (e.g. Coupa) for the individual account, or for the entire AWS Organization if one exists. This action can only be performed by the master account if using an AWS Organization.",
        "privilege": "PutProcurementSystemConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Marketplace Procurement Systems Integration"
  },
  {
    "conditions": [],
    "prefix": "aws-marketplace",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Describes Image Builds identified by a build Id",
        "privilege": "DescribeBuilds",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists Image Builds.",
        "privilege": "ListBuilds",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts an Image Build",
        "privilege": "StartBuild",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Marketplace Image Building Service"
  },
  {
    "conditions": [],
    "prefix": "aws-marketplace",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Retrieves entitlement values for a given product. The results can be filtered based on customer identifier or product dimensions",
        "privilege": "GetEntitlements",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Marketplace Entitlement Service"
  },
  {
    "conditions": [],
    "prefix": "aws-marketplace-management",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Allows a user to access the File Upload page inside the AWS Marketplace Management Portal.",
        "privilege": "uploadFiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Allows a user to access the Marketing page inside the AWS Marketplace Management Portal.",
        "privilege": "viewMarketing",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Allows a user to access the Reports page inside the AWS Marketplace Management Portal.",
        "privilege": "viewReports",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Allows a user to access the Settings page inside the AWS Marketplace Management Portal.",
        "privilege": "viewSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Allows a user to access the Customer Support Eligibility page inside the AWS Marketplace Management Portal.",
        "privilege": "viewSupport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Marketplace Management Portal"
  },
  {
    "conditions": [],
    "prefix": "aws-portal",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Allow or deny IAM users permission to modify Account Settings.",
        "privilege": "ModifyAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allow or deny IAM users permission to modify billing settings.",
        "privilege": "ModifyBilling",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allow or deny IAM users permission to modify payment methods.",
        "privilege": "ModifyPaymentMethods",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Allow or deny IAM users permission to view account settings.",
        "privilege": "ViewAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Allow or deny IAM users permission to view billing pages in the console.",
        "privilege": "ViewBilling",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Allow or deny IAM users permission to view payment methods.",
        "privilege": "ViewPaymentMethods",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Allow or deny IAM users permission to view AWS usage reports.",
        "privilege": "ViewUsage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Billing"
  },
  {
    "conditions": [],
    "prefix": "awsconnector",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Retrieves all health metrics that were published from the Server Migration Connector.",
        "privilege": "GetConnectorHealth",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers AWS Connector with AWS Connector Service.",
        "privilege": "RegisterConnector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Validates Server Migration Connector Id that was registered with AWS Connector Service.",
        "privilege": "ValidateConnectorId",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Connector Service"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of mandatory tags in the request",
        "type": "String"
      }
    ],
    "prefix": "backup",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Copy into a backup vault",
        "privilege": "CopyIntoBackupVault",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new backup plan",
        "privilege": "CreateBackupPlan",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupPlan*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new resource assignment in a backup plan.",
        "privilege": "CreateBackupSelection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "backupPlan*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new backup vault.",
        "privilege": "CreateBackupVault",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupVault*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a backup plan.",
        "privilege": "DeleteBackupPlan",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupPlan*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a resource assignment from a backup plan.",
        "privilege": "DeleteBackupSelection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupPlan*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a backup vault.",
        "privilege": "DeleteBackupVault",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupVault*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes backup vault access policy.",
        "privilege": "DeleteBackupVaultAccessPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupVault*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Remove notifications from backup vault.",
        "privilege": "DeleteBackupVaultNotifications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupVault*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a recovery point from a backup vault.",
        "privilege": "DeleteRecoveryPoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "recoveryPoint*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a backup job",
        "privilege": "DescribeBackupJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Creates a new backup vault with the specified name.",
        "privilege": "DescribeBackupVault",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupVault*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a copy job",
        "privilege": "DescribeCopyJob",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a protected resource.",
        "privilege": "DescribeProtectedResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a recovery point.",
        "privilege": "DescribeRecoveryPoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "recoveryPoint*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a restore job.",
        "privilege": "DescribeRestoreJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Exports a backup plan as a JSON.",
        "privilege": "ExportBackupPlanTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a backup plan.",
        "privilege": "GetBackupPlan",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupPlan*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Transforms a JSON to a backup plan.",
        "privilege": "GetBackupPlanFromJSON",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Transforms a template to a backup plan.",
        "privilege": "GetBackupPlanFromTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a backup plan resource assignment.",
        "privilege": "GetBackupSelection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupPlan*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets backup vault access policy.",
        "privilege": "GetBackupVaultAccessPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupVault*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets backup vault notifications.",
        "privilege": "GetBackupVaultNotifications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupVault*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets recovery point restore metadata.",
        "privilege": "GetRecoveryPointRestoreMetadata",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "recoveryPoint*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets supported resource types.",
        "privilege": "GetSupportedResourceTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists backup jobs.",
        "privilege": "ListBackupJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists backup plan templates provided by AWS Backup.",
        "privilege": "ListBackupPlanTemplates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists backup plan versions.",
        "privilege": "ListBackupPlanVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupPlan*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists backup plans.",
        "privilege": "ListBackupPlans",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists resource assignments for a specific backup plan.",
        "privilege": "ListBackupSelections",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupPlan*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists backup vaults.",
        "privilege": "ListBackupVaults",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List copy jobs",
        "privilege": "ListCopyJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists protected resources by AWS Backup.",
        "privilege": "ListProtectedResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists recovery points inside a backup vault.",
        "privilege": "ListRecoveryPointsByBackupVault",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupVault*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists recovery points for a resource.",
        "privilege": "ListRecoveryPointsByResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists restore jobs.",
        "privilege": "ListRestoreJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists tags for a resource.",
        "privilege": "ListTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds an access policy to the backup vault.",
        "privilege": "PutBackupVaultAccessPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupVault*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds an SNS topic to the backup vault.",
        "privilege": "PutBackupVaultNotifications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupVault*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a new backup job.",
        "privilege": "StartBackupJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "backupVault*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Copy a backup from a source region to a destination region.",
        "privilege": "StartCopyJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "recoveryPoint*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a new restore job.",
        "privilege": "StartRestoreJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "recoveryPoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a backup job.",
        "privilege": "StopBackupJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Tags a resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Untags a resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a backup plan.",
        "privilege": "UpdateBackupPlan",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backupPlan*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the lifecycle of the recovery point.",
        "privilege": "UpdateRecoveryPointLifecycle",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "recoveryPoint*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:backup:${Region}:${Account}:backup-vault:${BackupVaultName}",
        "condition_keys": [],
        "resource": "backupVault"
      },
      {
        "arn": "arn:${Partition}:backup:${Region}:${Account}:backup-plan:${BackupPlanId}",
        "condition_keys": [],
        "resource": "backupPlan"
      },
      {
        "arn": "arn:${Partition}:${Vendor}:${Region}:*:${ResourceType}:${RecoveryPointId}",
        "condition_keys": [],
        "resource": "recoveryPoint"
      }
    ],
    "service_name": "AWS Backup"
  },
  {
    "conditions": [],
    "prefix": "backup-storage",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Associates a KMS key to a backup vault",
        "privilege": "MountCapsule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Backup storage"
  },
  {
    "conditions": [
      {
        "condition": "batch:Image",
        "description": "The image used to start a container.",
        "type": "String"
      },
      {
        "condition": "batch:Privileged",
        "description": "When this parameter is true, the container is given elevated privileges on the host container instance (similar to the root user).",
        "type": "Boolean"
      },
      {
        "condition": "batch:User",
        "description": "The user name or numeric uid to use inside the container.",
        "type": "String"
      }
    ],
    "prefix": "batch",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Cancels jobs in an AWS Batch job queue.",
        "privilege": "CancelJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an AWS Batch compute environment.",
        "privilege": "CreateComputeEnvironment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an AWS Batch job queue.",
        "privilege": "CreateJobQueue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an AWS Batch compute environment.",
        "privilege": "DeleteComputeEnvironment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified job queue.",
        "privilege": "DeleteJobQueue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deregisters an AWS Batch job definition.",
        "privilege": "DeregisterJobDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job-definition*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes one or more of your compute environments.",
        "privilege": "DescribeComputeEnvironments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a list of job definitions.",
        "privilege": "DescribeJobDefinitions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes one or more of your job queues.",
        "privilege": "DescribeJobQueues",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a list of AWS Batch jobs.",
        "privilege": "DescribeJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of task jobs for a specified job queue.",
        "privilege": "ListJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers an AWS Batch job definition.",
        "privilege": "RegisterJobDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job-definition*"
          },
          {
            "condition_keys": [
              "batch:User",
              "batch:Privileged",
              "batch:Image"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Submits an AWS Batch job from a job definition.",
        "privilege": "SubmitJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job-definition*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job-queue*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Terminates jobs in a job queue.",
        "privilege": "TerminateJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an AWS Batch compute environment.",
        "privilege": "UpdateComputeEnvironment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a job queue.",
        "privilege": "UpdateJobQueue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:batch:${Region}:${Account}:job-queue/${JobQueueName}",
        "condition_keys": [],
        "resource": "job-queue"
      },
      {
        "arn": "arn:${Partition}:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}",
        "condition_keys": [],
        "resource": "job-definition"
      }
    ],
    "service_name": "AWS Batch"
  },
  {
    "conditions": [],
    "prefix": "budgets",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Modify budgets and budget details",
        "privilege": "ModifyBudget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "budget*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "View budgets and budget details",
        "privilege": "ViewBudget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "budget*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:budgets::${Account}:budget/${BudgetName}",
        "condition_keys": [],
        "resource": "budget"
      }
    ],
    "service_name": "AWS Budget Service"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "cassandra",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to alter a keyspace or table",
        "privilege": "Alter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "keyspace"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a keyspace or table",
        "privilege": "Create",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "keyspace"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to drop a keyspace or table",
        "privilege": "Drop",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "keyspace"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to INSERT, UPDATE or DELETE data in a table",
        "privilege": "Modify",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to SELECT data from a table",
        "privilege": "Select",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to tag a keyspace or table",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "keyspace"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to untag a keyspace or table",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "keyspace"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:cassandra:${Region}:${Account}:/keyspace/${KeyspaceName}/",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "keyspace"
      },
      {
        "arn": "arn:${Partition}:cassandra:${Region}:${Account}:/keyspace/${KeyspaceName}/table/${tableName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "table"
      }
    ],
    "service_name": "Amazon Keyspaces (for Apache Cassandra)"
  },
  {
    "conditions": [],
    "prefix": "ce",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to create a new Cost Category with the requested name and rules.",
        "privilege": "CreateCostCategoryDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a Cost Category.",
        "privilege": "DeleteCostCategoryDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve descriptions such as the name, ARN, rules, definition, and effective dates of a Cost Category.",
        "privilege": "DescribeCostCategoryDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the cost and usage metrics for your account.",
        "privilege": "GetCostAndUsage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the cost and usage metrics with resources for your account.",
        "privilege": "GetCostAndUsageWithResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a cost forecast for a forecast time period.",
        "privilege": "GetCostForecast",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve all available filter values for a filter for a period of time.",
        "privilege": "GetDimensionValues",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the reservation coverage for your account.",
        "privilege": "GetReservationCoverage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the reservation recommendations for your account.",
        "privilege": "GetReservationPurchaseRecommendation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the reservation utilization for your account.",
        "privilege": "GetReservationUtilization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the rightsizing recommendations for your account.",
        "privilege": "GetRightsizingRecommendation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the Savings Plans coverage for your account.",
        "privilege": "GetSavingsPlansCoverage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the Savings Plans recommendations for your account.",
        "privilege": "GetSavingsPlansPurchaseRecommendation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the Savings Plans utilization for your account.",
        "privilege": "GetSavingsPlansUtilization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the Savings Plans utilization details for your account.",
        "privilege": "GetSavingsPlansUtilizationDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to query tags for a specified time period.",
        "privilege": "GetTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a usage forecast for a forecast time period.",
        "privilege": "GetUsageForecast",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve names, ARN, and effective dates for all Cost Categories.",
        "privilege": "ListCostCategoryDefinitions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an existing Cost Category.",
        "privilege": "UpdateCostCategoryDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Cost Explorer Service"
  },
  {
    "conditions": [],
    "prefix": "chatbot",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates an AWS Chatbot Chime Webhook Configuration.",
        "privilege": "CreateChimeWebhookConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an AWS Chatbot Slack Channel Configuration.",
        "privilege": "CreateSlackChannelConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an AWS Chatbot Chime Webhook Configuration.",
        "privilege": "DeleteChimeWebhookConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an AWS Chatbot Slack Channel Configuration.",
        "privilege": "DeleteSlackChannelConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists all AWS Chatbot Chime Webhook Configurations in an AWS Account.",
        "privilege": "DescribeChimeWebhookConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists all AWS Chatbot Slack Channel Configurations in an AWS account.",
        "privilege": "DescribeSlackChannelConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists all public Slack channels in the Slack workspace connected to the AWS Account onboarded with AWS Chatbot service.",
        "privilege": "DescribeSlackChannels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists all authorized Slack workspaces connected to the AWS Account onboarded with AWS Chatbot service.",
        "privilege": "DescribeSlackWorkspaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Generate OAuth parameters to request Slack OAuth code to be used by the AWS Chatbot service.",
        "privilege": "GetSlackOauthParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Redeem previously generated parameters with Slack API, to acquire OAuth tokens to be used by the AWS Chatbot service.",
        "privilege": "RedeemSlackOauthCode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an AWS Chatbot Chime Webhook Configuration.",
        "privilege": "UpdateChimeWebhookConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an AWS Chatbot Slack Channel Configuration.",
        "privilege": "UpdateSlackChannelConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:chatbot::${account}:${resourceType}/${resourceName}",
        "condition_keys": [],
        "resource": "ChatbotConfiguration"
      }
    ],
    "service_name": "AWS Chatbot"
  },
  {
    "conditions": [],
    "prefix": "chime",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to accept the delegate invitation to share management of an Amazon Chime account with another AWS Account",
        "privilege": "AcceptDelegate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to activate users in an Amazon Chime Enterprise account",
        "privilege": "ActivateUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add a domain to your Amazon Chime account",
        "privilege": "AddDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add new or update existing Active Directory or Okta user groups associated with your Amazon Chime Enterprise account",
        "privilege": "AddOrUpdateGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate a phone number with an Amazon Chime user",
        "privilege": "AssociatePhoneNumberWithUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate multiple phone numbers with an Amazon Chime Voice Connector",
        "privilege": "AssociatePhoneNumbersWithVoiceConnector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate multiple phone numbers with an Amazon Chime Voice Connector Group",
        "privilege": "AssociatePhoneNumbersWithVoiceConnectorGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate the specified sign-in delegate groups with the specified Amazon Chime account.",
        "privilege": "AssociateSigninDelegateGroupsWithAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to authorize an Active Directory for your Amazon Chime Enterprise account",
        "privilege": "AuthorizeDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create new attendees for an active Amazon Chime SDK meeting",
        "privilege": "BatchCreateAttendee",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to batch add room members",
        "privilege": "BatchCreateRoomMembership",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to move up to 50 phone numbers to the deletion queue",
        "privilege": "BatchDeletePhoneNumber",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to suspend up to 50 users from a Team or EnterpriseLWA Amazon Chime account",
        "privilege": "BatchSuspendUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove the suspension from up to 50 previously suspended users for the specified Amazon Chime EnterpriseLWA account",
        "privilege": "BatchUnsuspendUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update phone number details within the UpdatePhoneNumberRequestItem object for up to 50 phone numbers",
        "privilege": "BatchUpdatePhoneNumber",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update user details within the UpdateUserRequestItem object for up to 20 users for the specified Amazon Chime account",
        "privilege": "BatchUpdateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to connect an Active Directory to your Amazon Chime Enterprise account",
        "privilege": "ConnectDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "ds:ConnectDirectory"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an Amazon Chime account under the administrator's AWS account",
        "privilege": "CreateAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new SCIM access key for your Amazon Chime account and Okta configuration",
        "privilege": "CreateApiKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new attendee for an active Amazon Chime SDK meeting",
        "privilege": "CreateAttendee",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a bot for an Amazon Chime Enterprise account",
        "privilege": "CreateBot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add a bot to a chat room in your Amazon Chime Enterprise account",
        "privilege": "CreateBotMembership",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new Call Detail Record S3 bucket",
        "privilege": "CreateCDRBucket",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:CreateBucket",
              "s3:ListAllMyBuckets"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new Amazon Chime SDK meeting in the specified media Region, with no initial attendees",
        "privilege": "CreateMeeting",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a phone number order with the Carriers",
        "privilege": "CreatePhoneNumberOrder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a proxy session for the specified Amazon Chime Voice Connector",
        "privilege": "CreateProxySession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a room",
        "privilege": "CreateRoom",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add a room member",
        "privilege": "CreateRoomMembership",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a user under the specified Amazon Chime account.",
        "privilege": "CreateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a Amazon Chime Voice Connector under the administrator's AWS account",
        "privilege": "CreateVoiceConnector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a Amazon Chime Voice Connector Group under the administrator's AWS account",
        "privilege": "CreateVoiceConnectorGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified Amazon Chime account",
        "privilege": "DeleteAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the OpenIdConfig attributes from your Amazon Chime account",
        "privilege": "DeleteAccountOpenIdConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified SCIM access key associated with your Amazon Chime account and Okta configuration",
        "privilege": "DeleteApiKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified attendee from an Amazon Chime SDK meeting",
        "privilege": "DeleteAttendee",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a Call Detail Record S3 bucket from your Amazon Chime account",
        "privilege": "DeleteCDRBucket",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:DeleteBucket"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete delegated AWS account management from your Amazon Chime account",
        "privilege": "DeleteDelegate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a domain from your Amazon Chime account",
        "privilege": "DeleteDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an events configuration for a bot to receive outgoing events",
        "privilege": "DeleteEventsConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete Active Directory or Okta user groups from your Amazon Chime Enterprise account",
        "privilege": "DeleteGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified Amazon Chime SDK meeting",
        "privilege": "DeleteMeeting",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to move a phone number to the deletion queue",
        "privilege": "DeletePhoneNumber",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a proxy session for the specified Amazon Chime Voice Connector",
        "privilege": "DeleteProxySession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a room",
        "privilege": "DeleteRoom",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove a room member",
        "privilege": "DeleteRoomMembership",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified Amazon Chime Voice Connector",
        "privilege": "DeleteVoiceConnector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified Amazon Chime Voice Connector Group",
        "privilege": "DeleteVoiceConnectorGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the origination settings for the specified Amazon Chime Voice Connector",
        "privilege": "DeleteVoiceConnectorOrigination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete proxy configuration for the specified Amazon Chime Voice Connector",
        "privilege": "DeleteVoiceConnectorProxy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete streaming configuration for the specified Amazon Chime Voice Connector",
        "privilege": "DeleteVoiceConnectorStreamingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the termination settings for the specified Amazon Chime Voice Connector",
        "privilege": "DeleteVoiceConnectorTermination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete SIP termination credentials for the specified Amazon Chime Voice Connector",
        "privilege": "DeleteVoiceConnectorTerminationCredentials",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate the primary provisioned number from the specified Amazon Chime user",
        "privilege": "DisassociatePhoneNumberFromUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate multiple phone numbers from the specified Amazon Chime Voice Connector",
        "privilege": "DisassociatePhoneNumbersFromVoiceConnector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate multiple phone numbers from the specified Amazon Chime Voice Connector Group",
        "privilege": "DisassociatePhoneNumbersFromVoiceConnectorGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate the specified sign-in delegate groups from the specified Amazon Chime account.",
        "privilege": "DisassociateSigninDelegateGroupsFromAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disconnect the Active Directory from your Amazon Chime Enterprise account",
        "privilege": "DisconnectDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details for the specified Amazon Chime account",
        "privilege": "GetAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details for the account resource associated with your Amazon Chime account",
        "privilege": "GetAccountResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get account settings for the specified Amazon Chime account ID",
        "privilege": "GetAccountSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get the account details and OpenIdConfig attributes for your Amazon Chime account",
        "privilege": "GetAccountWithOpenIdConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get attendee details for a specified meeting ID and attendee ID",
        "privilege": "GetAttendee",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve details for the specified bot",
        "privilege": "GetBot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details of a Call Detail Record S3 bucket associated with your Amazon Chime account",
        "privilege": "GetCDRBucket",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:GetBucketAcl",
              "s3:GetBucketLocation",
              "s3:GetBucketLogging",
              "s3:GetBucketVersioning",
              "s3:GetBucketWebsite"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get domain details for a domain associated with your Amazon Chime account",
        "privilege": "GetDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve details for an events configuration for a bot to receive outgoing events",
        "privilege": "GetEventsConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get global settings related to Amazon Chime for the AWS account",
        "privilege": "GetGlobalSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get the meeting record for a specified meeting ID",
        "privilege": "GetMeeting",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get attendee, connection, and other details for a meeting",
        "privilege": "GetMeetingDetail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details for the specified phone number",
        "privilege": "GetPhoneNumber",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details for the specified phone number order",
        "privilege": "GetPhoneNumberOrder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get phone number settings related to Amazon Chime for the AWS account",
        "privilege": "GetPhoneNumberSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details of the specified proxy session for the specified Amazon Chime Voice Connector",
        "privilege": "GetProxySession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a room",
        "privilege": "GetRoom",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get telephony limits for the AWS account",
        "privilege": "GetTelephonyLimits",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details for the specified user ID",
        "privilege": "GetUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get a summary of user activity on the user details page",
        "privilege": "GetUserActivityReportData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get user details for an Amazon Chime user based on the email address in an Amazon Chime Enterprise or Team account",
        "privilege": "GetUserByEmail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get user settings related to the specified Amazon Chime user",
        "privilege": "GetUserSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details for the specified Amazon Chime Voice Connector",
        "privilege": "GetVoiceConnector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details for the specified Amazon Chime Voice Connector Group",
        "privilege": "GetVoiceConnectorGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details of the logging configuration for the specified Amazon Chime Voice Connector",
        "privilege": "GetVoiceConnectorLoggingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details of the origination settings for the specified Amazon Chime Voice Connector",
        "privilege": "GetVoiceConnectorOrigination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details of the proxy configuration for the specified Amazon Chime Voice Connector",
        "privilege": "GetVoiceConnectorProxy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details of the streaming configuration for the specified Amazon Chime Voice Connector",
        "privilege": "GetVoiceConnectorStreamingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details of the termination settings for the specified Amazon Chime Voice Connector",
        "privilege": "GetVoiceConnectorTermination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details of the termination health for the specified Amazon Chime Voice Connector",
        "privilege": "GetVoiceConnectorTerminationHealth",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to send an invitation to accept a request for AWS account delegation for an Amazon Chime account",
        "privilege": "InviteDelegate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to invite as many as 50 users to the specified Amazon Chime account",
        "privilege": "InviteUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to invite users from a third party provider to your Amazon Chime account",
        "privilege": "InviteUsersFromProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list Amazon Chime account usage reporting data",
        "privilege": "ListAccountUsageReportData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the Amazon Chime accounts under the administrator's AWS account",
        "privilege": "ListAccounts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the SCIM access keys defined for your Amazon Chime account and Okta configuration",
        "privilege": "ListApiKeys",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list the tags applied to an Amazon Chime SDK attendee resource",
        "privilege": "ListAttendeeTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list up to 100 attendees for a specified Amazon Chime SDK meeting",
        "privilege": "ListAttendees",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the bots associated with the administrator's Amazon Chime Enterprise account",
        "privilege": "ListBots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list Call Detail Record S3 buckets",
        "privilege": "ListCDRBucket",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:ListAllMyBuckets",
              "s3:ListBucket"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the calling regions available for the administrator's AWS account",
        "privilege": "ListCallingRegions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list account delegate information associated with your Amazon Chime account",
        "privilege": "ListDelegates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list active Active Directories hosted in the Directory Service of your AWS account",
        "privilege": "ListDirectories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list domains associated with your Amazon Chime account",
        "privilege": "ListDomains",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list Active Directory or Okta user groups associated with your Amazon Chime Enterprise account",
        "privilege": "ListGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all events that occurred for a specified meeting",
        "privilege": "ListMeetingEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list the tags applied to an Amazon Chime SDK meeting resource.",
        "privilege": "ListMeetingTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list up to 100 active Amazon Chime SDK meetings",
        "privilege": "ListMeetings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list meetings ended during the specified date range",
        "privilege": "ListMeetingsReportData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the phone number orders under the administrator's AWS account",
        "privilege": "ListPhoneNumberOrders",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the phone numbers under the administrator's AWS account",
        "privilege": "ListPhoneNumbers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list proxy sessions for the specified Amazon Chime Voice Connector",
        "privilege": "ListProxySessions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list all room members",
        "privilege": "ListRoomMemberships",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list rooms",
        "privilege": "ListRooms",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list the tags applied to an Amazon Chime SDK meeting resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the users that belong to the specified Amazon Chime account",
        "privilege": "ListUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the Amazon Chime Voice Connector Groups under the administrator's AWS account",
        "privilege": "ListVoiceConnectorGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the SIP termination credentials for the specified Amazon Chime Voice Connector",
        "privilege": "ListVoiceConnectorTerminationCredentials",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the Amazon Chime Voice Connectors under the administrator's AWS account",
        "privilege": "ListVoiceConnectors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to log out the specified user from all of the devices they are currently logged into",
        "privilege": "LogoutUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update details for an events configuration for a bot to receive outgoing events",
        "privilege": "PutEventsConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add logging configuration for the specified Amazon Chime Voice Connector",
        "privilege": "PutVoiceConnectorLoggingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "logs:CreateLogDelivery",
              "logs:CreateLogGroup",
              "logs:DeleteLogDelivery",
              "logs:DescribeLogGroups",
              "logs:GetLogDelivery",
              "logs:ListLogDeliveries"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the origination settings for the specified Amazon Chime Voice Connector",
        "privilege": "PutVoiceConnectorOrigination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add proxy configuration for the specified Amazon Chime Voice Connector",
        "privilege": "PutVoiceConnectorProxy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add streaming configuration for the specified Amazon Chime Voice Connector",
        "privilege": "PutVoiceConnectorStreamingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the termination settings for the specified Amazon Chime Voice Connector",
        "privilege": "PutVoiceConnectorTermination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add SIP termination credentials for the specified Amazon Chime Voice Connector",
        "privilege": "PutVoiceConnectorTerminationCredentials",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to regenerate the security token for the specified bot",
        "privilege": "RegenerateSecurityToken",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the account name for your Amazon Chime Enterprise or Team account",
        "privilege": "RenameAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to renew the delegation request associated with an Amazon Chime account",
        "privilege": "RenewDelegate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reset the account resource in your Amazon Chime account",
        "privilege": "ResetAccountResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reset the personal meeting PIN for the specified user on an Amazon Chime account",
        "privilege": "ResetPersonalPIN",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to restore the specified phone number from the deltion queue back to the phone number inventory",
        "privilege": "RestorePhoneNumber",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to download the file containing links to all user attachments returned as part of the \"Request attachments\" action",
        "privilege": "RetrieveDataExports",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to search phone numbers that can be ordered from the carrier",
        "privilege": "SearchAvailablePhoneNumbers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to submit the \"Request attachments\" request",
        "privilege": "StartDataExport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to submit a customer service support request",
        "privilege": "SubmitSupportRequest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to suspend users from an Amazon Chime Enterprise account",
        "privilege": "SuspendUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to apply the specified tags to the specified Amazon Chime SDK attendee",
        "privilege": "TagAttendee",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to apply the specified tags to the specified Amazon Chime SDK meeting.",
        "privilege": "TagMeeting",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to apply the specified tags to the specified Amazon Chime SDK meeting resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to unauthorize an Active Directory from your Amazon Chime Enterprise account",
        "privilege": "UnauthorizeDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to untag the specified tags from the specified Amazon Chime SDK attendee.",
        "privilege": "UntagAttendee",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to untag the specified tags from the specified Amazon Chime SDK meeting.",
        "privilege": "UntagMeeting",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to untag the specified tags from the specified Amazon Chime SDK meeting resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update account details for the specified Amazon Chime account",
        "privilege": "UpdateAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the OpenIdConfig attributes for your Amazon Chime account",
        "privilege": "UpdateAccountOpenIdConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the account resource in your Amazon Chime account",
        "privilege": "UpdateAccountResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the settings for the specified Amazon Chime account",
        "privilege": "UpdateAccountSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the status of the specified bot",
        "privilege": "UpdateBot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update your Call Detail Record S3 bucket",
        "privilege": "UpdateCDRSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:CreateBucket",
              "s3:DeleteBucket",
              "s3:ListAllMyBuckets"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the global settings related to Amazon Chime for the AWS account",
        "privilege": "UpdateGlobalSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update phone number details for the specified phone number",
        "privilege": "UpdatePhoneNumber",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update phone number settings related to Amazon Chime for the AWS account",
        "privilege": "UpdatePhoneNumberSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a proxy session for the specified Amazon Chime Voice Connector",
        "privilege": "UpdateProxySession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a room",
        "privilege": "UpdateRoom",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update room membership role",
        "privilege": "UpdateRoomMembership",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the supported license tiers available for users in your Amazon Chime account",
        "privilege": "UpdateSupportedLicenses",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update user details for a specified user ID",
        "privilege": "UpdateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the licenses for your Amazon Chime users",
        "privilege": "UpdateUserLicenses",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update user settings related to the specified Amazon Chime user",
        "privilege": "UpdateUserSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update Amazon Chime Voice Connector details for the specified Amazon Chime Voice Connector",
        "privilege": "UpdateVoiceConnector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update Amazon Chime Voice Connector Group details for the specified Amazon Chime Voice Connector Group",
        "privilege": "UpdateVoiceConnectorGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to validate the account resource in your Amazon Chime account",
        "privilege": "ValidateAccountResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:chime::${AccountId}:meeting/${MeetingId}",
        "condition_keys": [],
        "resource": "meeting"
      }
    ],
    "service_name": "Amazon Chime"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      },
      {
        "condition": "cloud9:EnvironmentId",
        "description": "Filters access by the AWS Cloud9 environment ID",
        "type": "String"
      },
      {
        "condition": "cloud9:EnvironmentName",
        "description": "Filters access by the AWS Cloud9 environment name",
        "type": "String"
      },
      {
        "condition": "cloud9:InstanceType",
        "description": "Filters access by the instance type of the AWS Cloud9 environment's Amazon EC2 instance",
        "type": "String"
      },
      {
        "condition": "cloud9:Permissions",
        "description": "Filters access by the type of AWS Cloud9 permissions",
        "type": "String"
      },
      {
        "condition": "cloud9:SubnetId",
        "description": "Filters access by the subnet ID that the AWS Cloud9 environment will be created in",
        "type": "String"
      },
      {
        "condition": "cloud9:UserArn",
        "description": "Filters access by the user ARN specified",
        "type": "ARN"
      }
    ],
    "prefix": "cloud9",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to create an AWS Cloud9 development environment, launches an Amazon Elastic Compute Cloud (Amazon EC2) instance, and then hosts the environment on the instance.",
        "privilege": "CreateEnvironmentEC2",
        "resource_types": [
          {
            "condition_keys": [
              "cloud9:EnvironmentName",
              "cloud9:InstanceType",
              "cloud9:SubnetId",
              "cloud9:UserArn"
            ],
            "dependent_actions": [
              "ec2:DescribeSubnets",
              "ec2:DescribeVpcs",
              "iam:CreateServiceLinkedRole"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add an environment member to an AWS Cloud9 development environment.",
        "privilege": "CreateEnvironmentMembership",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          },
          {
            "condition_keys": [
              "cloud9:UserArn",
              "cloud9:EnvironmentId",
              "cloud9:Permissions"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an AWS Cloud9 development environment. If the environment is hosted on an Amazon Elastic Compute Cloud (Amazon EC2) instance, also terminates the instance.",
        "privilege": "DeleteEnvironment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:CreateServiceLinkedRole"
            ],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an environment member from an AWS Cloud9 development environment.",
        "privilege": "DeleteEnvironmentMembership",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about environment members for an AWS Cloud9 development environment.",
        "privilege": "DescribeEnvironmentMemberships",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          },
          {
            "condition_keys": [
              "cloud9:UserArn",
              "cloud9:EnvironmentId"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get status information for an AWS Cloud9 development environment.",
        "privilege": "DescribeEnvironmentStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about AWS Cloud9 development environments.",
        "privilege": "DescribeEnvironments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get IDE-specific settings of an AWS Cloud9 user.",
        "privilege": "GetUserSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get a list of AWS Cloud9 development environment identifiers.",
        "privilege": "ListEnvironments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists tags for a cloud9 environment",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds tags to a cloud9 environment",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes tags from a cloud9 environment",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change the settings of an existing AWS Cloud9 development environment.",
        "privilege": "UpdateEnvironment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change the settings of an existing environment member for an AWS Cloud9 development environment.",
        "privilege": "UpdateEnvironmentMembership",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment*"
          },
          {
            "condition_keys": [
              "cloud9:UserArn",
              "cloud9:EnvironmentId",
              "cloud9:Permissions"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update IDE-specific settings of an AWS Cloud9 user.",
        "privilege": "UpdateUserSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:cloud9:${Region}:${Account}:environment:${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "environment"
      }
    ],
    "service_name": "AWS Cloud9"
  },
  {
    "conditions": [],
    "prefix": "clouddirectory",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Adds a new Facet to an object.",
        "privilege": "AddFacetToObject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Copies input published schema into Directory with same name and version as that of published schema.",
        "privilege": "ApplySchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "publishedSchema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Attaches an existing object to another existing object.",
        "privilege": "AttachObject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Attaches a policy object to any other object.",
        "privilege": "AttachPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Attaches the specified object to the specified index.",
        "privilege": "AttachToIndex",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Attaches a typed link b/w a source & target object reference.",
        "privilege": "AttachTypedLink",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Performs all the read operations in a batch. Each individual operation inside BatchRead needs to be granted permissions explicitly.",
        "privilege": "BatchRead",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Performs all the write operations in a batch. Each individual operation inside BatchWrite needs to be granted permissions explicitly.",
        "privilege": "BatchWrite",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a Directory by copying the published schema into the directory.",
        "privilege": "CreateDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "publishedSchema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new Facet in a schema.",
        "privilege": "CreateFacet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "appliedSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "developmentSchema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an index object.",
        "privilege": "CreateIndex",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an object in a Directory.",
        "privilege": "CreateObject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new schema in a development state.",
        "privilege": "CreateSchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new Typed Link facet in a schema.",
        "privilege": "CreateTypedLinkFacet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "appliedSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "developmentSchema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a directory. Only disabled directories can be deleted.",
        "privilege": "DeleteDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a given Facet. All attributes and Rules associated with the facet will be deleted.",
        "privilege": "DeleteFacet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "developmentSchema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an object and its associated attributes.",
        "privilege": "DeleteObject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a given schema.",
        "privilege": "DeleteSchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "developmentSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "publishedSchema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a given TypedLink Facet. All attributes and Rules associated with the facet will be deleted.",
        "privilege": "DeleteTypedLinkFacet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "developmentSchema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Detaches the specified object from the specified index.",
        "privilege": "DetachFromIndex",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Detaches a given object from the parent object.",
        "privilege": "DetachObject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Detaches a policy from an object.",
        "privilege": "DetachPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Detaches a given typed link b/w given source and target object reference.",
        "privilege": "DetachTypedLink",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disables the specified directory.",
        "privilege": "DisableDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the specified directory.",
        "privilege": "EnableDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves metadata about a directory.",
        "privilege": "GetDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets details of the Facet, such as Facet Name, Attributes, Rules, or ObjectType.",
        "privilege": "GetFacet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "appliedSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "developmentSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "publishedSchema*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves attributes that are associated with a typed link.",
        "privilege": "GetLinkAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves attributes within a facet that are associated with an object.",
        "privilege": "GetObjectAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves metadata about an object.",
        "privilege": "GetObjectInformation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a JSON representation of the schema.",
        "privilege": "GetSchemaAsJson",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "appliedSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "developmentSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "publishedSchema*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns identity attributes order information associated with a given typed link facet.",
        "privilege": "GetTypedLinkFacetInformation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "appliedSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "developmentSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "publishedSchema*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists schemas applied to a directory.",
        "privilege": "ListAppliedSchemaArns",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists indices attached to an object.",
        "privilege": "ListAttachedIndices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves the ARNs of schemas in the development state.",
        "privilege": "ListDevelopmentSchemaArns",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists directories created within an account.",
        "privilege": "ListDirectories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves attributes attached to the facet.",
        "privilege": "ListFacetAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "appliedSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "developmentSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "publishedSchema*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the names of facets that exist in a schema.",
        "privilege": "ListFacetNames",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "appliedSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "developmentSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "publishedSchema*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a paginated list of all incoming TypedLinks for a given object.",
        "privilege": "ListIncomingTypedLinks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists objects attached to the specified index.",
        "privilege": "ListIndex",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists all attributes associated with an object.",
        "privilege": "ListObjectAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a paginated list of child objects associated with a given object.",
        "privilege": "ListObjectChildren",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects.",
        "privilege": "ListObjectParentPaths",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists parent objects associated with a given object in pagination fashion.",
        "privilege": "ListObjectParents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns policies attached to an object in pagination fashion.",
        "privilege": "ListObjectPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a paginated list of all outgoing TypedLinks for a given object.",
        "privilege": "ListOutgoingTypedLinks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns all of the ObjectIdentifiers to which a given policy is attached.",
        "privilege": "ListPolicyAttachments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves published schema ARNs.",
        "privilege": "ListPublishedSchemaArns",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns tags for a resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a paginated list of attributes associated with typed link facet.",
        "privilege": "ListTypedLinkFacetAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "appliedSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "developmentSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "publishedSchema*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a paginated list of typed link facet names that exist in a schema.",
        "privilege": "ListTypedLinkFacetNames",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "appliedSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "developmentSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "publishedSchema*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists all policies from the root of the Directory to the object specified.",
        "privilege": "LookupPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Publishes a development schema with a version.",
        "privilege": "PublishSchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "developmentSchema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows a schema to be updated using JSON upload. Only available for development schemas.",
        "privilege": "PutSchemaFromJson",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes the specified facet from the specified object.",
        "privilege": "RemoveFacetFromObject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds tags to a resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes tags from a resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds/Updates/Deletes existing Attributes, Rules, or ObjectType of a Facet.",
        "privilege": "UpdateFacet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "appliedSchema*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "developmentSchema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a given typed link\u2019s attributes. Attributes to be updated must not contribute to the typed link\u2019s identity, as defined by its IdentityAttributeOrder.",
        "privilege": "UpdateLinkAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a given object's attributes.",
        "privilege": "UpdateObjectAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the schema name with a new name.",
        "privilege": "UpdateSchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "developmentSchema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds/Updates/Deletes existing Attributes, Rules, identity attribute order of a TypedLink Facet.",
        "privilege": "UpdateTypedLinkFacet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "developmentSchema*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:clouddirectory:${Region}:${Account}:directory/${DirectoryId}/schema/${SchemaName}/${Version}",
        "condition_keys": [],
        "resource": "appliedSchema"
      },
      {
        "arn": "arn:${Partition}:clouddirectory:${Region}:${Account}:schema/development/${SchemaName}",
        "condition_keys": [],
        "resource": "developmentSchema"
      },
      {
        "arn": "arn:${Partition}:clouddirectory:${Region}:${Account}:directory/${DirectoryId}",
        "condition_keys": [],
        "resource": "directory"
      },
      {
        "arn": "arn:${Partition}:clouddirectory:${Region}:${Account}:schema/published/${SchemaName}/${Version}",
        "condition_keys": [],
        "resource": "publishedSchema"
      }
    ],
    "service_name": "Amazon Cloud Directory"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "",
        "type": "String"
      },
      {
        "condition": "cloudformation:ChangeSetName",
        "description": "An AWS CloudFormation change set name. Use to control which change sets IAM users can execute or delete.",
        "type": "String"
      },
      {
        "condition": "cloudformation:ImportResourceTypes",
        "description": "The template resource types, such as <code>AWS::EC2::Instance</code>. Use to control which resource types IAM users can work with when they want to import a resource into a stack.",
        "type": "String"
      },
      {
        "condition": "cloudformation:ResourceTypes",
        "description": "The template resource types, such as <code>AWS::EC2::Instance</code>. Use to control which resource types IAM users can work with when they create or update a stack.",
        "type": "String"
      },
      {
        "condition": "cloudformation:RoleArn",
        "description": "The ARN of an IAM service role. Use to control which service role IAM users can use to work with stacks or change sets.",
        "type": "ARN"
      },
      {
        "condition": "cloudformation:StackPolicyUrl",
        "description": "An Amazon S3 stack policy URL. Use to control which stack policies IAM users can associate with a stack during a create or update stack action.",
        "type": "String"
      },
      {
        "condition": "cloudformation:TemplateUrl",
        "description": "An Amazon S3 template URL. Use to control which templates IAM users can use when they create or update stacks.",
        "type": "String"
      }
    ],
    "prefix": "cloudformation",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Cancels an update on the specified stack.",
        "privilege": "CancelUpdateStack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "For a specified stack that is in the UPDATE_ROLLBACK_FAILED state, continues rolling it back to the UPDATE_ROLLBACK_COMPLETE state.",
        "privilege": "ContinueUpdateRollback",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "cloudformation:RoleArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a list of changes for a stack.",
        "privilege": "CreateChangeSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "cloudformation:ChangeSetName",
              "cloudformation:ResourceTypes",
              "cloudformation:ImportResourceTypes",
              "cloudformation:RoleArn",
              "cloudformation:StackPolicyUrl",
              "cloudformation:TemplateUrl",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a stack as specified in the template.",
        "privilege": "CreateStack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "cloudformation:ResourceTypes",
              "cloudformation:RoleArn",
              "cloudformation:StackPolicyUrl",
              "cloudformation:TemplateUrl",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates stack instances for the specified accounts, within the specified regions.",
        "privilege": "CreateStackInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a stackset as specified in the template.",
        "privilege": "CreateStackSet",
        "resource_types": [
          {
            "condition_keys": [
              "cloudformation:RoleArn",
              "cloudformation:TemplateUrl",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "",
        "privilege": "CreateUploadBucket",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified change set. Deleting change sets ensures that no one executes the wrong change set.",
        "privilege": "DeleteChangeSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "cloudformation:ChangeSetName"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specified stack.",
        "privilege": "DeleteStack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "cloudformation:RoleArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes stack instances for the specified accounts, in the specified regions.",
        "privilege": "DeleteStackInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specified stackset.",
        "privilege": "DeleteStackSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deregisters an existing CloudFormation type or type version",
        "privilege": "DeregisterType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves your account's AWS CloudFormation limits.",
        "privilege": "DescribeAccountLimits",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the description for the specified change set.",
        "privilege": "DescribeChangeSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "cloudformation:ChangeSetName"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a stack drift detection operation.",
        "privilege": "DescribeStackDriftDetectionStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns all stack related events for a specified stack.",
        "privilege": "DescribeStackEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the stack instance that's associated with the specified stack set, AWS account, and region.",
        "privilege": "DescribeStackInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a description of the specified resource in the specified stack.",
        "privilege": "DescribeStackResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns drift information for the resources that have been checked for drift in the specified stack.",
        "privilege": "DescribeStackResourceDrifts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns AWS resource descriptions for running and deleted stacks.",
        "privilege": "DescribeStackResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the description of the specified stack set.",
        "privilege": "DescribeStackSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the description of the specified stack set operation.",
        "privilege": "DescribeStackSetOperation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the description for the specified stack.",
        "privilege": "DescribeStacks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the CloudFormation type requested",
        "privilege": "DescribeType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the registration process for a CloudFormation type",
        "privilege": "DescribeTypeRegistration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Detects whether a stack's actual configuration differs, or has drifted, from it's expected configuration, as defined in the stack template and any values specified as template parameters.",
        "privilege": "DetectStackDrift",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about whether a resource's actual configuration differs, or has drifted, from it's expected configuration, as defined in the stack template and any values specified as template parameters.",
        "privilege": "DetectStackResourceDrift",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Enables users to detect drift on a stack set and the stack instances that belong to that stack set.",
        "privilege": "DetectStackSetDrift",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the estimated monthly cost of a template.",
        "privilege": "EstimateTemplateCost",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a stack using the input information that was provided when the specified change set was created.",
        "privilege": "ExecuteChangeSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "cloudformation:ChangeSetName"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the stack policy for a specified stack.",
        "privilege": "GetStackPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the template body for a specified stack.",
        "privilege": "GetTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a new or existing template.",
        "privilege": "GetTemplateSummary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the ID and status of each active change set for a stack. For example, AWS CloudFormation lists change sets that are in the CREATE_IN_PROGRESS or CREATE_PENDING state.",
        "privilege": "ListChangeSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all exported output values in the account and region in which you call this action.",
        "privilege": "ListExports",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all stacks that are importing an exported output value.",
        "privilege": "ListImports",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns summary information about stack instances that are associated with the specified stack set.",
        "privilege": "ListStackInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns descriptions of all resources of the specified stack.",
        "privilege": "ListStackResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns summary information about the results of a stack set operation.",
        "privilege": "ListStackSetOperationResults",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns summary information about operations performed on a stack set.",
        "privilege": "ListStackSetOperations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns summary information about stack sets that are associated with the user.",
        "privilege": "ListStackSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the summary information for stacks whose status matches the specified StackStatusFilter.",
        "privilege": "ListStacks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists CloudFormation type registration attempts",
        "privilege": "ListTypeRegistrations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists versions of a particular CloudFormation type",
        "privilege": "ListTypeVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists available CloudFormation types",
        "privilege": "ListTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers a new CloudFormation type",
        "privilege": "RegisterType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Sets a stack policy for a specified stack.",
        "privilege": "SetStackPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "cloudformation:StackPolicyUrl"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets which version of a CloudFormation type applies to CloudFormation operations",
        "privilege": "SetTypeDefaultVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sends a signal to the specified resource with a success or failure status.",
        "privilege": "SignalResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops an in-progress operation on a stack set and its associated stack instances.",
        "privilege": "StopStackSetOperation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Tagging cloudformation resources.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Untagging cloudformation resources.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a stack as specified in the template.",
        "privilege": "UpdateStack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          },
          {
            "condition_keys": [
              "cloudformation:ResourceTypes",
              "cloudformation:RoleArn",
              "cloudformation:StackPolicyUrl",
              "cloudformation:TemplateUrl",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the parameter values for stack instances for the specified accounts, within the specified regions.",
        "privilege": "UpdateStackInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a stackset as specified in the template.",
        "privilege": "UpdateStackSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stackset*"
          },
          {
            "condition_keys": [
              "cloudformation:RoleArn",
              "cloudformation:TemplateUrl",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates termination protection for the specified stack.",
        "privilege": "UpdateTerminationProtection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Validates a specified template.",
        "privilege": "ValidateTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:cloudformation:${Region}:${Account}:stack/${StackName}/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "stack"
      },
      {
        "arn": "arn:${Partition}:cloudformation:${Region}:${Account}:stackset/${StackSetName}:${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "stackset"
      },
      {
        "arn": "arn:${Partition}:cloudformation:${Region}:${Account}:changeSet/${ChangeSetName}:${Id}",
        "condition_keys": [],
        "resource": "changeset"
      }
    ],
    "service_name": "AWS CloudFormation"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "cloudfront",
    "privileges": [
      {
        "access_level": "Write",
        "description": "This action creates a new CloudFront origin access identity (POST /2019-03-26/origin-access-identity/cloudfront).",
        "privilege": "CreateCloudFrontOriginAccessIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "origin-access-identity*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action creates a new web distribution (POST /2019-03-26/distribution).",
        "privilege": "CreateDistribution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distribution*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action creates a new web distribution with tags (POST /2019-03-26/distribution?WithTags).",
        "privilege": "CreateDistributionWithTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distribution*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action creates a new field-level encryption configuration. (POST /2019-03-26/field-level-encryption).",
        "privilege": "CreateFieldLevelEncryptionConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action creates a field-level encryption profile. (POST /2019-03-26/field-level-encryption-profile).",
        "privilege": "CreateFieldLevelEncryptionProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action creates a new invalidation batch request (POST /2019-03-26/distribution/<DISTRIBUTION_ID>/invalidation).",
        "privilege": "CreateInvalidation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distribution*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action adds a new public key to CloudFront. (POST /2019-03-26/public-key).",
        "privilege": "CreatePublicKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action creates a new RTMP distribution (POST /2019-03-26/streaming-distribution).",
        "privilege": "CreateStreamingDistribution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "streaming-distribution*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action creates a new RTMP distribution with tags (POST /2019-03-26/streaming-distribution?WithTags).",
        "privilege": "CreateStreamingDistributionWithTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "streaming-distribution*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action deletes a CloudFront origin access identity (DELETE /2019-03-26/origin-access-identity/cloudfront/<OAI_ID>).",
        "privilege": "DeleteCloudFrontOriginAccessIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "origin-access-identity*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action deletes a web distribution (DELETE /2019-03-26/distribution/<DISTRIBUTION_ID>).",
        "privilege": "DeleteDistribution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distribution*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action deletes a field-level encryption configuration. (DELETE /2019-03-26/field-level-encryption/Id/<Id>).",
        "privilege": "DeleteFieldLevelEncryptionConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action deletes a field-level encryption profile. (DELETE /2019-03-26/field-level-encryption-profile/<Id>).",
        "privilege": "DeleteFieldLevelEncryptionProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action deletes a public key from CloudFront. (DELETE /2019-03-26/public-key/<Id>).",
        "privilege": "DeletePublicKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action deletes an RTMP distribution (DELETE /2019-03-26/streaming-distribution/<DISTRIBUTION_ID>).",
        "privilege": "DeleteStreamingDistribution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "streaming-distribution*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the information about a CloudFront origin access identity (GET /2019-03-26/origin-access-identity/cloudfront/<OAI_ID>).",
        "privilege": "GetCloudFrontOriginAccessIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "origin-access-identity*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the configuration information about a Cloudfront origin access identity (GET /2019-03-26/origin-access-identity/cloudfront/<OAI_ID>/config).",
        "privilege": "GetCloudFrontOriginAccessIdentityConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "origin-access-identity*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the information about a web distribution (GET /2019-03-26/distribution/<DISTRIBUTION_ID>).",
        "privilege": "GetDistribution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distribution*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the configuration information about a distribution (GET /2019-03-26/distribution/<DISTRIBUTION_ID>/config).",
        "privilege": "GetDistributionConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distribution*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the field-level encryption configuration information. (GET /2019-03-26/field-level-encryption/<Id>).",
        "privilege": "GetFieldLevelEncryption",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the field-level encryption configuration information (GET /2019-03-26/field-level-encryption/<Id>/config).",
        "privilege": "GetFieldLevelEncryptionConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the field-level encryption configuration information (GET /2019-03-26/field-level-encryption/<Id>/config).",
        "privilege": "GetFieldLevelEncryptionProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the field-level encryption profile configuration information (GET /2019-03-26/field-level-encryption-profile/<Id>/config).",
        "privilege": "GetFieldLevelEncryptionProfileConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the information about an invalidation (GET /2019-03-26/distribution/<DISTRIBUTION_ID>/invalidation/<INVALIDATION_ID>).",
        "privilege": "GetInvalidation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distribution*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the public key information (GET /2019-03-26/public-key/<Id>).",
        "privilege": "GetPublicKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the public key configuration information (GET /2019-03-26/public-key/<Id>/config).",
        "privilege": "GetPublicKeyConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the information about an RTMP distribution (GET /2019-03-26/streaming-distribution/<DISTRIBUTION_ID>).",
        "privilege": "GetStreamingDistribution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "streaming-distribution*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the configuration information about a streaming distribution (GET /2019-03-26/streaming-distribution/<DISTRIBUTION_ID>/config).",
        "privilege": "GetStreamingDistributionConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "streaming-distribution*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List your CloudFront origin access identities (GET /2019-03-26/origin-access-identity/cloudfront?Marker=<MARKER>&MaxItems=<MAX_ITEMS>).",
        "privilege": "ListCloudFrontOriginAccessIdentities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the distributions associated with your AWS account (GET /2019-03-26/distribution?Marker=<MARKER>&MaxItems=<MAX_ITEMS>).",
        "privilege": "ListDistributions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the distributions associated a Lambda function.",
        "privilege": "ListDistributionsByLambdaFunction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the distributions associated with your AWS account with given AWS WAF web ACL (GET /2019-03-26/distributionsByWebACLId/<WEB_ACL_ID>?Marker=<MARKER>&MaxItems=<MAX_ITEMS>).",
        "privilege": "ListDistributionsByWebACLId",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all field-level encryption configurations that have been created in CloudFront for this account (GET /2019-03-26/field-level-encryption?Marker=<MARKER>&MaxItems=<MAX_ITEMS>).",
        "privilege": "ListFieldLevelEncryptionConfigs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all field-level encryption profiles that have been created in CloudFront for this account. (GET /2019-03-26/field-level-encryption-profile?Marker=<MARKER>&MaxItems=<MAX_ITEMS>).",
        "privilege": "ListFieldLevelEncryptionProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List your invalidation batches (GET /2019-03-26/distribution/<DISTRIBUTION_ID>/invalidation?Marker=<MARKER>&MaxItems=<MAX_ITEMS>).",
        "privilege": "ListInvalidations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distribution*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all public keys that have been added to CloudFront for this account. (GET /2019-03-26/public-key?Marker=<MARKER>&MaxItems=<MAX_ITEMS>).",
        "privilege": "ListPublicKeys",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List your RTMP distributions (GET /2019-03-26/streaming-distribution?Marker=<MARKER>&MaxItems=<MAX_ITEMS>).",
        "privilege": "ListStreamingDistributions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "List tags for a CloudFront resource (GET /2019-03-26/tagging?Resource=<RESOURCE>).",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distribution"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "streaming-distribution"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Add tags to a CloudFront resource (POST /2019-03-26/tagging?Operation=Tag?Resource=<RESOURCE>).",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distribution"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "streaming-distribution"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Remove tags from a CloudFront resource (POST /2019-03-26/tagging?Operation=Untag?Resource=<RESOURCE>).",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distribution"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "streaming-distribution"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action sets the configuration for a CloudFront origin access identity (PUT /2019-03-26/origin-access-identity/cloudfront/<OAI_ID>/config).",
        "privilege": "UpdateCloudFrontOriginAccessIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "origin-access-identity*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action updates the configuration for a web distribution (PUT /2019-03-26/distribution/<DISTRIBUTION_ID>/config).",
        "privilege": "UpdateDistribution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distribution*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action updates a field-level encryption configuration. (PUT /2019-03-26/field-level-encryption/<Id>/config).",
        "privilege": "UpdateFieldLevelEncryptionConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action updates a field-level encryption profile. (PUT /2019-03-26/field-level-encryption-profile/<Id>/config).",
        "privilege": "UpdateFieldLevelEncryptionProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action updates public key information. (PUT /2019-03-26/public-key/<Id>/config).",
        "privilege": "UpdatePublicKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action updates the configuration for an RTMP distribution (PUT /2019-03-26/streaming-distribution/<DISTRIBUTION_ID>/config).",
        "privilege": "UpdateStreamingDistribution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "streaming-distribution*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:cloudfront::${Account}:distribution/${DistributionId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "distribution"
      },
      {
        "arn": "arn:${Partition}:cloudfront::${Account}:streaming-distribution/${DistributionId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "streaming-distribution"
      },
      {
        "arn": "arn:${Partition}:cloudfront::${Account}:origin-access-identity/${Id}",
        "condition_keys": [],
        "resource": "origin-access-identity"
      }
    ],
    "service_name": "Amazon CloudFront"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "cloudhsm",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "Adds or overwrites one or more tags for the specified AWS CloudHSM resource",
        "privilege": "AddTagsToResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a copy of a backup in the specified region",
        "privilege": "CopyBackupToRegion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backup*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new AWS CloudHSM cluster",
        "privilege": "CreateCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backup"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a high-availability partition group",
        "privilege": "CreateHapg",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new hardware security module (HSM) in the specified AWS CloudHSM cluster",
        "privilege": "CreateHsm",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an HSM client",
        "privilege": "CreateLunaClient",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified CloudHSM backup",
        "privilege": "DeleteBackup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified AWS CloudHSM cluster",
        "privilege": "DeleteCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a high-availability partition group",
        "privilege": "DeleteHapg",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified HSM",
        "privilege": "DeleteHsm",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a client",
        "privilege": "DeleteLunaClient",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about backups of AWS CloudHSM clusters",
        "privilege": "DescribeBackups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about AWS CloudHSM clusters",
        "privilege": "DescribeClusters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves information about a high-availability partition group",
        "privilege": "DescribeHapg",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves information about an HSM. You can identify the HSM by its ARN or its serial number",
        "privilege": "DescribeHsm",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves information about an HSM client",
        "privilege": "DescribeLunaClient",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the configuration files necessary to connect to all high availability partition groups the client is associated with",
        "privilege": "GetConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Claims an AWS CloudHSM cluster",
        "privilege": "InitializeCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the Availability Zones that have available AWS CloudHSM capacity",
        "privilege": "ListAvailableZones",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the high-availability partition groups for the account",
        "privilege": "ListHapgs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves the identifiers of all of the HSMs provisioned for the current customer",
        "privilege": "ListHsms",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all of the clients",
        "privilege": "ListLunaClients",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a list of tags for the specified AWS CloudHSM cluster",
        "privilege": "ListTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of all tags for the specified AWS CloudHSM resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies an existing high-availability partition group",
        "privilege": "ModifyHapg",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies an HSM",
        "privilege": "ModifyHsm",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the certificate used by the client",
        "privilege": "ModifyLunaClient",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes one or more tags from the specified AWS CloudHSM resource",
        "privilege": "RemoveTagsFromResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Restores the specified CloudHSM backup",
        "privilege": "RestoreBackup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backup*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds or overwrites one or more tags for the specified AWS CloudHSM cluster",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes the specified tag or tags from the specified AWS CloudHSM cluster",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:cloudhsm:${Region}:${Account}:backup/${CloudHsmBackupInstanceName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "backup"
      },
      {
        "arn": "arn:${Partition}:cloudhsm:${Region}:${Account}:cluster/${CloudHsmClusterInstanceName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "cluster"
      }
    ],
    "service_name": "AWS CloudHSM"
  },
  {
    "conditions": [],
    "prefix": "cloudsearch",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "Attaches resource tags to an Amazon CloudSearch domain.",
        "privilege": "AddTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Indexes the search suggestions.",
        "privilege": "BuildSuggesters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new search domain.",
        "privilege": "CreateDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Configures an analysis scheme that can be applied to a text or text-array field to define language-specific text processing options.",
        "privilege": "DefineAnalysisScheme",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Configures an Expression for the search domain.",
        "privilege": "DefineExpression",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Configures an IndexField for the search domain.",
        "privilege": "DefineIndexField",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Configures a suggester for a domain.",
        "privilege": "DefineSuggester",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an analysis scheme.",
        "privilege": "DeleteAnalysisScheme",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes a search domain and all of its data.",
        "privilege": "DeleteDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes an Expression from the search domain.",
        "privilege": "DeleteExpression",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes an IndexField from the search domain.",
        "privilege": "DeleteIndexField",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a suggester.",
        "privilege": "DeleteSuggester",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the analysis schemes configured for a domain.",
        "privilege": "DescribeAnalysisSchemes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the availability options configured for a domain.",
        "privilege": "DescribeAvailabilityOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the domain endpoint options configured for a domain.",
        "privilege": "DescribeDomainEndpointOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets information about the search domains owned by this account.",
        "privilege": "DescribeDomains",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the expressions configured for the search domain.",
        "privilege": "DescribeExpressions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about the index fields configured for the search domain.",
        "privilege": "DescribeIndexFields",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the scaling parameters configured for a domain.",
        "privilege": "DescribeScalingParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about the access policies that control access to the domain's document and search endpoints.",
        "privilege": "DescribeServiceAccessPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the suggesters configured for a domain.",
        "privilege": "DescribeSuggesters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Tells the search domain to start indexing its documents using the latest indexing options.",
        "privilege": "IndexDocuments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all search domains owned by an account.",
        "privilege": "ListDomainNames",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Displays all of the resource tags for an Amazon CloudSearch domain.",
        "privilege": "ListTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes the specified resource tags from an Amazon ES domain.",
        "privilege": "RemoveTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Configures the availability options for a domain.",
        "privilege": "UpdateAvailabilityOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Configures the domain endpoint options for a domain.",
        "privilege": "UpdateDomainEndpointOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Configures scaling parameters for a domain.",
        "privilege": "UpdateScalingParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Configures the access rules that control access to the domain's document and search endpoints.",
        "privilege": "UpdateServiceAccessPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows access to the document service operations.",
        "privilege": "document",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Allows access to the search operations.",
        "privilege": "search",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Allows access to the suggest operations.",
        "privilege": "suggest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:cloudsearch:${Region}:${Account}:domain/${DomainName}",
        "condition_keys": [],
        "resource": "domain"
      }
    ],
    "service_name": "Amazon CloudSearch"
  },
  {
    "conditions": [],
    "prefix": "cloudtrail",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "Grants permission to add one or more tags to a trail, up to a limit of 10",
        "privilege": "AddTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trail*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a trail that specifies the settings for delivery of log data to an Amazon S3 bucket",
        "privilege": "CreateTrail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:PutObject"
            ],
            "resource_type": "trail*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a trail",
        "privilege": "DeleteTrail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trail*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list settings for the trails associated with the current region for your account",
        "privilege": "DescribeTrails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list settings for event selectors configured for a trail",
        "privilege": "GetEventSelectors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trail*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list CloudTrail Insights selectors that are configured for a trail",
        "privilege": "GetInsightSelectors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trail*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list settings for the trail",
        "privilege": "GetTrail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a JSON-formatted list of information about the specified trail",
        "privilege": "GetTrailStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trail*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list the public keys whose private keys were used to sign trail digest files within a specified time range",
        "privilege": "ListPublicKeys",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list the tags for trails in the current region",
        "privilege": "ListTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trail*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list trails associated with the current region for your account",
        "privilege": "ListTrails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to look up API activity events captured by CloudTrail that create, update, or delete resources in your account",
        "privilege": "LookupEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create and update event selectors for a trail",
        "privilege": "PutEventSelectors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trail*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create and update CloudTrail Insights selectors for a trail",
        "privilege": "PutInsightSelectors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trail*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove tags from a trail",
        "privilege": "RemoveTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trail*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start the recording of AWS API calls and log file delivery for a trail",
        "privilege": "StartLogging",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trail*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop the recording of AWS API calls and log file delivery for a trail",
        "privilege": "StopLogging",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trail*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the settings that specify delivery of log files",
        "privilege": "UpdateTrail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trail*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:cloudtrail:${Region}:${Account}:trail/${TrailName}",
        "condition_keys": [],
        "resource": "trail"
      }
    ],
    "service_name": "AWS CloudTrail"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value associated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of mandatory tags in the request",
        "type": "String"
      },
      {
        "condition": "cloudwatch:namespace",
        "description": "Filters actions based on the presence of optional namespace values",
        "type": "String"
      }
    ],
    "prefix": "cloudwatch",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Deletes all specified alarms. In the event of an error, no alarms are deleted",
        "privilege": "DeleteAlarms",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alarm*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified anomaly detection model from your account.",
        "privilege": "DeleteAnomalyDetector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes all CloudWatch dashboards that you specify",
        "privilege": "DeleteDashboards",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a collection of insight rules.",
        "privilege": "DeleteInsightRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "insight-rule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves history for the specified alarm",
        "privilege": "DescribeAlarmHistory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alarm*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves alarms with the specified names",
        "privilege": "DescribeAlarms",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alarm*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves all alarms for a single metric",
        "privilege": "DescribeAlarmsForMetric",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the anomaly detection models that you have created in your account.",
        "privilege": "DescribeAnomalyDetectors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe all insight rules, currently owned by the user's account.",
        "privilege": "DescribeInsightRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disables actions for the specified alarms",
        "privilege": "DisableAlarmActions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alarm*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable a collection of insight rules.",
        "privilege": "DisableInsightRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "insight-rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables actions for the specified alarms",
        "privilege": "EnableAlarmActions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alarm*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable a collection of insight rules.",
        "privilege": "EnableInsightRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "insight-rule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Displays the details of the CloudWatch dashboard you specify",
        "privilege": "GetDashboard",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return the top-N report of unique contributors over a time range for a given insight rule.",
        "privilege": "GetInsightRuleReport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "insight-rule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Required to retrieve batch amounts of CloudWatch metric data and perform metric math on retrieved data",
        "privilege": "GetMetricData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets statistics for the specified metric",
        "privilege": "GetMetricStatistics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Required to retrieve snapshots of metric widgets",
        "privilege": "GetMetricWidgetImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of all CloudWatch dashboards in your account",
        "privilege": "ListDashboards",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of valid metrics stored for the AWS account owner",
        "privilege": "ListMetrics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "This action lists tags for an Amazon CloudWatch resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alarm"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "insight-rule"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates an anomaly detection model for a CloudWatch metric.",
        "privilege": "PutAnomalyDetector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a CloudWatch dashboard, or updates an existing dashboard if it already exists",
        "privilege": "PutDashboard",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new insight rule or replace an existing insight rule.",
        "privilege": "PutInsightRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "insight-rule*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates an alarm and associates it with the specified Amazon CloudWatch metric",
        "privilege": "PutMetricAlarm",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alarm*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Publishes metric data points to Amazon CloudWatch",
        "privilege": "PutMetricData",
        "resource_types": [
          {
            "condition_keys": [
              "cloudwatch:namespace"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Temporarily sets the state of an alarm for testing purposes",
        "privilege": "SetAlarmState",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alarm*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action tags an Amazon CloudWatch resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alarm"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "insight-rule"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action removes a tag from an Amazon CloudWatch resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alarm"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "insight-rule"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:cloudwatch:${Region}:${Account}:alarm:${AlarmName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "alarm"
      },
      {
        "arn": "arn:${Partition}:cloudwatch::${Account}:dashboard/${DashboardName}",
        "condition_keys": [],
        "resource": "dashboard"
      },
      {
        "arn": "arn:${Partition}:cloudwatch:${Region}:${Account}:insight-rule/${InsightRuleName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "insight-rule"
      }
    ],
    "service_name": "Amazon CloudWatch"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "codebuild",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Deletes one or more builds.",
        "privilege": "BatchDeleteBuilds",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about one or more builds.",
        "privilege": "BatchGetBuilds",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about one or more build projects.",
        "privilege": "BatchGetProjects",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns an array of ReportGroup objects that are specified by the input reportGroupArns parameter.",
        "privilege": "BatchGetReportGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "report-group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns an array of the Report objects specified by the input reportArns parameter.",
        "privilege": "BatchGetReports",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "report-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds or updates information about a report.",
        "privilege": "BatchPutTestCases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "report-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a build project.",
        "privilege": "CreateProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a report. A report is created when tests specified in the buildspec file for a report groups run during the build of a project.",
        "privilege": "CreateReport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "report-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a report group.",
        "privilege": "CreateReportGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "report-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "For an existing AWS CodeBuild build project that has its source code stored in a GitHub or Bitbucket repository, enables AWS CodeBuild to start rebuilding the source code every time a code change is pushed to the repository.",
        "privilege": "CreateWebhook",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an OAuth token from a connected third-party OAuth provider. Only used in the AWS CodeBuild console.",
        "privilege": "DeleteOAuthToken",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a build project.",
        "privilege": "DeleteProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a report.",
        "privilege": "DeleteReport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "report-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a report group.",
        "privilege": "DeleteReportGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "report-group*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Deletes a resource policy for the associated project or report group.",
        "privilege": "DeleteResourcePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "report-group"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a set of GitHub, GitHub Enterprise, or Bitbucket source credentials.",
        "privilege": "DeleteSourceCredentials",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "For an existing AWS CodeBuild build project that has its source code stored in a GitHub or Bitbucket repository, stops AWS CodeBuild from rebuilding the source code every time a code change is pushed to the repository.",
        "privilege": "DeleteWebhook",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns an array of TestCase objects.",
        "privilege": "DescribeTestCases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "report-group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a resource policy for the specified project or report group.",
        "privilege": "GetResourcePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "report-group"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Imports the source repository credentials for an AWS CodeBuild project that has its source code stored in a GitHub, GitHub Enterprise, or Bitbucket repository.",
        "privilege": "ImportSourceCredentials",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Resets the cache for a project.",
        "privilege": "InvalidateProjectCache",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets a list of build IDs, with each build ID representing a single build.",
        "privilege": "ListBuilds",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets a list of build IDs for the specified build project, with each build ID representing a single build.",
        "privilege": "ListBuildsForProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists connected third-party OAuth providers. Only used in the AWS CodeBuild console.",
        "privilege": "ListConnectedOAuthAccounts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets information about Docker images that are managed by AWS CodeBuild.",
        "privilege": "ListCuratedEnvironmentImages",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets a list of build project names, with each build project name representing a single build project.",
        "privilege": "ListProjects",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of report group ARNs. Each report group ARN represents one report group.",
        "privilege": "ListReportGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of report ARNs. Each report ARN representing one report.",
        "privilege": "ListReports",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of report ARNs that belong to the specified report group. Each report ARN represents one report.",
        "privilege": "ListReportsForReportGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "report-group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists source code repositories from a connected third-party OAuth provider. Only used in the AWS CodeBuild console.",
        "privilege": "ListRepositories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of project ARNs that have been shared with the requester. Each project ARN represents one project.",
        "privilege": "ListSharedProjects",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of report group ARNs that have been shared with the requester. Each report group ARN represents one report group.",
        "privilege": "ListSharedReportGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of SourceCredentialsInfo objects.",
        "privilege": "ListSourceCredentials",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Saves an OAuth token from a connected third-party OAuth provider. Only used in the AWS CodeBuild console.",
        "privilege": "PersistOAuthToken",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Creates a resource policy for the associated project or report group.",
        "privilege": "PutResourcePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "report-group"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts running a build.",
        "privilege": "StartBuild",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Attempts to stop running a build.",
        "privilege": "StopBuild",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Changes the settings of an existing build project.",
        "privilege": "UpdateProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates information about a report.",
        "privilege": "UpdateReport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "report-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Changes the settings of an existing report group.",
        "privilege": "UpdateReportGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "report-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the webhook associated with an AWS CodeBuild build project.",
        "privilege": "UpdateWebhook",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:codebuild:${Region}:${Account}:build/${BuildId}",
        "condition_keys": [],
        "resource": "build"
      },
      {
        "arn": "arn:${Partition}:codebuild:${Region}:${Account}:project/${ProjectName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "project"
      },
      {
        "arn": "arn:${Partition}:codebuild:${Region}:${Account}:report-group/${ReportGroupName}",
        "condition_keys": [],
        "resource": "report-group"
      },
      {
        "arn": "arn:${Partition}:codebuild:${Region}:${Account}:report/${ReportGroupName}:${ReportId}",
        "condition_keys": [],
        "resource": "report"
      }
    ],
    "service_name": "AWS CodeBuild"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      },
      {
        "condition": "codecommit:References",
        "description": "Filters access by Git reference to specified AWS CodeCommit actions",
        "type": "String"
      }
    ],
    "prefix": "codecommit",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to associate an approval rule template with a repository",
        "privilege": "AssociateApprovalRuleTemplateWithRepository",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate an approval rule template with multiple repositories in a single operation",
        "privilege": "BatchAssociateApprovalRuleTemplateWithRepositories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about multiple merge conflicts when attempting to merge two commits using either the three-way merge or the squash merge option",
        "privilege": "BatchDescribeMergeConflicts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove the association between an approval rule template and multiple repositories in a single operation",
        "privilege": "BatchDisassociateApprovalRuleTemplateFromRepositories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get return information about one or more commits in an AWS CodeCommit repository.",
        "privilege": "BatchGetCommits",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return information about one or more pull requests in an AWS CodeCommit repository",
        "privilege": "BatchGetPullRequests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about multiple repositories",
        "privilege": "BatchGetRepositories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to cancel the uploading of an archive to a pipeline in AWS CodePipeline",
        "privilege": "CancelUploadArchive",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an approval rule template that will automatically create approval rules in pull requests that match the conditions defined in the template; does not grant permission to create approval rules for individual pull requests",
        "privilege": "CreateApprovalRuleTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a branch in an AWS CodeCommit repository with this API; does not control Git create branch actions",
        "privilege": "CreateBranch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "codecommit:References"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add, copy, move or update single or multiple files in a branch in an AWS CodeCommit repository, and generate a commit for the changes in the specified branch.",
        "privilege": "CreateCommit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "codecommit:References"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a pull request in the specified repository",
        "privilege": "CreatePullRequest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an approval rule specific to an individual pull request; does not grant permission to create approval rule templates",
        "privilege": "CreatePullRequestApprovalRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an AWS CodeCommit repository",
        "privilege": "CreateRepository",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an unreferenced commit that contains the result of merging two commits using either the three-way or the squash merge option; does not control Git merge actions",
        "privilege": "CreateUnreferencedMergeCommit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "codecommit:References"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an approval rule template",
        "privilege": "DeleteApprovalRuleTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a branch in an AWS CodeCommit repository with this API; does not control Git delete branch actions",
        "privilege": "DeleteBranch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "codecommit:References"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the content of a comment made on a change, file, or commit in a repository",
        "privilege": "DeleteCommentContent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a specified file from a specified branch",
        "privilege": "DeleteFile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "codecommit:References"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete approval rule created for a pull request if the rule was not created by an approval rule template",
        "privilege": "DeletePullRequestApprovalRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an AWS CodeCommit repository",
        "privilege": "DeleteRepository",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about specific merge conflicts when attempting to merge two commits using either the three-way or the squash merge option",
        "privilege": "DescribeMergeConflicts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return information about one or more pull request events",
        "privilege": "DescribePullRequestEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove the association between an approval rule template and a repository",
        "privilege": "DisassociateApprovalRuleTemplateFromRepository",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to evaluate whether a pull request is mergable based on its current approval state and approval rule requirements",
        "privilege": "EvaluatePullRequestApprovalRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return information about an approval rule template",
        "privilege": "GetApprovalRuleTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the encoded content of an individual file in an AWS CodeCommit repository from the AWS CodeCommit console",
        "privilege": "GetBlob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details about a branch in an AWS CodeCommit repository with this API; does not control Git branch actions",
        "privilege": "GetBranch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get the content of a comment made on a change, file, or commit in a repository",
        "privilege": "GetComment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about comments made on the comparison between two commits",
        "privilege": "GetCommentsForComparedCommit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get comments made on a pull request",
        "privilege": "GetCommentsForPullRequest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return information about a commit, including commit message and committer information, with this API; does not control Git log actions",
        "privilege": "GetCommit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about the history of commits in a repository",
        "privilege": "GetCommitHistory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about the difference between commits in the context of a potential merge",
        "privilege": "GetCommitsFromMergeBase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view information about the differences between valid commit specifiers such as a branch, tag, HEAD, commit ID, or other fully qualified reference",
        "privilege": "GetDifferences",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return the base-64 encoded contents of a specified file and its metadata",
        "privilege": "GetFile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return the contents of a specified folder in a repository",
        "privilege": "GetFolder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about a merge commit created by one of the merge options for pull requests that creates merge commits. Not all merge options create merge commits. This permission does not control Git merge actions",
        "privilege": "GetMergeCommit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "codecommit:References"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about merge conflicts between the before and after commit IDs for a pull request in a repository",
        "privilege": "GetMergeConflicts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about merge options for pull requests that can be used to merge two commits; does not control Git merge actions",
        "privilege": "GetMergeOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to resolve blobs, trees, and commits to their identifier",
        "privilege": "GetObjectIdentifier",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about a pull request in a specified repository",
        "privilege": "GetPullRequest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the current approvals on an inputted pull request",
        "privilege": "GetPullRequestApprovalStates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the current override state of a given pull request",
        "privilege": "GetPullRequestOverrideState",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details about references in an AWS CodeCommit repository; does not control Git reference actions",
        "privilege": "GetReferences",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about an AWS CodeCommit repository",
        "privilege": "GetRepository",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about triggers configured for a repository",
        "privilege": "GetRepositoryTriggers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the contents of a specified tree in an AWS CodeCommit repository from the AWS CodeCommit console",
        "privilege": "GetTree",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get status information about an archive upload to a pipeline in AWS CodePipeline",
        "privilege": "GetUploadArchiveStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to pull information from an AWS CodeCommit repository to a local repo",
        "privilege": "GitPull",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to push information from a local repo to an AWS CodeCommit repository",
        "privilege": "GitPush",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "codecommit:References"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all approval rule templates in an AWS Region for the AWS account",
        "privilege": "ListApprovalRuleTemplates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list approval rule templates that are associated with a repository",
        "privilege": "ListAssociatedApprovalRuleTemplatesForRepository",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list branches for an AWS CodeCommit repository with this API; does not control Git branch actions",
        "privilege": "ListBranches",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list pull requests for a specified repository",
        "privilege": "ListPullRequests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list information about AWS CodeCommit repositories in the current Region for your AWS account",
        "privilege": "ListRepositories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list repositories that are associated with an approval rule template",
        "privilege": "ListRepositoriesForApprovalRuleTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the resource attached to a CodeCommit resource ARN",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to merge two commits into the specified destination branch using the fast-forward merge option",
        "privilege": "MergeBranchesByFastForward",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "codecommit:References"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to merge two commits into the specified destination branch using the squash merge option",
        "privilege": "MergeBranchesBySquash",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "codecommit:References"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to merge two commits into the specified destination branch using the three-way merge option",
        "privilege": "MergeBranchesByThreeWay",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "codecommit:References"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to close a pull request and attempt to merge it into the specified destination branch for that pull request at the specified commit using the fast-forward merge option",
        "privilege": "MergePullRequestByFastForward",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "codecommit:References"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to close a pull request and attempt to merge it into the specified destination branch for that pull request at the specified commit using the squash merge option",
        "privilege": "MergePullRequestBySquash",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "codecommit:References"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to close a pull request and attempt to merge it into the specified destination branch for that pull request at the specified commit using the three-way merge option",
        "privilege": "MergePullRequestByThreeWay",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "codecommit:References"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to override all approval rules for a pull request, including approval rules created by a template",
        "privilege": "OverridePullRequestApprovalRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to post a comment on the comparison between two commits",
        "privilege": "PostCommentForComparedCommit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to post a comment on a pull request",
        "privilege": "PostCommentForPullRequest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to post a comment in reply to a comment on a comparison between commits or a pull request",
        "privilege": "PostCommentReply",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add or update a file in a branch in an AWS CodeCommit repository, and generate a commit for the addition in the specified branch",
        "privilege": "PutFile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "codecommit:References"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create, update, or delete triggers for a repository",
        "privilege": "PutRepositoryTriggers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to attach resource tags to a CodeCommit resource ARN",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to test the functionality of repository triggers by sending information to the trigger target",
        "privilege": "TestRepositoryTriggers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate resource tags from a CodeCommit resource ARN",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the content of approval rule templates; does not grant permission to update content of approval rules created specifically for pull requests",
        "privilege": "UpdateApprovalRuleTemplateContent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the description of approval rule templates",
        "privilege": "UpdateApprovalRuleTemplateDescription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the name of approval rule templates",
        "privilege": "UpdateApprovalRuleTemplateName",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the contents of a comment if the identity matches the identity used to create the comment",
        "privilege": "UpdateComment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change the default branch in an AWS CodeCommit repository",
        "privilege": "UpdateDefaultBranch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the content for approval rules created for a specific pull requests; does not grant permission to update approval rule content for rules created with an approval rule template",
        "privilege": "UpdatePullRequestApprovalRuleContent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the approval state for pull requests",
        "privilege": "UpdatePullRequestApprovalState",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the description of a pull request",
        "privilege": "UpdatePullRequestDescription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the status of a pull request",
        "privilege": "UpdatePullRequestStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the title of a pull request",
        "privilege": "UpdatePullRequestTitle",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change the description of an AWS CodeCommit repository",
        "privilege": "UpdateRepositoryDescription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change the name of an AWS CodeCommit repository",
        "privilege": "UpdateRepositoryName",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to the service role for AWS CodePipeline to upload repository changes into a pipeline",
        "privilege": "UploadArchive",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:codecommit:${Region}:${Account}:${RepositoryName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "repository"
      }
    ],
    "service_name": "AWS CodeCommit"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "codedeploy",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "Add tags to one or more on-premises instances.",
        "privilege": "AddTagsToOnPremisesInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about one or more application revisions.",
        "privilege": "BatchGetApplicationRevisions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get information about multiple applications associated with the IAM user.",
        "privilege": "BatchGetApplications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get information about one or more deployment groups.",
        "privilege": "BatchGetDeploymentGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentgroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about one or more instance that are part of a deployment group.",
        "privilege": "BatchGetDeploymentInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentgroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns an array of one or more targets associated with a deployment. This method works with all compute types and should be used instead of the deprecated BatchGetDeploymentInstances. The maximum number of targets that can be returned is 25.",
        "privilege": "BatchGetDeploymentTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get information about multiple deployments associated with the IAM user.",
        "privilege": "BatchGetDeployments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentgroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get information about one or more on-premises instances.",
        "privilege": "BatchGetOnPremisesInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts the process of rerouting traffic from instances in the original environment to instances in thereplacement environment without waiting for a specified wait time to elapse.",
        "privilege": "ContinueDeployment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create an application associated with the IAM user.",
        "privilege": "CreateApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a deployment for an application associated with the IAM user.",
        "privilege": "CreateDeployment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a custom deployment configuration associated with the IAM user.",
        "privilege": "CreateDeploymentConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentconfig*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a deployment group for an application associated with the IAM user.",
        "privilege": "CreateDeploymentGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentgroup*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an application associated with the IAM user.",
        "privilege": "DeleteApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a custom deployment configuration associated with the IAM user.",
        "privilege": "DeleteDeploymentConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentconfig*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a deployment group for an application associated with the IAM user.",
        "privilege": "DeleteDeploymentGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a GitHub account connection.",
        "privilege": "DeleteGitHubAccountToken",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deregister an on-premises instance.",
        "privilege": "DeregisterOnPremisesInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get information about a single application associated with the IAM user.",
        "privilege": "GetApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get information about a single application revision for an application associated with the IAM user.",
        "privilege": "GetApplicationRevision",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get information about a single deployment to a deployment group for an application associated with the IAM user.",
        "privilege": "GetDeployment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentgroup*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get information about a single deployment configuration associated with the IAM user.",
        "privilege": "GetDeploymentConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentconfig*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get information about a single deployment group for an application associated with the IAM user.",
        "privilege": "GetDeploymentGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentgroup*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get information about a single instance in a deployment associated with the IAM user.",
        "privilege": "GetDeploymentInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentgroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a deployment target.",
        "privilege": "GetDeploymentTarget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get information about a single on-premises instance.",
        "privilege": "GetOnPremisesInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get information about all application revisions for an application associated with the IAM user.",
        "privilege": "ListApplicationRevisions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get information about all applications associated with the IAM user.",
        "privilege": "ListApplications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get information about all deployment configurations associated with the IAM user.",
        "privilege": "ListDeploymentConfigs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get information about all deployment groups for an application associated with the IAM user.",
        "privilege": "ListDeploymentGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get information about all instances in a deployment associated with the IAM user.",
        "privilege": "ListDeploymentInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentgroup*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of target IDs that are associated a deployment.",
        "privilege": "ListDeploymentTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get information about all deployments to a deployment group associated with the IAM user, or to get all deployments associated with the IAM user.",
        "privilege": "ListDeployments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentgroup*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the names of stored connections to GitHub accounts.",
        "privilege": "ListGitHubAccountTokenNames",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get a list of one or more on-premises instance names.",
        "privilege": "ListOnPremisesInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of tags for the resource identified by a specified ARN. Tags are used to organize and categorize your CodeDeploy resources.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentgroup"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Notify a lifecycle event hook execution status for associated deployment with the IAM user.",
        "privilege": "PutLifecycleEventHookExecutionStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Register information about an application revision for an application associated with the IAM user.",
        "privilege": "RegisterApplicationRevision",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Register an on-premises instance.",
        "privilege": "RegisterOnPremisesInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Remove tags from one or more on-premises instances.",
        "privilege": "RemoveTagsFromOnPremisesInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "In a blue/green deployment, overrides any specified wait time and starts terminating instances immediately after the traffic routing is complete.",
        "privilege": "SkipWaitTimeForInstanceTermination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Description for StopDeployment",
        "privilege": "StopDeployment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Associates the list of tags in the input Tags parameter with the resource identified by the ResourceArn input parameter.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentgroup"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Disassociates a resource from a list of tags. The resource is identified by the ResourceArn input parameter. The tags are identfied by the list of keys in the TagKeys input parameter.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentgroup"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Description for UpdateApplication",
        "privilege": "UpdateApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Change information about a single deployment group for an application associated with the IAM user.",
        "privilege": "UpdateDeploymentGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentgroup*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:codedeploy:${Region}:${Account}:application:${ApplicationName}",
        "condition_keys": [],
        "resource": "application"
      },
      {
        "arn": "arn:${Partition}:codedeploy:${Region}:${Account}:deploymentconfig:${DeploymentConfigurationName}",
        "condition_keys": [],
        "resource": "deploymentconfig"
      },
      {
        "arn": "arn:${Partition}:codedeploy:${Region}:${Account}:deploymentgroup:${ApplicationName}/${DeploymentGroupName}",
        "condition_keys": [],
        "resource": "deploymentgroup"
      },
      {
        "arn": "arn:${Partition}:codedeploy:${Region}:${Account}:instance:${InstanceName}",
        "condition_keys": [],
        "resource": "instance"
      }
    ],
    "service_name": "AWS CodeDeploy"
  },
  {
    "conditions": [],
    "prefix": "codeguru",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Gets free trial summary for the CodeGuru service which includes expiration date.",
        "privilege": "GetCodeGuruFreeTrialSummary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon CodeGuru"
  },
  {
    "conditions": [],
    "prefix": "codeguru-profiler",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission for an agent to register with the orchestration service and retrieve profiling configuration information",
        "privilege": "ConfigureAgent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ProfilingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a profiling group",
        "privilege": "CreateProfilingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ProfilingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a profiling group",
        "privilege": "DeleteProfilingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ProfilingGroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe a profiling group",
        "privilege": "DescribeProfilingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ProfilingGroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get a recommendations report",
        "privilege": "GetFindingsReport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ProfilingGroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get a summary of recent recommendations for each profiling group in the account",
        "privilege": "GetFindingsReportAccountSummary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get the resource policy associated with the specified Profiling Group.",
        "privilege": "GetPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ProfilingGroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get aggregated profiles for a specific profiling group",
        "privilege": "GetProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ProfilingGroup*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to list the available recommendations reports for a specific profiling group",
        "privilege": "ListFindingsReports",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ProfilingGroup*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to list the start times of the available aggregated profiles for a specific profiling group",
        "privilege": "ListProfileTimes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ProfilingGroup*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to list profiling groups in the account",
        "privilege": "ListProfilingGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to submit a profile collected by an agent belonging to a specific profiling group for aggregation",
        "privilege": "PostAgentProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ProfilingGroup*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permissions to update the list of principals allowed for an action group in the resource policy associated with the specified Profiling Group.",
        "privilege": "PutPermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ProfilingGroup*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to remove the permission of specified Action Group from the resource policy associated with the specified Profiling Group.",
        "privilege": "RemovePermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ProfilingGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to update a specific profiling group",
        "privilege": "UpdateProfilingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ProfilingGroup*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:codeguru-profiler:${Region}:${Account}:profilingGroup/${profilingGroupName}",
        "condition_keys": [],
        "resource": "ProfilingGroup"
      }
    ],
    "service_name": "Amazon CodeGuru Profiler"
  },
  {
    "conditions": [
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      }
    ],
    "prefix": "codeguru-reviewer",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to associates a repository with Amazon CodeGuru Reviewer.",
        "privilege": "AssociateRepository",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "codecommit:ListRepositories",
              "codecommit:TagResource",
              "events:PutRule",
              "events:PutTargets",
              "iam:CreateServiceLinkedRole"
            ],
            "resource_type": "repository"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to perform webbased oauth handshake for 3rd party providers.",
        "privilege": "CreateConnectionToken",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe a repository association.",
        "privilege": "DescribeRepositoryAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate a repository with Amazon CodeGuru Reviewer.",
        "privilege": "DisassociateRepository",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "codecommit:UntagResource",
              "events:DeleteRule",
              "events:RemoveTargets"
            ],
            "resource_type": "association*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view pull request metrics in console.",
        "privilege": "GetMetricsData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list summary of repository associations.",
        "privilege": "ListRepositoryAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list 3rd party providers repositories in console.",
        "privilege": "ListThirdPartyRepositories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:codeguru-reviewer::${Account}:association:${ResourceId}",
        "condition_keys": [],
        "resource": "association"
      },
      {
        "arn": "arn:${Partition}:codecommit:${Region}:${Account}:${RepositoryName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "repository"
      }
    ],
    "service_name": "Amazon CodeGuru Reviewer"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "codepipeline",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to view information about a specified job and whether that job has been received by the job worker",
        "privilege": "AcknowledgeJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to confirm that a job worker has received the specified job (partner actions only)",
        "privilege": "AcknowledgeThirdPartyJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to create a custom action that you can use in the pipelines associated with your AWS account",
        "privilege": "CreateCustomActionType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "actiontype*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to create a uniquely named pipeline",
        "privilege": "CreatePipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a custom action",
        "privilege": "DeleteCustomActionType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "actiontype*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a specified pipeline",
        "privilege": "DeletePipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a specified webhook",
        "privilege": "DeleteWebhook",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webhook*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove the registration of a webhook with the third party specified in its configuration",
        "privilege": "DeregisterWebhookWithThirdParty",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webhook*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to prevent revisions from transitioning to the next stage in a pipeline",
        "privilege": "DisableStageTransition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stage*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to allow revisions to transition to the next stage in a pipeline",
        "privilege": "EnableStageTransition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stage*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view information about a job (custom actions only)",
        "privilege": "GetJobDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a pipeline structure",
        "privilege": "GetPipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view information about an execution of a pipeline, including details about artifacts, the pipeline execution ID, and the name, version, and status of the pipeline",
        "privilege": "GetPipelineExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view information about the current state of the stages and actions of a pipeline",
        "privilege": "GetPipelineState",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the details of a job for a third-party action (partner actions only)",
        "privilege": "GetThirdPartyJobDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list the action executions that have occurred in a pipeline",
        "privilege": "ListActionExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list a summary of all the action types available for pipelines in your account",
        "privilege": "ListActionTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "actiontype*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list a summary of the most recent executions for a pipeline",
        "privilege": "ListPipelineExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list a summary of all the pipelines associated with your AWS account",
        "privilege": "ListPipelines",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list tags for a CodePipeline resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "actiontype"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webhook"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all of the webhooks associated with your AWS account",
        "privilege": "ListWebhooks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webhook*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to view information about any jobs for CodePipeline to act on",
        "privilege": "PollForJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "actiontype*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to determine whether there are any third-party jobs for a job worker to act on (partner actions only)",
        "privilege": "PollForThirdPartyJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to edit actions in a pipeline",
        "privilege": "PutActionRevision",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "action*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to provide a response (Approved or Rejected) to a manual approval request in CodePipeline",
        "privilege": "PutApprovalResult",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "action*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to represent the failure of a job as returned to the pipeline by a job worker (custom actions only)",
        "privilege": "PutJobFailureResult",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to represent the success of a job as returned to the pipeline by a job worker (custom actions only)",
        "privilege": "PutJobSuccessResult",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to represent the failure of a third-party job as returned to the pipeline by a job worker (partner actions only)",
        "privilege": "PutThirdPartyJobFailureResult",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to represent the success of a third-party job as returned to the pipeline by a job worker (partner actions only)",
        "privilege": "PutThirdPartyJobSuccessResult",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to create or update a webhook",
        "privilege": "PutWebhook",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webhook*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to register a webhook with the third party specified in its configuration",
        "privilege": "RegisterWebhookWithThirdParty",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webhook*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to resume the pipeline execution by retrying the last failed actions in a stage",
        "privilege": "RetryStageExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stage*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to run the most recent revision through the pipeline",
        "privilege": "StartPipelineExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop an in-progress pipeline execution",
        "privilege": "StopPipelineExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to tag a CodePipeline resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "actiontype"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webhook"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove a tag from a CodePipeline resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "actiontype"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webhook"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a pipeline with changes to the structure of the pipeline",
        "privilege": "UpdatePipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:codepipeline:${Region}:${Account}:${PipelineName}/${StageName}/${ActionName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "action"
      },
      {
        "arn": "arn:${Partition}:codepipeline:${Region}:${Account}:actiontype:${Owner}/${Category}/${Provider}/${Version}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "actiontype"
      },
      {
        "arn": "arn:${Partition}:codepipeline:${Region}:${Account}:${PipelineName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "pipeline"
      },
      {
        "arn": "arn:${Partition}:codepipeline:${Region}:${Account}:${PipelineName}/${StageName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "stage"
      },
      {
        "arn": "arn:${Partition}:codepipeline:${Region}:${Account}:webhook:${WebhookName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "webhook"
      }
    ],
    "service_name": "AWS CodePipeline"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters create requests based on the allowed set of values for each of the tags.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value associated with the resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters create requests based on the presence of mandatory tags in the request.",
        "type": "String"
      },
      {
        "condition": "iam:ResourceTag/${TagKey}",
        "description": "",
        "type": "String"
      }
    ],
    "prefix": "codestar",
    "privileges": [
      {
        "access_level": "Permissions management",
        "description": "Adds a user to the team for an AWS CodeStar project.",
        "privilege": "AssociateTeamMember",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Creates a project with minimal structure, customer policies, and no resources.",
        "privilege": "CreateProject",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a profile for a user that includes user preferences, display name, and email.",
        "privilege": "CreateUserProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants access to extended delete APIs.",
        "privilege": "DeleteExtendedAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Deletes a project, including project resources. Does not delete users associated with the project, but does delete the IAM roles that allowed access to the project.",
        "privilege": "DeleteProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a user profile in AWS CodeStar, including all personal preference data associated with that profile, such as display name and email address. It does not delete the history of that user, for example the history of commits made by that user.",
        "privilege": "DeleteUserProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a project and its resources.",
        "privilege": "DescribeProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a user in AWS CodeStar and the user attributes across all projects.",
        "privilege": "DescribeUserProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Removes a user from a project. Removing a user from a project also removes the IAM policies from that user that allowed access to the project and its resources.",
        "privilege": "DisassociateTeamMember",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants access to extended read APIs.",
        "privilege": "GetExtendedAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all projects in CodeStar associated with your AWS account.",
        "privilege": "ListProjects",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all resources associated with a project in CodeStar.",
        "privilege": "ListResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the tags associated with a project in CodeStar.",
        "privilege": "ListTagsForProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all team members associated with a project.",
        "privilege": "ListTeamMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists user profiles in AWS CodeStar.",
        "privilege": "ListUserProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants access to extended write APIs.",
        "privilege": "PutExtendedAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds tags to a project in CodeStar.",
        "privilege": "TagProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes tags from a project in CodeStar.",
        "privilege": "UntagProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a project in CodeStar.",
        "privilege": "UpdateProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Updates team member attributes within a CodeStar project.",
        "privilege": "UpdateTeamMember",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a profile for a user that includes user preferences, display name, and email.",
        "privilege": "UpdateUserProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:codestar:${Region}:${Account}:project/${ProjectId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "project"
      },
      {
        "arn": "arn:${Partition}:iam::${Account}:user/${aws:username}",
        "condition_keys": [
          "iam:ResourceTag/${TagKey}"
        ],
        "resource": "user"
      }
    ],
    "service_name": "AWS CodeStar"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      },
      {
        "condition": "codestar-notifications:NotificationsForResource",
        "description": "Filters access based on the ARN of the resource for which notifications are configured",
        "type": "ARN"
      }
    ],
    "prefix": "codestar-notifications",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to create a notification rule for a resource",
        "privilege": "CreateNotificationRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notificationrule*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "codestar-notifications:NotificationsForResource"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a notification rule for a resource",
        "privilege": "DeleteNotificationRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notificationrule*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "codestar-notifications:NotificationsForResource"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a target for a notification rule",
        "privilege": "DeleteTarget",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about a notification rule",
        "privilege": "DescribeNotificationRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notificationrule*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "codestar-notifications:NotificationsForResource"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list notifications event types",
        "privilege": "ListEventTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list notification rules in an AWS account",
        "privilege": "ListNotificationRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the tags attached to a notification rule resource ARN",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notificationrule*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the notification rule targets for an AWS account",
        "privilege": "ListTargets",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an association between a notification rule and an Amazon SNS topic",
        "privilege": "Subscribe",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notificationrule*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "codestar-notifications:NotificationsForResource"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to attach resource tags to a notification rule resource ARN",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notificationrule*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove an association between a notification rule and an Amazon SNS topic",
        "privilege": "Unsubscribe",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notificationrule*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "codestar-notifications:NotificationsForResource"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to disassociate resource tags from a notification rule resource ARN",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notificationrule*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change a notification rule for a resource",
        "privilege": "UpdateNotificationRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notificationrule*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "codestar-notifications:NotificationsForResource"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:codestar-notifications:${Region}:${Account}:notificationrule/${NotificationRuleId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "notificationrule"
      }
    ],
    "service_name": "AWS CodeStar Notifications"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters access by a key that is present in the request.",
        "type": "String"
      }
    ],
    "prefix": "cognito-identity",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a new identity pool.",
        "privilege": "CreateIdentityPool",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes identities from an identity pool. You can specify a list of 1-60 identities that you want to delete.",
        "privilege": "DeleteIdentities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a user pool. Once a pool is deleted, users will not be able to authenticate with the pool.",
        "privilege": "DeleteIdentityPool",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns metadata related to the given identity, including when the identity was created and any associated linked logins.",
        "privilege": "DescribeIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets details about a particular identity pool, including the pool name, ID description, creation date, and current number of users.",
        "privilege": "DescribeIdentityPool",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns credentials for the provided identity ID.",
        "privilege": "GetCredentialsForIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Generates (or retrieves) a Cognito ID. Supplying multiple logins will create an implicit linked account.",
        "privilege": "GetId",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the roles for an identity pool.",
        "privilege": "GetIdentityPoolRoles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets an OpenID token, using a known Cognito ID.",
        "privilege": "GetOpenIdToken",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Registers (or retrieves) a Cognito IdentityId and an OpenID Connect token for a user authenticated by your backend authentication process.",
        "privilege": "GetOpenIdTokenForDeveloperIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the identities in a pool.",
        "privilege": "ListIdentities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all of the Cognito identity pools registered for your account.",
        "privilege": "ListIdentityPools",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the tags that are assigned to an Amazon Cognito identity pool.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the IdentityID associated with a DeveloperUserIdentifier or the list of DeveloperUserIdentifiers associated with an IdentityId for an existing identity.",
        "privilege": "LookupDeveloperIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Merges two users having different IdentityIds, existing in the same identity pool, and identified by the same developer provider.",
        "privilege": "MergeDeveloperIdentities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the roles for an identity pool. These roles are used when making calls to GetCredentialsForIdentity action.",
        "privilege": "SetIdentityPoolRoles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Assigns a set of tags to an Amazon Cognito identity pool.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Unlinks a DeveloperUserIdentifier from an existing identity.",
        "privilege": "UnlinkDeveloperIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Unlinks a federated identity from an existing account.",
        "privilege": "UnlinkIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes the specified tags from an Amazon Cognito identity pool.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a user pool.",
        "privilege": "UpdateIdentityPool",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:cognito-identity:${Region}:${Account}:identitypool/${IdentityPoolId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "identitypool"
      }
    ],
    "service_name": "Amazon Cognito Identity"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters access by a key that is present in the request.",
        "type": "String"
      }
    ],
    "prefix": "cognito-idp",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Adds additional user attributes to the user pool schema.",
        "privilege": "AddCustomAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds the specified user to the specified group.",
        "privilege": "AdminAddUserToGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Confirms user registration as an admin without using a confirmation code. Works on any user.",
        "privilege": "AdminConfirmSignUp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new user in the specified user pool and sends a welcome message via email or phone (SMS).",
        "privilege": "AdminCreateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a user as an administrator. Works on any user.",
        "privilege": "AdminDeleteUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the user attributes in a user pool as an administrator. Works on any user.",
        "privilege": "AdminDeleteUserAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disables the user from signing in with the specified external (SAML or social) identity provider.",
        "privilege": "AdminDisableProviderForUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disables the specified user as an administrator. Works on any user.",
        "privilege": "AdminDisableUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the specified user as an administrator. Works on any user.",
        "privilege": "AdminEnableUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Forgets the device, as an administrator.",
        "privilege": "AdminForgetDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the device, as an administrator.",
        "privilege": "AdminGetDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the specified user by user name in a user pool as an administrator. Works on any user.",
        "privilege": "AdminGetUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Authenticates a user in a user pool as an administrator. Works on any user.",
        "privilege": "AdminInitiateAuth",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Links an existing user account in a user pool (DestinationUser) to an identity from an external identity provider (SourceUser) based on a specified attribute name and value from the external identity provider.",
        "privilege": "AdminLinkProviderForUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists devices, as an administrator.",
        "privilege": "AdminListDevices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the groups that the user belongs to.",
        "privilege": "AdminListGroupsForUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the authentication events for the user.",
        "privilege": "AdminListUserAuthEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes the specified user from the specified group.",
        "privilege": "AdminRemoveUserFromGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Resets the specified user's password in a user pool as an administrator. Works on any user.",
        "privilege": "AdminResetUserPassword",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Responds to an authentication challenge, as an administrator.",
        "privilege": "AdminRespondToAuthChallenge",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets MFA preference for the user in the userpool",
        "privilege": "AdminSetUserMFAPreference",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the specified user's password in a user pool as an administrator. Works on any user.",
        "privilege": "AdminSetUserPassword",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets all the user settings for a specified user name. Works on any user.",
        "privilege": "AdminSetUserSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the feedback for the user authentication event",
        "privilege": "AdminUpdateAuthEventFeedback",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the device status as an administrator.",
        "privilege": "AdminUpdateDeviceStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified user's attributes, including developer attributes, as an administrator.",
        "privilege": "AdminUpdateUserAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Signs out users from all devices, as an administrator.",
        "privilege": "AdminUserGlobalSignOut",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Returns a unique generated shared secret key code for the user account.",
        "privilege": "AssociateSoftwareToken",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Changes the password for a specified user in a user pool.",
        "privilege": "ChangePassword",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Confirms tracking of the device. This API call is the call that begins device tracking.",
        "privilege": "ConfirmDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows a user to enter a confirmation code to reset a forgotten password.",
        "privilege": "ConfirmForgotPassword",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Confirms registration of a user and handles the existing alias from a previous user.",
        "privilege": "ConfirmSignUp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new group in the specified user pool.",
        "privilege": "CreateGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an identity provider for a user pool.",
        "privilege": "CreateIdentityProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new OAuth2.0 resource server and defines custom scopes in it.",
        "privilege": "CreateResourceServer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates the user import job.",
        "privilege": "CreateUserImportJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new Amazon Cognito user pool and sets the password policy for the pool.",
        "privilege": "CreateUserPool",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates the user pool client.",
        "privilege": "CreateUserPoolClient",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new domain for a user pool.",
        "privilege": "CreateUserPoolDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a group. Currently only groups with no members can be deleted.",
        "privilege": "DeleteGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an identity provider for a user pool.",
        "privilege": "DeleteIdentityProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a resource server.",
        "privilege": "DeleteResourceServer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows a user to delete one's self.",
        "privilege": "DeleteUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the attributes for a user.",
        "privilege": "DeleteUserAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified Amazon Cognito user pool.",
        "privilege": "DeleteUserPool",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows the developer to delete the user pool client.",
        "privilege": "DeleteUserPoolClient",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a domain for a user pool.",
        "privilege": "DeleteUserPoolDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about a specific identity provider.",
        "privilege": "DescribeIdentityProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a resource server.",
        "privilege": "DescribeResourceServer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the risk configuration setting for the userpool / userpool client",
        "privilege": "DescribeRiskConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the user import job.",
        "privilege": "DescribeUserImportJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the configuration information and metadata of the specified user pool.",
        "privilege": "DescribeUserPool",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Client method for returning the configuration information and metadata of the specified user pool client.",
        "privilege": "DescribeUserPoolClient",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about a domain.",
        "privilege": "DescribeUserPoolDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Forgets the specified device.",
        "privilege": "ForgetDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Calling this API causes a message to be sent to the end user with a confirmation code that is required to change the user's password.",
        "privilege": "ForgotPassword",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the header information for the .csv file to be used as input for the user import job.",
        "privilege": "GetCSVHeader",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the device.",
        "privilege": "GetDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a group.",
        "privilege": "GetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the specified identity provider.",
        "privilege": "GetIdentityProviderByIdentifier",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the signing certificate.",
        "privilege": "GetSigningCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the UI Customization information for a particular app client's app UI, if there is something set.",
        "privilege": "GetUICustomization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the user attributes and metadata for a user.",
        "privilege": "GetUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the user attribute verification code for the specified attribute name.",
        "privilege": "GetUserAttributeVerificationCode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the MFA configuration for the userpool",
        "privilege": "GetUserPoolMfaConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Signs out users from all devices.",
        "privilege": "GlobalSignOut",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Initiates the authentication flow.",
        "privilege": "InitiateAuth",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the devices.",
        "privilege": "ListDevices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the groups associated with a user pool.",
        "privilege": "ListGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists information about all identity providers for a user pool.",
        "privilege": "ListIdentityProviders",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the resource servers for a user pool.",
        "privilege": "ListResourceServers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the tags that are assigned to an Amazon Cognito user pool.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the user import jobs..",
        "privilege": "ListUserImportJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the clients that have been created for the specified user pool.",
        "privilege": "ListUserPoolClients",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the user pools associated with an AWS account.",
        "privilege": "ListUserPools",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the users in the Amazon Cognito user pool.",
        "privilege": "ListUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the users in the specified group.",
        "privilege": "ListUsersInGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Resends the confirmation (for confirmation of registration) to a specific user in the user pool.",
        "privilege": "ResendConfirmationCode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Responds to the authentication challenge.",
        "privilege": "RespondToAuthChallenge",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "sets the risk configuration setting for the userpool / userpool client",
        "privilege": "SetRiskConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the UI customization information for a user pool's built-in app UI.",
        "privilege": "SetUICustomization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets MFA preference for the user in the userpool",
        "privilege": "SetUserMFAPreference",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the MFA configuration for the userpool",
        "privilege": "SetUserPoolMfaConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the user settings like multi-factor authentication (MFA).",
        "privilege": "SetUserSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers the user in the specified user pool and creates a user name, password, and user attributes.",
        "privilege": "SignUp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts the user import.",
        "privilege": "StartUserImportJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops the user import job.",
        "privilege": "StopUserImportJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Assigns a set of tags to an Amazon Cognito user pool.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes the specified tags from an Amazon Cognito user pool.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the feedback for the user authentication event",
        "privilege": "UpdateAuthEventFeedback",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the device status.",
        "privilege": "UpdateDeviceStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified group with the specified attributes.",
        "privilege": "UpdateGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates identity provider information for a user pool.",
        "privilege": "UpdateIdentityProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the name and scopes of resource server.",
        "privilege": "UpdateResourceServer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows a user to update a specific attribute (one at a time).",
        "privilege": "UpdateUserAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified user pool with the specified attributes.",
        "privilege": "UpdateUserPool",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows the developer to update the specified user pool client and password policy.",
        "privilege": "UpdateUserPoolClient",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the Secure Sockets Layer (SSL) certificate for the custom domain for your user pool.",
        "privilege": "UpdateUserPoolDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userpool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers a user's entered TOTP code and mark the user's software token MFA status as verified if successful.",
        "privilege": "VerifySoftwareToken",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Verifies a user attribute using a one time verification code.",
        "privilege": "VerifyUserAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:cognito-idp:${Region}:${Account}:userpool/${UserPoolId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "userpool"
      }
    ],
    "service_name": "Amazon Cognito User Pools"
  },
  {
    "conditions": [],
    "prefix": "cognito-sync",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Initiates a bulk publish of all existing datasets for an Identity Pool to the configured stream.",
        "privilege": "BulkPublish",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specific dataset.",
        "privilege": "DeleteDataset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets meta data about a dataset by identity and dataset name.",
        "privilege": "DescribeDataset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets usage details (for example, data storage) about a particular identity pool.",
        "privilege": "DescribeIdentityPoolUsage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets usage information for an identity, including number of datasets and data usage.",
        "privilege": "DescribeIdentityUsage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the status of the last BulkPublish operation for an identity pool.",
        "privilege": "GetBulkPublishDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the events and the corresponding Lambda functions associated with an identity pool.",
        "privilege": "GetCognitoEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the configuration settings of an identity pool.",
        "privilege": "GetIdentityPoolConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists datasets for an identity.",
        "privilege": "ListDatasets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a list of identity pools registered with Cognito.",
        "privilege": "ListIdentityPoolUsage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets paginated records, optionally changed after a particular sync count for a dataset and identity.",
        "privilege": "ListRecords",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "A permission that grants the ability to query records.",
        "privilege": "QueryRecords",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers a device to receive push sync notifications.",
        "privilege": "RegisterDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the AWS Lambda function for a given event type for an identity pool.",
        "privilege": "SetCognitoEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "A permission that grants ability to configure datasets.",
        "privilege": "SetDatasetConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the necessary configuration for push sync.",
        "privilege": "SetIdentityPoolConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identitypool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Subscribes to receive notifications when a dataset is modified by another device.",
        "privilege": "SubscribeToDataset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Unsubscribes from receiving notifications when a dataset is modified by another device.",
        "privilege": "UnsubscribeFromDataset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Posts updates to records and adds and deletes records for a dataset and user.",
        "privilege": "UpdateRecords",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:cognito-sync:${Region}:${Account}:identitypool/${IdentityPoolId}/identity/${IdentityId}/dataset/${DatasetName}",
        "condition_keys": [],
        "resource": "dataset"
      },
      {
        "arn": "arn:${Partition}:cognito-sync:${Region}:${Account}:identitypool/${IdentityPoolId}/identity/${IdentityId}",
        "condition_keys": [],
        "resource": "identity"
      },
      {
        "arn": "arn:${Partition}:cognito-sync:${Region}:${Account}:identitypool/${IdentityPoolId}",
        "condition_keys": [],
        "resource": "identitypool"
      }
    ],
    "service_name": "Amazon Cognito Sync"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters create requests based on the allowed set of values for each of the mandatory tags.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on the tag value associated with the resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters create requests based on the presence of mandatory tags in the request.",
        "type": "String"
      }
    ],
    "prefix": "comprehend",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Detects the language or languages present in the list of text documents.",
        "privilege": "BatchDetectDominantLanguage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Detects the named entities (\"People\", \"Places\", \"Locations\", etc) within the given list of text documents.",
        "privilege": "BatchDetectEntities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Detects the phrases in the list of text documents that are most indicative of the content.",
        "privilege": "BatchDetectKeyPhrases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Detects the sentiment of a text in the list of documents (Positive, Negative, Neutral, or Mixed).",
        "privilege": "BatchDetectSentiment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Detects syntactic information (like Part of Speech, Tokens) in a list of text documents.",
        "privilege": "BatchDetectSyntax",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Creates a new document classification request to analyze a single document in real-time, using a previously created and trained custom model and an endpoint.",
        "privilege": "ClassifyDocument",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document-classifier-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new document classifier that you can use to categorize documents.",
        "privilege": "CreateDocumentClassifier",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a model-specific endpoint for synchronous inference for a previously trained custom model",
        "privilege": "CreateEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document-classifier"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an entity recognizer using submitted files.",
        "privilege": "CreateEntityRecognizer",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a previously created document classifier.",
        "privilege": "DeleteDocumentClassifier",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document-classifier*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a model-specific endpoint for a previously-trained custom model. All endpoints must be deleted in order for the model to be deleted.",
        "privilege": "DeleteEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document-classifier-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a submitted entity recognizer.",
        "privilege": "DeleteEntityRecognizer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "entity-recognizer*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the properties associated with a document classification job.",
        "privilege": "DescribeDocumentClassificationJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the properties associated with a document classifier.",
        "privilege": "DescribeDocumentClassifier",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document-classifier*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the properties associated with a dominant language detection job.",
        "privilege": "DescribeDominantLanguageDetectionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the properties associated with a specific endpoint. Use this operation to get the status of an endpoint.",
        "privilege": "DescribeEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document-classifier-endpoint*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the properties associated with an entities detection job.",
        "privilege": "DescribeEntitiesDetectionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Provides details about an entity recognizer including status, S3 buckets containing training data, recognizer metadata, metrics, and so on.",
        "privilege": "DescribeEntityRecognizer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "entity-recognizer*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the properties associated with a key phrases detection job.",
        "privilege": "DescribeKeyPhrasesDetectionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the properties associated with a sentiment detection job.",
        "privilege": "DescribeSentimentDetectionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the properties associated with a topic detection job.",
        "privilege": "DescribeTopicsDetectionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Detects the language or languages present in the text.",
        "privilege": "DetectDominantLanguage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Detects the named entities (\"People\", \"Places\", \"Locations\", etc) within the given text document.",
        "privilege": "DetectEntities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Detects the phrases in the text that are most indicative of the content.",
        "privilege": "DetectKeyPhrases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Detects the sentiment of a text in a document (Positive, Negative, Neutral, or Mixed).",
        "privilege": "DetectSentiment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Detects syntactic information (like Part of Speech, Tokens) in a text document.",
        "privilege": "DetectSyntax",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets a list of the document classification jobs that you have submitted.",
        "privilege": "ListDocumentClassificationJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets a list of the document classifiers that you have created.",
        "privilege": "ListDocumentClassifiers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets a list of the dominant language detection jobs that you have submitted.",
        "privilege": "ListDominantLanguageDetectionJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets a list of all existing endpoints that you've created.",
        "privilege": "ListEndpoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets a list of the entity detection jobs that you have submitted.",
        "privilege": "ListEntitiesDetectionJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets a list of the properties of all entity recognizers that you created, including recognizers currently in training.",
        "privilege": "ListEntityRecognizers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get a list of key phrase detection jobs that you have submitted.",
        "privilege": "ListKeyPhrasesDetectionJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets a list of sentiment detection jobs that you have submitted.",
        "privilege": "ListSentimentDetectionJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists tags for a resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document-classifier"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document-classifier-endpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "entity-recognizer"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets a list of the topic detection jobs that you have submitted.",
        "privilege": "ListTopicsDetectionJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts an asynchronous document classification job.",
        "privilege": "StartDocumentClassificationJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document-classifier*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts an asynchronous dominant language detection job for a collection of documents.",
        "privilege": "StartDominantLanguageDetectionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts an asynchronous entity detection job for a collection of documents.",
        "privilege": "StartEntitiesDetectionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts an asynchronous key phrase detection job for a collection of documents.",
        "privilege": "StartKeyPhrasesDetectionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts an asynchronous sentiment detection job for a collection of documents.",
        "privilege": "StartSentimentDetectionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts an asynchronous job to detect the most common topics in the collection of documents and the phrases associated with each topic.",
        "privilege": "StartTopicsDetectionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a dominant language detection job.",
        "privilege": "StopDominantLanguageDetectionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops an entity detection job.",
        "privilege": "StopEntitiesDetectionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a key phrase detection job.",
        "privilege": "StopKeyPhrasesDetectionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a sentiment detection job.",
        "privilege": "StopSentimentDetectionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stop a previously created document classifier training job.",
        "privilege": "StopTrainingDocumentClassifier",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document-classifier*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stop a previously created entity recognizer training job.",
        "privilege": "StopTrainingEntityRecognizer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "entity-recognizer*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Tags a resource with given key value pairs",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document-classifier"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document-classifier-endpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "entity-recognizer"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Untags a resource with given key",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document-classifier"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document-classifier-endpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "entity-recognizer"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates information about the specified endpoint.",
        "privilege": "UpdateEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document-classifier-endpoint*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:document-classifier/${DocumentClassifierName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "document-classifier"
      },
      {
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:entity-recognizer/${EntityRecognizerName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "entity-recognizer"
      },
      {
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:document-classifier-endpoint/${DocumentClassifierEndpointName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "document-classifier-endpoint"
      }
    ],
    "service_name": "Amazon Comprehend"
  },
  {
    "conditions": [],
    "prefix": "comprehendmedical",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Inspects the specified text for the specified type of entities and returns information about them.",
        "privilege": "DetectEntities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Inspects the specified text for PHI entities and returns information about them.",
        "privilege": "DetectPHI",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Comprehend Medical"
  },
  {
    "conditions": [],
    "prefix": "compute-optimizer",
    "privileges": [
      {
        "access_level": "List",
        "description": "Grants permission to get recommendations for the provided autoscaling groups.",
        "privilege": "GetAutoScalingGroupRecommendations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get recommendations for the provided EC2 instances.",
        "privilege": "GetEC2InstanceRecommendations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get the recommendation projected metrics of the specified instance.",
        "privilege": "GetEC2RecommendationProjectedMetrics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get the enrollment status for the specified account.",
        "privilege": "GetEnrollmentStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get the recommendation summaries for the specified account(s).",
        "privilege": "GetRecommendationSummaries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the enrollment status.",
        "privilege": "UpdateEnrollmentStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Compute Optimizer"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value assoicated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of mandatory tags in the request",
        "type": "String"
      }
    ],
    "prefix": "config",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Returns the current configuration items for resources that are present in your AWS Config aggregator",
        "privilege": "BatchGetAggregateResourceConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigurationAggregator*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the current configuration for one or more requested resources",
        "privilege": "BatchGetResourceConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the authorization granted to the specified configuration aggregator account in a specified region",
        "privilege": "DeleteAggregationAuthorization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "AggregationAuthorization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified AWS Config rule and all of its evaluation results",
        "privilege": "DeleteConfigRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigRule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified configuration aggregator and the aggregated data associated with the aggregator",
        "privilege": "DeleteConfigurationAggregator",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigurationAggregator*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the configuration recorder",
        "privilege": "DeleteConfigurationRecorder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified conformance pack and all the AWS Config rules and all evaluation results within that conformance pack.",
        "privilege": "DeleteConformancePack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the delivery channel",
        "privilege": "DeleteDeliveryChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the evaluation results for the specified Config rule",
        "privilege": "DeleteEvaluationResults",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigRule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified organization config rule and all of its evaluation results from all member accounts in that organization.",
        "privilege": "DeleteOrganizationConfigRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified organization conformance pack and all of its evaluation results from all member accounts in that organization.",
        "privilege": "DeleteOrganizationConformancePack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes pending authorization requests for a specified aggregator account in a specified region",
        "privilege": "DeletePendingAggregationRequest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the remediation configuration",
        "privilege": "DeleteRemediationConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RemediationConfiguration*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes one or more remediation exceptions for specific resource keys for a specific AWS Config Rule.",
        "privilege": "DeleteRemediationExceptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the retention configuration",
        "privilege": "DeleteRetentionConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Schedules delivery of a configuration snapshot to the Amazon S3 bucket in the specified delivery channel",
        "privilege": "DeliverConfigSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of compliant and noncompliant rules with the number of resources for compliant and noncompliant rules",
        "privilege": "DescribeAggregateComplianceByConfigRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigurationAggregator*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of authorizations granted to various aggregator accounts and regions",
        "privilege": "DescribeAggregationAuthorizations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Indicates whether the specified AWS Config rules are compliant",
        "privilege": "DescribeComplianceByConfigRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigRule*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Indicates whether the specified AWS resources are compliant",
        "privilege": "DescribeComplianceByResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns status information for each of your AWS managed Config rules",
        "privilege": "DescribeConfigRuleEvaluationStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigRule*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns details about your AWS Config rules",
        "privilege": "DescribeConfigRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigRule*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns status information for sources within an aggregator",
        "privilege": "DescribeConfigurationAggregatorSourcesStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigurationAggregator*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the details of one or more configuration aggregators",
        "privilege": "DescribeConfigurationAggregators",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the current status of the specified configuration recorder",
        "privilege": "DescribeConfigurationRecorderStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the name of one or more specified configuration recorders",
        "privilege": "DescribeConfigurationRecorders",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns compliance information for each rule in that conformance pack.",
        "privilege": "DescribeConformancePackCompliance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Provides one or more conformance packs deployment status.",
        "privilege": "DescribeConformancePackStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of one or more conformance packs.",
        "privilege": "DescribeConformancePacks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the current status of the specified delivery channel",
        "privilege": "DescribeDeliveryChannelStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns details about the specified delivery channel",
        "privilege": "DescribeDeliveryChannels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Provides organization config rule deployment status for an organization.",
        "privilege": "DescribeOrganizationConfigRuleStatuses",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of organization config rules.",
        "privilege": "DescribeOrganizationConfigRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Provides organization conformance pack deployment status for an organization.",
        "privilege": "DescribeOrganizationConformancePackStatuses",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of organization conformance packs.",
        "privilege": "DescribeOrganizationConformancePacks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of all pending aggregation requests",
        "privilege": "DescribePendingAggregationRequests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the details of one or more remediation configurations",
        "privilege": "DescribeRemediationConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RemediationConfiguration*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the details of one or more remediation exceptions.",
        "privilege": "DescribeRemediationExceptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Provides a detailed view of a Remediation Execution for a set of resources including state, timestamps and any error messages for steps that have failed",
        "privilege": "DescribeRemediationExecutionStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RemediationConfiguration*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the details of one or more retention configurations",
        "privilege": "DescribeRetentionConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the evaluation results for the specified AWS Config rule for a specific resource in a rule",
        "privilege": "GetAggregateComplianceDetailsByConfigRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigurationAggregator*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the number of compliant and noncompliant rules for one or more accounts and regions in an aggregator",
        "privilege": "GetAggregateConfigRuleComplianceSummary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigurationAggregator*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the resource counts across accounts and regions that are present in your AWS Config aggregator",
        "privilege": "GetAggregateDiscoveredResourceCounts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigurationAggregator*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns configuration item that is aggregated for your specific resource in a specific source account and region",
        "privilege": "GetAggregateResourceConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigurationAggregator*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the evaluation results for the specified AWS Config rule",
        "privilege": "GetComplianceDetailsByConfigRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigRule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the evaluation results for the specified AWS resource",
        "privilege": "GetComplianceDetailsByResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the number of AWS Config rules that are compliant and noncompliant, up to a maximum of 25 for each",
        "privilege": "GetComplianceSummaryByConfigRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the number of resources that are compliant and the number that are noncompliant",
        "privilege": "GetComplianceSummaryByResourceType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns compliance details of a conformance pack for all AWS resources that are monitered by conformance pack.",
        "privilege": "GetConformancePackComplianceDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Provides compliance summary for one or more conformance packs.",
        "privilege": "GetConformancePackComplianceSummary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the resource types, the number of each resource type, and the total number of resources that AWS Config is recording in this region for your AWS account",
        "privilege": "GetDiscoveredResourceCounts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns detailed status for each member account within an organization for a given organization config rule.",
        "privilege": "GetOrganizationConfigRuleDetailedStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns detailed status for each member account within an organization for a given organization conformance pack.",
        "privilege": "GetOrganizationConformancePackDetailedStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of configuration items for the specified resource",
        "privilege": "GetResourceConfigHistory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Accepts a resource type and returns a list of resource identifiers that are aggregated for a specific resource type across accounts and regions",
        "privilege": "ListAggregateDiscoveredResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigurationAggregator*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Accepts a resource type and returns a list of resource identifiers for the resources of that type",
        "privilege": "ListDiscoveredResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the tags for AWS Config resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "AggregationAuthorization"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigRule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigurationAggregator"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Authorizes the aggregator account and region to collect data from the source account and region",
        "privilege": "PutAggregationAuthorization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "AggregationAuthorization*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds or updates an AWS Config rule for evaluating whether your AWS resources comply with your desired configurations",
        "privilege": "PutConfigRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigRule*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates and updates the configuration aggregator with the selected source accounts and regions",
        "privilege": "PutConfigurationAggregator",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigurationAggregator*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new configuration recorder to record the selected resource configurations",
        "privilege": "PutConfigurationRecorder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates a conformance pack.",
        "privilege": "PutConformancePack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a delivery channel object to deliver configuration information to an Amazon S3 bucket and Amazon SNS topic",
        "privilege": "PutDeliveryChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used by an AWS Lambda function to deliver evaluation results to AWS Config",
        "privilege": "PutEvaluations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds or updates organization config rule for your entire organization evaluating whether your AWS resources comply with your desired configurations.",
        "privilege": "PutOrganizationConfigRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds or updates organization conformance pack for your entire organization evaluating whether your AWS resources comply with your desired configurations.",
        "privilege": "PutOrganizationConformancePack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds or updates the remediation configuration with a specific AWS Config rule with the selected target or action",
        "privilege": "PutRemediationConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RemediationConfiguration*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds or updates remediation exceptions for specific resources for a specific AWS Config rule.",
        "privilege": "PutRemediationExceptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates and updates the retention configuration with details about retention period (number of days) that AWS Config stores your historical information",
        "privilege": "PutRetentionConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Accepts a structured query language (SQL) SELECT command, performs the corresponding search, and returns resource configurations matching the properties",
        "privilege": "SelectResourceConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Evaluates your resources against the specified Config rules",
        "privilege": "StartConfigRulesEvaluation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigRule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts recording configurations of the AWS resources you have selected to record in your AWS account",
        "privilege": "StartConfigurationRecorder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Runs an on-demand remediation for the specified AWS Config rules against the last known remediation configuration",
        "privilege": "StartRemediationExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RemediationConfiguration*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops recording configurations of the AWS resources you have selected to record in your AWS account",
        "privilege": "StopConfigurationRecorder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Associates the specified tags to a resource with the specified resourceArn",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "AggregationAuthorization"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigRule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigurationAggregator"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConformancePack"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Deletes specified tags from a resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "AggregationAuthorization"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigRule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConfigurationAggregator"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ConformancePack"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:config:${Region}:${Account}:aggregation-authorization/${AggregatorAccount}/${AggregatorRegion}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "AggregationAuthorization"
      },
      {
        "arn": "arn:${Partition}:config:${Region}:${Account}:config-aggregator/${AggregatorId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "ConfigurationAggregator"
      },
      {
        "arn": "arn:${Partition}:config:${Region}:${Account}:config-rule/${ConfigRuleId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "ConfigRule"
      },
      {
        "arn": "arn:${Partition}:config:${Region}:${Account}:conformance-pack/${ConformancePackName}/${ConformancePackId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "ConformancePack"
      },
      {
        "arn": "arn:${Partition}:config:${Region}:${Account}:organization-config-rule/${OrganizationConfigRuleId}",
        "condition_keys": [],
        "resource": "OrganizationConfigRule"
      },
      {
        "arn": "arn:${Partition}:config:${Region}:${Account}:organization-conformance-pack/${OrganizationConformancePackId}",
        "condition_keys": [],
        "resource": "OrganizationConformancePack"
      },
      {
        "arn": "arn:${Partition}:config:${Region}:${Account}:remediation-configuration/${RemediationConfigurationId}",
        "condition_keys": [],
        "resource": "RemediationConfiguration"
      }
    ],
    "service_name": "AWS Config"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request.",
        "type": "String"
      }
    ],
    "prefix": "connect",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permissions to create a new Amazon Connect instance. The associated required actions grant permissions to configure instance settings.",
        "privilege": "CreateInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "ds:CreateAlias",
              "ds:DeleteDirectory",
              "ds:DescribeDirectories",
              "firehose:DescribeDeliveryStream",
              "firehose:ListDeliveryStreams",
              "iam:CreateServiceLinkedRole",
              "kinesis:DescribeStream",
              "kinesis:ListStreams",
              "kms:CreateGrant",
              "kms:DescribeKey",
              "kms:ListAliases",
              "kms:RetireGrant",
              "s3:CreateBucket",
              "s3:ListAllMyBuckets"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a user for the specified Amazon Connect instance.",
        "privilege": "CreateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "routing-profile*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "security-profile*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hierarchy-group"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to delete a user in an Amazon Connect instance.",
        "privilege": "DeleteUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permissions to view details of an Amazon Connect instance. This is required to create an instance.",
        "privilege": "DescribeInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "firehose:DescribeDeliveryStream",
              "firehose:ListDeliveryStreams",
              "kinesis:DescribeStream",
              "kinesis:ListStreams",
              "kms:DescribeKey",
              "kms:ListAliases",
              "s3:ListAllMyBuckets"
            ],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permissions to describe a user in an Amazon Connect instance.",
        "privilege": "DescribeUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permissions to describe a hierarchy group for an Amazon Connect instance.",
        "privilege": "DescribeUserHierarchyGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hierarchy-group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permissions to describe the hierarchy structure for an Amazon Connect instance.",
        "privilege": "DescribeUserHierarchyStructure",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to delete an Amazon Connect instance. When you remove an instance, the link to an existing AWS directory is also removed.",
        "privilege": "DestroyInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permissions to retrieve the contact attributes for the specified contact.",
        "privilege": "GetContactAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "contact*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permissions to retrieve current metric data for the queues in an Amazon Connect instance.",
        "privilege": "GetCurrentMetricData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Allows federation into an instance when using SAML-based authentication for identity management.",
        "privilege": "GetFederationToken",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to federate in to an Amazon Connect instance (Log in as administrator functionality in the AWS console).",
        "privilege": "GetFederationTokens",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "connect:DescribeInstance",
              "connect:ListInstances",
              "ds:DescribeDirectories"
            ],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permissions to retrieve historical metric data for queues in an Amazon Connect instance.",
        "privilege": "GetMetricData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to list contact flow resources in an Amazon Connect instance.",
        "privilege": "ListContactFlows",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to list hours of operation resources in an Amazon Connect instance.",
        "privilege": "ListHoursOfOperations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to view the Amazon Connect instances associated with an AWS account.",
        "privilege": "ListInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to list phone number resources in an Amazon Connect instance.",
        "privilege": "ListPhoneNumbers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to list queue resources in an Amazon Connect instance.",
        "privilege": "ListQueues",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to list routing profile resources in an Amazon Connect instance.",
        "privilege": "ListRoutingProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to list security profile resources in an Amazon Connect instance.",
        "privilege": "ListSecurityProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permissions to list tags for an Amazon Connect resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to list the hierarchy group resources in an Amazon Connect instance.",
        "privilege": "ListUserHierarchyGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to list user resources in an Amazon Connect instance.",
        "privilege": "ListUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to modify configuration settings for an existing Amazon Connect instance. The associated required actions grant permission modify the settings for the instance.",
        "privilege": "ModifyInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "firehose:DescribeDeliveryStream",
              "firehose:ListDeliveryStreams",
              "kinesis:DescribeStream",
              "kinesis:ListStreams",
              "kms:CreateGrant",
              "kms:DescribeKey",
              "kms:ListAliases",
              "kms:RetireGrant",
              "s3:CreateBucket",
              "s3:ListAllMyBuckets"
            ],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to initiate a chat using the Amazon Connect API.",
        "privilege": "StartChatContact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "contact-flow*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to initiate outbound calls using the Amazon Connect API.",
        "privilege": "StartOutboundVoiceContact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "contact*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to stop contacts that were initiated using the Amazon Connect API. If you use this operation on an active contact the contact ends, even if the agent is active on a call with a customer.",
        "privilege": "StopContact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "contact*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permissions to tag an Amazon Connect resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permissions to untag an Amazon Connect resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to create or update the contact attributes associated with the specified contact.",
        "privilege": "UpdateContactAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "contact*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to update a hierarchy group for a user in an Amazon Connect instance.",
        "privilege": "UpdateUserHierarchy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hierarchy-group"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to update identity information for a user in an Amazon Connect instance.",
        "privilege": "UpdateUserIdentityInfo",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to update phone configuration settings for a user in an Amazon Connect instance.",
        "privilege": "UpdateUserPhoneConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to update a routing profile for a user in an Amazon Connect instance.",
        "privilege": "UpdateUserRoutingProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "routing-profile*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to update security profiles for a user in an Amazon Connect instance.",
        "privilege": "UpdateUserSecurityProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "security-profile*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}",
        "condition_keys": [],
        "resource": "instance"
      },
      {
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/contact/${ContactId}",
        "condition_keys": [],
        "resource": "contact"
      },
      {
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/agent/${UserId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "user"
      },
      {
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/routing-profile/${RoutingProfileId}",
        "condition_keys": [],
        "resource": "routing-profile"
      },
      {
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/security-profile/${SecurityProfileId}",
        "condition_keys": [],
        "resource": "security-profile"
      },
      {
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/agent-group/${HierarchyGroupId}",
        "condition_keys": [],
        "resource": "hierarchy-group"
      },
      {
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/queue/${QueueId}",
        "condition_keys": [],
        "resource": "queue"
      },
      {
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/contact-flow/${ContactFlowId}",
        "condition_keys": [],
        "resource": "contact-flow"
      },
      {
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/operating-hours/${HoursOfOperationId}",
        "condition_keys": [],
        "resource": "hours-of-operation"
      },
      {
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/phone-numbers/${PhoneNumberId}",
        "condition_keys": [],
        "resource": "phone-number"
      }
    ],
    "service_name": "Amazon Connect"
  },
  {
    "conditions": [],
    "prefix": "cur",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Delete Cost and Usage Report Definition",
        "privilege": "DeleteReportDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cur*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get Cost and Usage Report Definitions",
        "privilege": "DescribeReportDefinitions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modify Cost and Usage Report Definition",
        "privilege": "ModifyReportDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cur*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Write Cost and Usage Report Definition",
        "privilege": "PutReportDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cur*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:cur:${Region}:${Account}:definition/${ReportName}",
        "condition_keys": [],
        "resource": "cur"
      }
    ],
    "service_name": "AWS Cost and Usage Report"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters create requests based on the allowed set of values for each of the mandatory tags.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on the tag value associated with the resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters create requests based on the presence of mandatory tags in the request.",
        "type": "String"
      },
      {
        "condition": "dataexchange:JobType",
        "description": "Indicates that the action can only be performed on the specified job type.",
        "type": "String"
      }
    ],
    "prefix": "dataexchange",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permissions to cancel a job.",
        "privilege": "CancelJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "jobs*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an asset (for example, in a Job).",
        "privilege": "CreateAsset",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:ResourceTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a data set.",
        "privilege": "CreateDataSet",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:ResourceTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to create a job to import or export assets.",
        "privilege": "CreateJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "jobs*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a revision.",
        "privilege": "CreateRevision",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:ResourceTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to delete an asset.",
        "privilege": "DeleteAsset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "assets*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to delete a data set.",
        "privilege": "DeleteDataSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "data-sets*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to delete a revision.",
        "privilege": "DeleteRevision",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "revisions*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permissions to get information about an asset and to export it (for example, in a Job).",
        "privilege": "GetAsset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "assets*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about a data set.",
        "privilege": "GetDataSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "data-sets*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to get information about a job.",
        "privilege": "GetJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "jobs*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about a revision.",
        "privilege": "GetRevision",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "revisions*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to list the revisions of a data set.",
        "privilege": "ListDataSetRevisions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "revisions*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list data sets for the account.",
        "privilege": "ListDataSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "data-sets*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to list jobs for the account.",
        "privilege": "ListJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "jobs*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permissions to get list the assets of a revision.",
        "privilege": "ListRevisionAssets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "assets*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list the tags that you associated with the specified resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "data-sets"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "revisions"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to start a job.",
        "privilege": "StartJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "jobs*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add one or more tags to a specified resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "data-sets"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "revisions"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove one or more tags from a specified resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "data-sets"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "revisions"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to get update information about an asset.",
        "privilege": "UpdateAsset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "assets*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to update information about a data set.",
        "privilege": "UpdateDataSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "data-sets*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to update information about a revision.",
        "privilege": "UpdateRevision",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "revisions*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:dataexchange:${Region}:${Account}:jobs/${JobId}",
        "condition_keys": [
          "dataexchange:JobType"
        ],
        "resource": "jobs"
      },
      {
        "arn": "arn:${Partition}:dataexchange:${Region}:${Account}:data-sets/${DataSetId}",
        "condition_keys": [],
        "resource": "data-sets"
      },
      {
        "arn": "arn:${Partition}:dataexchange:${Region}:${Account}:data-sets/${DataSetId}/revisions/${RevisionId}",
        "condition_keys": [],
        "resource": "revisions"
      },
      {
        "arn": "arn:${Partition}:dataexchange:${Region}:${Account}:data-sets/${DataSetId}/revisions/${RevisionId}/assets/${AssetId}",
        "condition_keys": [],
        "resource": "assets"
      }
    ],
    "service_name": "AWS Data Exchange"
  },
  {
    "conditions": [
      {
        "condition": "datapipeline:PipelineCreator",
        "description": "The IAM user that created the pipeline.",
        "type": "ARN"
      },
      {
        "condition": "datapipeline:Tag",
        "description": "A customer-specified key/value pair that can be attached to a resource.",
        "type": "ARN"
      },
      {
        "condition": "datapipeline:workerGroup",
        "description": "The name of a worker group for which a Task Runner retrieves work.",
        "type": "ARN"
      }
    ],
    "prefix": "datapipeline",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Validates the specified pipeline and starts processing pipeline tasks. If the pipeline does not pass validation, activation fails.",
        "privilege": "ActivatePipeline",
        "resource_types": [
          {
            "condition_keys": [
              "datapipeline:PipelineCreator",
              "datapipeline:Tag",
              "datapipeline:workerGroup"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds or modifies tags for the specified pipeline.",
        "privilege": "AddTags",
        "resource_types": [
          {
            "condition_keys": [
              "datapipeline:PipelineCreator",
              "datapipeline:Tag"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new, empty pipeline.",
        "privilege": "CreatePipeline",
        "resource_types": [
          {
            "condition_keys": [
              "datapipeline:Tag"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deactivates the specified running pipeline.",
        "privilege": "DeactivatePipeline",
        "resource_types": [
          {
            "condition_keys": [
              "datapipeline:PipelineCreator",
              "datapipeline:Tag",
              "datapipeline:workerGroup"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a pipeline, its pipeline definition, and its run history.",
        "privilege": "DeletePipeline",
        "resource_types": [
          {
            "condition_keys": [
              "datapipeline:PipelineCreator",
              "datapipeline:Tag"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the object definitions for a set of objects associated with the pipeline.",
        "privilege": "DescribeObjects",
        "resource_types": [
          {
            "condition_keys": [
              "datapipeline:PipelineCreator",
              "datapipeline:Tag"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves metadata about one or more pipelines.",
        "privilege": "DescribePipelines",
        "resource_types": [
          {
            "condition_keys": [
              "datapipeline:PipelineCreator",
              "datapipeline:Tag"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Task runners call EvaluateExpression to evaluate a string in the context of the specified object.",
        "privilege": "EvaluateExpression",
        "resource_types": [
          {
            "condition_keys": [
              "datapipeline:PipelineCreator",
              "datapipeline:Tag"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Description for GetAccountLimits",
        "privilege": "GetAccountLimits",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the definition of the specified pipeline.",
        "privilege": "GetPipelineDefinition",
        "resource_types": [
          {
            "condition_keys": [
              "datapipeline:PipelineCreator",
              "datapipeline:Tag",
              "datapipeline:workerGroup"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the pipeline identifiers for all active pipelines that you have permission to access.",
        "privilege": "ListPipelines",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Task runners call PollForTask to receive a task to perform from AWS Data Pipeline.",
        "privilege": "PollForTask",
        "resource_types": [
          {
            "condition_keys": [
              "datapipeline:workerGroup"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Description for PutAccountLimits",
        "privilege": "PutAccountLimits",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds tasks, schedules, and preconditions to the specified pipeline.",
        "privilege": "PutPipelineDefinition",
        "resource_types": [
          {
            "condition_keys": [
              "datapipeline:PipelineCreator",
              "datapipeline:Tag",
              "datapipeline:workerGroup"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Queries the specified pipeline for the names of objects that match the specified set of conditions.",
        "privilege": "QueryObjects",
        "resource_types": [
          {
            "condition_keys": [
              "datapipeline:PipelineCreator",
              "datapipeline:Tag"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes existing tags from the specified pipeline.",
        "privilege": "RemoveTags",
        "resource_types": [
          {
            "condition_keys": [
              "datapipeline:PipelineCreator",
              "datapipeline:Tag"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Task runners call ReportTaskProgress when assigned a task to acknowledge that it has the task.",
        "privilege": "ReportTaskProgress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Task runners call ReportTaskRunnerHeartbeat every 15 minutes to indicate that they are operational.",
        "privilege": "ReportTaskRunnerHeartbeat",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Requests that the status of the specified physical or logical pipeline objects be updated in the specified pipeline.",
        "privilege": "SetStatus",
        "resource_types": [
          {
            "condition_keys": [
              "datapipeline:PipelineCreator",
              "datapipeline:Tag"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Task runners call SetTaskStatus to notify AWS Data Pipeline that a task is completed and provide information about the final status.",
        "privilege": "SetTaskStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Validates the specified pipeline definition to ensure that it is well formed and can be run without error.",
        "privilege": "ValidatePipelineDefinition",
        "resource_types": [
          {
            "condition_keys": [
              "datapipeline:PipelineCreator",
              "datapipeline:Tag",
              "datapipeline:workerGroup"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Data Pipeline"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters create requests based on the allowed set of values for each of the tags.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value associated with the resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters create requests based on the presence of mandatory tags in the request.",
        "type": "String"
      }
    ],
    "prefix": "datasync",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Cancels execution of a sync task.",
        "privilege": "CancelTaskExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "taskexecution*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Activates an agent that you have deployed on your host.",
        "privilege": "CreateAgent",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an endpoint for an Amazon EFS file system.",
        "privilege": "CreateLocationEfs",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an endpoint for a NFS file system.",
        "privilege": "CreateLocationNfs",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an endpoint for an Amazon S3 bucket.",
        "privilege": "CreateLocationS3",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an endpoint for an SMB file system.",
        "privilege": "CreateLocationSmb",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a sync task.",
        "privilege": "CreateTask",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an agent.",
        "privilege": "DeleteAgent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "agent*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the configuration of a location used by AWS DataSync.",
        "privilege": "DeleteLocation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "location*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a sync task.",
        "privilege": "DeleteTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns metadata such as name, network interfaces, and the status (that is, whether the agent is running or not) about a sync agent.",
        "privilege": "DescribeAgent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "agent*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns metadata, such as the path information about an Amazon EFS sync location.",
        "privilege": "DescribeLocationEfs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "location*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns metadata, such as the path information, about a NFS sync location.",
        "privilege": "DescribeLocationNfs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "location*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns metadata, such as bucket name, about an Amazon S3 bucket sync location.",
        "privilege": "DescribeLocationS3",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "location*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns metadata, such as the path information, about an SMB sync location.",
        "privilege": "DescribeLocationSmb",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "location*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns metadata about a sync task.",
        "privilege": "DescribeTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns detailed metadata about a sync task that is being executed.",
        "privilege": "DescribeTaskExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "taskexecution*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of agents owned by an AWS account in a region specified in the request.",
        "privilege": "ListAgents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a lists of source and destination sync locations.",
        "privilege": "ListLocations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This operation lists the tags that have been added to the specified resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "agent"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "location"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of executed sync tasks.",
        "privilege": "ListTaskExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of all the sync tasks.",
        "privilege": "ListTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a specific invocation of a sync task.",
        "privilege": "StartTaskExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Applies a key-value pair to an AWS resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "agent"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "location"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This operation removes one or more tags from the specified resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "agent"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "location"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the name of an agent.",
        "privilege": "UpdateAgent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "agent*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the metadata associated with a sync task.",
        "privilege": "UpdateTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:datasync:${Region}:${AccountId}:agent/${AgentId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "agent"
      },
      {
        "arn": "arn:${Partition}:datasync:${Region}:${AccountId}:location/${LocationId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "location"
      },
      {
        "arn": "arn:${Partition}:datasync:${Region}:${AccountId}:task/${TaskId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "task"
      },
      {
        "arn": "arn:${Partition}:datasync:${Region}:${AccountId}:task/${TaskId}/execution/${ExecutionId}",
        "condition_keys": [],
        "resource": "taskexecution"
      }
    ],
    "service_name": "DataSync"
  },
  {
    "conditions": [
      {
        "condition": "dax:EnclosingOperation",
        "description": "Used to block Transactions APIs calls and allow the non-Transaction APIs calls and vice-versa.",
        "type": "String"
      }
    ],
    "prefix": "dax",
    "privileges": [
      {
        "access_level": "Read",
        "description": "The BatchGetItem action returns the attributes of one or more items from one or more tables.",
        "privilege": "BatchGetItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The BatchWriteItem action operation puts or deletes multiple items in one or more tables.",
        "privilege": "BatchWriteItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "The ConditionCheckItem operation checks the existence of a set of attributes for the item with the given primary key",
        "privilege": "ConditionCheckItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateCluster action creates a DAX cluster.",
        "privilege": "CreateCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "dax:CreateParameterGroup",
              "dax:CreateSubnetGroup",
              "ec2:CreateNetworkInterface",
              "ec2:DeleteNetworkInterface",
              "ec2:DescribeNetworkInterfaces",
              "ec2:DescribeSecurityGroups",
              "ec2:DescribeSubnets",
              "ec2:DescribeVpcs",
              "iam:GetRole",
              "iam:PassRole"
            ],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateParameterGroup action creates collection of parameters that you apply to all of the nodes in a DAX cluster.",
        "privilege": "CreateParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateSubnetGroup action creates a new subnet group.",
        "privilege": "CreateSubnetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DecreaseReplicationFactor action removes one or more nodes from a DAX cluster.",
        "privilege": "DecreaseReplicationFactor",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteCluster action deletes a previously provisioned DAX cluster.",
        "privilege": "DeleteCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteItem action deletes a single item in a table by primary key.",
        "privilege": "DeleteItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [
              "dax:EnclosingOperation"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteParameterGroup action deletes the specified parameter group.",
        "privilege": "DeleteParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteSubnetGroup action deletes a subnet group.",
        "privilege": "DeleteSubnetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeClusters action returns information about all provisioned DAX clusters.",
        "privilege": "DescribeClusters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeDefaultParameters action returns the default system parameter information for DAX.",
        "privilege": "DescribeDefaultParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeEvents action returns events related to DAX clusters and parameter groups.",
        "privilege": "DescribeEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeParameterGroups action returns a list of parameter group descriptions.",
        "privilege": "DescribeParameterGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "The DescribeParameters action returns the detailed parameter list for a particular parameter group.",
        "privilege": "DescribeParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeSubnetGroups action returns a list of subnet group descriptions.",
        "privilege": "DescribeSubnetGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "The GetItem action returns a set of attributes for the item with the given primary key.",
        "privilege": "GetItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [
              "dax:EnclosingOperation"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The IncreaseReplicationFactor action adds one or more nodes to a DAX cluster.",
        "privilege": "IncreaseReplicationFactor",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "The ListTags action returns a list all of the tags for a DAX cluster.",
        "privilege": "ListTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The PutItem action creates a new item, or replaces an old item with a new item.",
        "privilege": "PutItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [
              "dax:EnclosingOperation"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "The Query action finds items based on primary key values. You can query any table or secondary index that has a composite primary key (a partition key and a sort key).",
        "privilege": "Query",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The RebootNode action reboots a single node of a DAX cluster.",
        "privilege": "RebootNode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "The Scan action returns one or more items and item attributes by accessing every item in a table or a secondary index.",
        "privilege": "Scan",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "The TagResource action associates a set of tags with a DAX resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "The UntagResource action removes the association of tags from a DAX resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The UpdateCluster action modifies the settings for a DAX cluster.",
        "privilege": "UpdateCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The UpdateItem action edits an existing item's attributes, or adds a new item to the table if it does not already exist.",
        "privilege": "UpdateItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [
              "dax:EnclosingOperation"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The UpdateParameterGroup action modifies the parameters of a parameter group.",
        "privilege": "UpdateParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The UpdateSubnetGroup action modifies an existing subnet group.",
        "privilege": "UpdateSubnetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:dax:${Region}:${Account}:cache/${ClusterName}",
        "condition_keys": [],
        "resource": "application"
      }
    ],
    "service_name": "Amazon DynamoDB Accelerator (DAX)"
  },
  {
    "conditions": [],
    "prefix": "dbqms",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a new favorite query",
        "privilege": "CreateFavoriteQuery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Add a query to the history",
        "privilege": "CreateQueryHistory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete saved queries",
        "privilege": "DeleteFavoriteQueries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a historical query",
        "privilege": "DeleteQueryHistory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List saved queries and associated metadata",
        "privilege": "DescribeFavoriteQueries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List history of queries that were run",
        "privilege": "DescribeQueryHistory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve favorite or history query string by id",
        "privilege": "GetQueryString",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update saved query and description",
        "privilege": "UpdateFavoriteQuery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the query history",
        "privilege": "UpdateQueryHistory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Database Query Metadata Service"
  },
  {
    "conditions": [],
    "prefix": "deepcomposer",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Associates a DeepComposer coupon (or DSN) with the account associated with the sender of the request.",
        "privilege": "AssociateCoupon",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an audio file by converting the midi composition into a wav or mp3 file.",
        "privilege": "CreateAudio",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "composition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a multi-track midi composition.",
        "privilege": "CreateComposition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts creating/training a generative-model that is able to perform inference against the user-provided piano-melody to create a multi-track midi composition.",
        "privilege": "CreateModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the composition.",
        "privilege": "DeleteComposition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "composition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the model.",
        "privilege": "DeleteModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "model*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the composition.",
        "privilege": "GetComposition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "composition*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the model.",
        "privilege": "GetModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "model*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the sample/pre-trained DeepComposer model.",
        "privilege": "GetSampleModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of all the compositions owned by the sender of the request.",
        "privilege": "ListCompositions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of all the models owned by the sender of the request.",
        "privilege": "ListModels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of all the sample/pre-trained models provided by the DeepComposer service.",
        "privilege": "ListSampleModels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of all the training options or topic for creating/training a model.",
        "privilege": "ListTrainingTopics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the mutable properties associated with a composition.",
        "privilege": "UpdateComposition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "composition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the mutable properties associated with a model.",
        "privilege": "UpdateModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "model*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:deepcomposer:${Region}:${Account}:model/${ModelId}",
        "condition_keys": [],
        "resource": "model"
      },
      {
        "arn": "arn:${Partition}:deepcomposer:${Region}:${Account}:composition/${CompositionId}",
        "condition_keys": [],
        "resource": "composition"
      },
      {
        "arn": "arn:${Partition}:deepcomposer:${Region}:${Account}:audio/${AudioId}",
        "condition_keys": [],
        "resource": "audio"
      }
    ],
    "service_name": "AWS DeepComposer"
  },
  {
    "conditions": [],
    "prefix": "deeplens",
    "privileges": [
      {
        "access_level": "Permissions management",
        "description": "Associates the user's account with IAM roles controlling various permissions needed by AWS DeepLens for proper functionality.",
        "privilege": "AssociateServiceRoleToAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a list of AWS DeepLens devices.",
        "privilege": "BatchGetDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a list of AWS DeepLens Models.",
        "privilege": "BatchGetModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "model*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a list of AWS DeepLens Projects.",
        "privilege": "BatchGetProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a certificate package that is used to successfully authenticate and Register an AWS DeepLens device.",
        "privilege": "CreateDeviceCertificates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new AWS DeepLens Model.",
        "privilege": "CreateModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new AWS DeepLens Project.",
        "privilege": "CreateProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an AWS DeepLens Model.",
        "privilege": "DeleteModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "model*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an AWS DeepLens Project.",
        "privilege": "DeleteProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deploys an AWS DeepLens project to a registered AWS DeepLens device.",
        "privilege": "DeployProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Begins a device de-registration workflow for a registered AWS DeepLens device.",
        "privilege": "DeregisterDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the account level resources associated with the user's account.",
        "privilege": "GetAssociatedResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the the deployment status of a particular AWS DeepLens device, along with any associated metadata.",
        "privilege": "GetDeploymentStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves information about an AWS DeepLens device.",
        "privilege": "GetDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves an AWS DeepLens Model.",
        "privilege": "GetModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "model*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves an AWS DeepLens Project.",
        "privilege": "GetProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new AWS DeepLens project from a sample project template.",
        "privilege": "ImportProjectFromTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves a list of AWS DeepLens Deployment identifiers.",
        "privilege": "ListDeployments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves a list of AWS DeepLens device identifiers.",
        "privilege": "ListDevices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves a list of AWS DeepLens Model identifiers.",
        "privilege": "ListModels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves a list of AWS DeepLens Project identifiers.",
        "privilege": "ListProjects",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Begins a device registration workflow for an AWS DeepLens device.",
        "privilege": "RegisterDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes a deployed AWS DeepLens project from an AWS DeepLens device.",
        "privilege": "RemoveProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing AWS DeepLens Project.",
        "privilege": "UpdateProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:deeplens:${Region}:${Account}:device/${DeviceName}",
        "condition_keys": [],
        "resource": "device"
      },
      {
        "arn": "arn:${Partition}:deeplens:${Region}:${Account}:project/${ProjectName}",
        "condition_keys": [],
        "resource": "project"
      },
      {
        "arn": "arn:${Partition}:deeplens:${Region}:${Account}:model/${ModelName}",
        "condition_keys": [],
        "resource": "model"
      }
    ],
    "service_name": "AWS DeepLens"
  },
  {
    "conditions": [],
    "prefix": "deepracer",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to clone existing DeepRacer models",
        "privilege": "CloneReinforcementLearningModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "reinforcement_learning_model*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "track*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create resources needed by DeepRacer on behalf of the user",
        "privilege": "CreateAccountResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to submit DeepRacer models to be evaluated for leaderboards",
        "privilege": "CreateLeaderboardSubmission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "leaderboard*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "reinforcement_learning_model*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create reinforcement learning models for DeepRacer",
        "privilege": "CreateReinforcementLearningModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "track*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete resources created by DeepRacer on behalf of the user",
        "privilege": "DeleteAccountResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete DeepRacer models",
        "privilege": "DeleteModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "reinforcement_learning_model*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the resources created by DeepRacer on behalf of the user",
        "privilege": "GetAccountResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the user's alias for submitting DeepRacer models to leaderboards",
        "privilege": "GetAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about existing DeepRacer models' evaluation jobs",
        "privilege": "GetEvaluation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "evaluation_job*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about how the latest submitted DeepRacer model for a user performed on a leaderboard",
        "privilege": "GetLatestUserSubmission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "leaderboard*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about leaderboards",
        "privilege": "GetLeaderboard",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "leaderboard*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about existing DeepRacer models",
        "privilege": "GetModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "reinforcement_learning_model*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about the performance of a user's DeepRacer model that got placed on a leaderboard",
        "privilege": "GetRankedUserSubmission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "leaderboard*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about DeepRacer tracks",
        "privilege": "GetTrack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "track*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about existing DeepRacer models' training job",
        "privilege": "GetTrainingJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "training_job*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list DeepRacer models' evaluation jobs",
        "privilege": "ListEvaluations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "reinforcement_learning_model*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all the submissions of DeepRacer models of a user on a leaderboard",
        "privilege": "ListLeaderboardSubmissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "leaderboard*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all the available leaderboards",
        "privilege": "ListLeaderboards",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all existing DeepRacer models",
        "privilege": "ListModels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all DeepRacer tracks",
        "privilege": "ListTracks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list DeepRacer models' training jobs",
        "privilege": "ListTrainingJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "reinforcement_learning_model*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to set the user's alias for submitting DeepRacer models to leaderboards",
        "privilege": "SetAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to evaluate DeepRacer models in a simulated environment",
        "privilege": "StartEvaluation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "reinforcement_learning_model*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "track*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop DeepRacer model evaluations",
        "privilege": "StopEvaluation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "evaluation_job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop training DeepRacer models",
        "privilege": "StopTrainingReinforcementLearningModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "reinforcement_learning_model*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to test reward functions for correctness",
        "privilege": "TestRewardFunction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:deepracer:${Region}:${Account}:model/reinforcement_learning/${ResourceId}",
        "condition_keys": [],
        "resource": "reinforcement_learning_model"
      },
      {
        "arn": "arn:${Partition}:deepracer:${Region}:${Account}:training_job/${ResourceId}",
        "condition_keys": [],
        "resource": "training_job"
      },
      {
        "arn": "arn:${Partition}:deepracer:${Region}:${Account}:evaluation_job/${ResourceId}",
        "condition_keys": [],
        "resource": "evaluation_job"
      },
      {
        "arn": "arn:${Partition}:deepracer:${Region}:${Account}:leaderboard_evaluation_job/${ResourceId}",
        "condition_keys": [],
        "resource": "leaderboard_evaluation_job"
      },
      {
        "arn": "arn:${Partition}:deepracer:${Region}::track/${ResourceId}",
        "condition_keys": [],
        "resource": "track"
      },
      {
        "arn": "arn:${Partition}:deepracer:${Region}::leaderboard/${ResourceId}",
        "condition_keys": [],
        "resource": "leaderboard"
      }
    ],
    "service_name": "AWS DeepRacer"
  },
  {
    "conditions": [],
    "prefix": "detective",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to accept an invitation to become a member of a behavior graph",
        "privilege": "AcceptInvitation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Graph*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a behavior graph and begin to aggregate security information",
        "privilege": "CreateGraph",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to request the membership of one or more accounts in a behavior graph managed by this account",
        "privilege": "CreateMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Graph*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a behavior graph and stop aggregating security information",
        "privilege": "DeleteGraph",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Graph*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove member accounts from a behavior graph managed by this account",
        "privilege": "DeleteMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Graph*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove the association of this account with a behavior graph",
        "privilege": "DisassociateMembership",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Graph*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a behavior graph's eligibility for a free trial period",
        "privilege": "GetFreeTrialEligibility",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Graph*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the data ingestion state of a behavior graph",
        "privilege": "GetGraphIngestState",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Graph*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve details on specified members of a behavior graph",
        "privilege": "GetMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Graph*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about Amazon Detective's pricing",
        "privilege": "GetPricingInformation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list usage information of a behavior graph",
        "privilege": "GetUsageInformation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Graph*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list behavior graphs managed by this account",
        "privilege": "ListGraphs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve details on the behavior graphs to which this account has been invited to join",
        "privilege": "ListInvitations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve details on all members of a behavior graph",
        "privilege": "ListMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Graph*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reject an invitation to become a member of a behavior graph",
        "privilege": "RejectInvitation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Graph*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to search the data stored in a behavior graph",
        "privilege": "SearchGraph",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Graph*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start data ingest for a member account that has a status of ACCEPTED_BUT_DISABLED.",
        "privilege": "StartMonitoringMember",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Graph*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:detective:${Region}:${Account}:graph:${ResourceId}",
        "condition_keys": [],
        "resource": "Graph"
      }
    ],
    "service_name": "Amazon Detective"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value assoicated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of mandatory tags in the request",
        "type": "String"
      }
    ],
    "prefix": "devicefarm",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to create a device pool within a project",
        "privilege": "CreateDevicePool",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a device instance profile",
        "privilege": "CreateInstanceProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a network profile within a project",
        "privilege": "CreateNetworkProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to create a project for mobile testing",
        "privilege": "CreateProject",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start a remote access session to a device instance",
        "privilege": "CreateRemoteAccessSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deviceinstance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "upload"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a project for desktop testing",
        "privilege": "CreateTestGridProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to generate a new pre-signed url used to access our test grid service",
        "privilege": "CreateTestGridUrl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "testgrid-project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to upload a new file or app within a project",
        "privilege": "CreateUpload",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an Amazon Virtual Private Cloud (VPC) endpoint configuration",
        "privilege": "CreateVPCEConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a user-generated device pool",
        "privilege": "DeleteDevicePool",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "devicepool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a user-generated instance profile",
        "privilege": "DeleteInstanceProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instanceprofile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a user-generated network profile",
        "privilege": "DeleteNetworkProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "networkprofile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a mobile testing project",
        "privilege": "DeleteProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a completed remote access session and its results",
        "privilege": "DeleteRemoteAccessSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "session*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a run",
        "privilege": "DeleteRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "run*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a desktop testing project",
        "privilege": "DeleteTestGridProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "testgrid-project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a user-uploaded file",
        "privilege": "DeleteUpload",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "upload*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an Amazon Virtual Private Cloud (VPC) endpoint configuration",
        "privilege": "DeleteVPCEConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vpceconfiguration*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the number of unmetered iOS and/or unmetered Android devices purchased by the account",
        "privilege": "GetAccountSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the information of a unique device type",
        "privilege": "GetDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retireve the information of a device instance",
        "privilege": "GetDeviceInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deviceinstance*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retireve the information of a device pool",
        "privilege": "GetDevicePool",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "devicepool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about the compatibility of a test and/or app with a device pool",
        "privilege": "GetDevicePoolCompatibility",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "devicepool*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "upload"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retireve the information of an instance profile",
        "privilege": "GetInstanceProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instanceprofile*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retireve the information of a job",
        "privilege": "GetJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retireve the information of a network profile",
        "privilege": "GetNetworkProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "networkprofile*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the current status and future status of all offerings purchased by an AWS account",
        "privilege": "GetOfferingStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a mobile testing project",
        "privilege": "GetProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retireve the link to a currently running remote access session",
        "privilege": "GetRemoteAccessSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "session*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retireve the information of a run",
        "privilege": "GetRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "run*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retireve the information of a testing suite",
        "privilege": "GetSuite",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "suite*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retireve the information of a test case",
        "privilege": "GetTest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "test*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a desktop testing project",
        "privilege": "GetTestGridProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "testgrid-project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retireve the information of a test grid session",
        "privilege": "GetTestGridSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "testgrid-project"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "testgrid-session"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retireve the information of an uploaded file",
        "privilege": "GetUpload",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "upload*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retireve the information of an Amazon Virtual Private Cloud (VPC) endpoint configuration",
        "privilege": "GetVPCEConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vpceconfiguration*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to install an application to a device in a remote access session",
        "privilege": "InstallToRemoteAccessSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "session*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "upload*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the artifacts in a project",
        "privilege": "ListArtifacts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "run"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "suite"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "test"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the information of device instances",
        "privilege": "ListDeviceInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the information of device pools",
        "privilege": "ListDevicePools",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the information of unique device types",
        "privilege": "ListDevices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the information of device instance profiles",
        "privilege": "ListInstanceProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the information of jobs within a run",
        "privilege": "ListJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "run*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the information of network profiles within a project",
        "privilege": "ListNetworkProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the offering promotions",
        "privilege": "ListOfferingPromotions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all of the historical purchases, renewals, and system renewal transactions for an AWS account",
        "privilege": "ListOfferingTransactions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the products or offerings that the user can manage through the API",
        "privilege": "ListOfferings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the information of mobile testing projects for an AWS account",
        "privilege": "ListProjects",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the information of currently running remote access sessions",
        "privilege": "ListRemoteAccessSessions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the information of runs within a project",
        "privilege": "ListRuns",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the information of samples within a project",
        "privilege": "ListSamples",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the information of testing suites within a job",
        "privilege": "ListSuites",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the tags of a resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deviceinstance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "devicepool"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instanceprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "networkprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "run"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "session"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "testgrid-project"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "testgrid-session"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vpceconfiguration"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the information of desktop testing projects for an AWS account",
        "privilege": "ListTestGridProjects",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the session actions performed during a test grid session",
        "privilege": "ListTestGridSessionActions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "testgrid-session*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the artifacts generated by a test grid session",
        "privilege": "ListTestGridSessionArtifacts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "testgrid-session*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the sessions within a test grid project",
        "privilege": "ListTestGridSessions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "testgrid-project*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the information of tests within a testing suite",
        "privilege": "ListTests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "suite*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the information of unique problems within a run",
        "privilege": "ListUniqueProblems",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "run*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the information of uploads within a project",
        "privilege": "ListUploads",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the information of Amazon Virtual Private Cloud (VPC) endpoint configurations",
        "privilege": "ListVPCEConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to purchase offerings for an AWS account",
        "privilege": "PurchaseOffering",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to set the quantity of devices to renew for an offering",
        "privilege": "RenewOffering",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to schedule a run",
        "privilege": "ScheduleRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "devicepool"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "upload"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to terminate a running job",
        "privilege": "StopJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to terminate a running remote access session",
        "privilege": "StopRemoteAccessSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "session*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to terminate a running test run",
        "privilege": "StopRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "run*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add tags to a resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deviceinstance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "devicepool"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instanceprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "networkprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "run"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "session"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "testgrid-project"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "testgrid-session"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vpceconfiguration"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove tags from a resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deviceinstance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "devicepool"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instanceprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "networkprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "run"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "session"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "testgrid-project"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "testgrid-session"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vpceconfiguration"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an existing device instance",
        "privilege": "UpdateDeviceInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deviceinstance*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instanceprofile"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an existing device pool",
        "privilege": "UpdateDevicePool",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "devicepool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an existing instance profile",
        "privilege": "UpdateInstanceProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instanceprofile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an existing network profile",
        "privilege": "UpdateNetworkProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "networkprofile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an existing mobile testing project",
        "privilege": "UpdateProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an existing desktop testing project",
        "privilege": "UpdateTestGridProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "testgrid-project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an existing upload",
        "privilege": "UpdateUpload",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "upload*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an existing Amazon Virtual Private Cloud (VPC) endpoint configuration",
        "privilege": "UpdateVPCEConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vpceconfiguration*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:project:${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "project"
      },
      {
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:run:${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "run"
      },
      {
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:job:${ResourceId}",
        "condition_keys": [],
        "resource": "job"
      },
      {
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:suite:${ResourceId}",
        "condition_keys": [],
        "resource": "suite"
      },
      {
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:test:${ResourceId}",
        "condition_keys": [],
        "resource": "test"
      },
      {
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:upload:${ResourceId}",
        "condition_keys": [],
        "resource": "upload"
      },
      {
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:artifact:${ResourceId}",
        "condition_keys": [],
        "resource": "artifact"
      },
      {
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:sample:${ResourceId}",
        "condition_keys": [],
        "resource": "sample"
      },
      {
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:networkprofile:${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "networkprofile"
      },
      {
        "arn": "arn:${Partition}:devicefarm:${Region}::deviceinstance:${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "deviceinstance"
      },
      {
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:session:${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "session"
      },
      {
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:devicepool:${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "devicepool"
      },
      {
        "arn": "arn:${Partition}:devicefarm:${Region}::device:${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "device"
      },
      {
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:instanceprofile:${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "instanceprofile"
      },
      {
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:vpceconfiguration:${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "vpceconfiguration"
      },
      {
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:testgrid-project:${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "testgrid-project"
      },
      {
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:testgrid-session:${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "testgrid-session"
      }
    ],
    "service_name": "AWS Device Farm"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "directconnect",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Accepts a proposal request to attach a virtual private gateway to a Direct Connect gateway.",
        "privilege": "AcceptDirectConnectGatewayAssociationProposal",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dx-gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a hosted connection on an interconnect.",
        "privilege": "AllocateConnectionOnInterconnect",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new hosted connection between a AWS Direct Connect partner's network and a specific AWS Direct Connect location.",
        "privilege": "AllocateHostedConnection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Provisions a private virtual interface to be owned by a different customer.",
        "privilege": "AllocatePrivateVirtualInterface",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Provisions a public virtual interface to be owned by a different customer.",
        "privilege": "AllocatePublicVirtualInterface",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Provisions a transit virtual interface to be owned by a different customer.",
        "privilege": "AllocateTransitVirtualInterface",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates a connection with a LAG.",
        "privilege": "AssociateConnectionWithLag",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates a hosted connection and its virtual interfaces with a link aggregation group (LAG) or interconnect.",
        "privilege": "AssociateHostedConnection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates a virtual interface with a specified link aggregation group (LAG) or connection.",
        "privilege": "AssociateVirtualInterface",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxvif*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Confirm the creation of a hosted connection on an interconnect.",
        "privilege": "ConfirmConnection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Accept ownership of a private virtual interface created by another customer.",
        "privilege": "ConfirmPrivateVirtualInterface",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxvif*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Accept ownership of a public virtual interface created by another customer",
        "privilege": "ConfirmPublicVirtualInterface",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxvif*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Accept ownership of a transit virtual interface created by another customer",
        "privilege": "ConfirmTransitVirtualInterface",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxvif*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a BGP peer on the specified virtual interface.",
        "privilege": "CreateBGPPeer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxvif*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new connection between the customer network and a specific AWS Direct Connect location.",
        "privilege": "CreateConnection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a Direct Connect gateway, which is an intermediate object that enables you to connect a set of virtual interfaces and virtual private gateways.",
        "privilege": "CreateDirectConnectGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an association between a Direct Connect gateway and a virtual private gateway.",
        "privilege": "CreateDirectConnectGatewayAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dx-gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a proposal to associate the specified virtual private gateway with the specified Direct Connect gateway.",
        "privilege": "CreateDirectConnectGatewayAssociationProposal",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dx-gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new interconnect between a AWS Direct Connect partner's network and a specific AWS Direct Connect location.",
        "privilege": "CreateInterconnect",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a link aggregation group (LAG) with the specified number of bundled physical connections between the customer network and a specific AWS Direct Connect location.",
        "privilege": "CreateLag",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new private virtual interface.",
        "privilege": "CreatePrivateVirtualInterface",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new public virtual interface.",
        "privilege": "CreatePublicVirtualInterface",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new transit virtual interface.",
        "privilege": "CreateTransitVirtualInterface",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified BGP peer on the specified virtual interface with the specified customer address and ASN.",
        "privilege": "DeleteBGPPeer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxvif*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the connection.",
        "privilege": "DeleteConnection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified Direct Connect gateway.",
        "privilege": "DeleteDirectConnectGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dx-gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the association between the specified Direct Connect gateway and virtual private gateway.",
        "privilege": "DeleteDirectConnectGatewayAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dx-gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the association proposal request between the specified Direct Connect gateway and virtual private gateway.",
        "privilege": "DeleteDirectConnectGatewayAssociationProposal",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified interconnect.",
        "privilege": "DeleteInterconnect",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified link aggregation group (LAG).",
        "privilege": "DeleteLag",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a virtual interface.",
        "privilege": "DeleteVirtualInterface",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxvif*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the LOA-CFA for a Connection.",
        "privilege": "DescribeConnectionLoa",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Displays all connections in this region.",
        "privilege": "DescribeConnections",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return a list of connections that have been provisioned on the given interconnect.",
        "privilege": "DescribeConnectionsOnInterconnect",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes one or more association proposals for connection between a virtual private gateway and a Direct Connect gateway.",
        "privilege": "DescribeDirectConnectGatewayAssociationProposals",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dx-gateway"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the associations between your Direct Connect gateways and virtual private gateways.",
        "privilege": "DescribeDirectConnectGatewayAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dx-gateway"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the attachments between your Direct Connect gateways and virtual interfaces.",
        "privilege": "DescribeDirectConnectGatewayAttachments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dx-gateway"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists all your Direct Connect gateways or only the specified Direct Connect gateway.",
        "privilege": "DescribeDirectConnectGateways",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dx-gateway"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the hosted connections that have been provisioned on the specified interconnect or link aggregation group (LAG).",
        "privilege": "DescribeHostedConnections",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the LOA-CFA for an Interconnect.",
        "privilege": "DescribeInterconnectLoa",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of interconnects owned by the AWS account.",
        "privilege": "DescribeInterconnects",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes all your link aggregation groups (LAG) or the specified LAG.",
        "privilege": "DescribeLags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the LOA-CFA for a connection, interconnect, or link aggregation group (LAG).",
        "privilege": "DescribeLoa",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the list of AWS Direct Connect locations in the current AWS region.",
        "privilege": "DescribeLocations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the tags associated with the specified AWS Direct Connect resources.",
        "privilege": "DescribeTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxvif"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of virtual private gateways owned by the AWS account.",
        "privilege": "DescribeVirtualGateways",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Displays all virtual interfaces for an AWS account.",
        "privilege": "DescribeVirtualInterfaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxvif"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates a connection from a link aggregation group (LAG).",
        "privilege": "DisassociateConnectionFromLag",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds the specified tags to the specified AWS Direct Connect resource. Each resource can have a maximum of 50 tags.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxvif"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes one or more tags from the specified AWS Direct Connect resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxcon"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxvif"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified attributes of the Direct Connect gateway association.",
        "privilege": "UpdateDirectConnectGatewayAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the attributes of the specified link aggregation group (LAG).",
        "privilege": "UpdateLag",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxlag*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified attributes of the specified virtual private interface.",
        "privilege": "UpdateVirtualInterfaceAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dxvif*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:directconnect:${Region}:${Account}:dxcon/${ConnectionId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "dxcon"
      },
      {
        "arn": "arn:${Partition}:directconnect:${Region}:${Account}:dxlag/${LagId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "dxlag"
      },
      {
        "arn": "arn:${Partition}:directconnect:${Region}:${Account}:dxvif/${VirtualInterfaceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "dxvif"
      },
      {
        "arn": "arn:${Partition}:directconnect::${Account}:dx-gateway/${DirectConnectGatewayId}",
        "condition_keys": [],
        "resource": "dx-gateway"
      }
    ],
    "service_name": "AWS Direct Connect"
  },
  {
    "conditions": [],
    "prefix": "discovery",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Associates one or more configuration items with an application.",
        "privilege": "AssociateConfigurationItemsToApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes one or more Migration Hub import tasks, each identified by their import ID. Each import task has a number of records, which can identify servers or applications.",
        "privilege": "BatchDeleteImportData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an application with the given name and description.",
        "privilege": "CreateApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates one or more tags for configuration items. Tags are metadata that help you categorize IT assets. This API accepts a list of multiple configuration items.",
        "privilege": "CreateTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a list of applications and their associations with configuration items.",
        "privilege": "DeleteApplications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Deletes the association between configuration items and one or more tags. This API accepts a list of multiple configuration items.",
        "privilege": "DeleteTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists agents or the Connector by ID or lists all agents/Connectors associated with your user account if you did not specify an ID.",
        "privilege": "DescribeAgents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves attributes for a list of configuration item IDs. All of the supplied IDs must be for the same asset type (server, application, process, or connection). Output fields are specific to the asset type selected. For example, the output for a server configuration item includes a list of attributes about the server, such as host name, operating system, and number of network cards.",
        "privilege": "DescribeConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists exports as specified by ID. All continuous exports associated with your user account can be listed if you call DescribeContinuousExports as is without passing any parameters.",
        "privilege": "DescribeContinuousExports",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the status of a given export process. You can retrieve status from a maximum of 100 processes.",
        "privilege": "DescribeExportConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve status of one or more export tasks. You can retrieve the status of up to 100 export tasks.",
        "privilege": "DescribeExportTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of import tasks for your account, including status information, times, IDs, the Amazon S3 Object URL for the import file, and more.",
        "privilege": "DescribeImportTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a list of configuration items that are tagged with a specific tag. Or retrieves a list of all tags assigned to a specific configuration item.",
        "privilege": "DescribeTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates one or more configuration items from an application.",
        "privilege": "DisassociateConfigurationItemsFromApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Exports all discovered configuration data to an Amazon S3 bucket or an application that enables you to view and evaluate the data. Data includes tags and tag associations, processes, connections, servers, and system performance.",
        "privilege": "ExportConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a short summary of discovered assets.",
        "privilege": "GetDiscoverySummary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves a list of configuration items according to criteria you specify in a filter. The filter criteria identify relationship requirements.",
        "privilege": "ListConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves a list of servers which are one network hop away from a specified server.",
        "privilege": "ListServerNeighbors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Start the continuous flow of agent's discovered data into Amazon Athena.",
        "privilege": "StartContinuousExport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Instructs the specified agents or Connectors to start collecting data.",
        "privilege": "StartDataCollectionByAgentIds",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Export the configuration data about discovered configuration items and relationships to an S3 bucket in a specified format.",
        "privilege": "StartExportTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts an import task. The Migration Hub import feature allows you to import details of your on-premises environment directly into AWS without having to use the Application Discovery Service (ADS) tools such as the Discovery Connector or Discovery Agent. This gives you the option to perform migration assessment and planning directly from your imported data including the ability to group your devices as applications and track their migration status.",
        "privilege": "StartImportTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stop the continuous flow of agent's discovered data into Amazon Athena.",
        "privilege": "StopContinuousExport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Instructs the specified agents or Connectors to stop collecting data.",
        "privilege": "StopDataCollectionByAgentIds",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates metadata about an application.",
        "privilege": "UpdateApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Application Discovery"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "dlm",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Create a data lifecycle policy to manage the scheduled creation and retention of Amazon EBS snapshots. You may have up to 100 policies.",
        "privilege": "CreateLifecyclePolicy",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an existing data lifecycle policy. In addition, this action halts the creation and deletion of snapshots that the policy specified. Existing snapshots are not affected.",
        "privilege": "DeleteLifecyclePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of summary descriptions of data lifecycle policies.",
        "privilege": "GetLifecyclePolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a complete description of a single data lifecycle policy.",
        "privilege": "GetLifecyclePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list the tags associated with a resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add or update tags of a resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove associated with a resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing data lifecycle policy.",
        "privilege": "UpdateLifecyclePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:dlm:${Region}:${Account}:policy/${ResourceName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "policy"
      }
    ],
    "service_name": "Amazon Data Lifecycle Manager"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      },
      {
        "condition": "dms:cert-tag/${TagKey}",
        "description": "Filters actions based on the presence of tag keys in the request for Certificate",
        "type": "String"
      },
      {
        "condition": "dms:endpoint-tag/${TagKey}",
        "description": "Filters actions based on the presence of tag keys in the request for Endpoint",
        "type": "String"
      },
      {
        "condition": "dms:es-tag/${TagKey}",
        "description": "Filters actions based on the presence of tag keys in the request for EventSubscription",
        "type": "String"
      },
      {
        "condition": "dms:rep-tag/${TagKey}",
        "description": "Filters actions based on the presence of tag keys in the request for ReplicationInstance",
        "type": "String"
      },
      {
        "condition": "dms:req-tag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "dms:subgrp-tag/${TagKey}",
        "description": "Filters actions based on the presence of tag keys in the request for ReplicationSubnetGroup",
        "type": "String"
      },
      {
        "condition": "dms:task-tag/${TagKey}",
        "description": "Filters actions based on the presence of tag keys in the request for ReplicationTask",
        "type": "String"
      }
    ],
    "prefix": "dms",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "Adds metadata tags to a DMS resource, including replication instance, endpoint, security group, and migration task",
        "privilege": "AddTagsToResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Certificate"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Endpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "EventSubscription"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationInstance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationSubnetGroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationTask"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "dms:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Applies a pending maintenance action to a resource (for example, to a replication instance).",
        "privilege": "ApplyPendingMaintenanceAction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationInstance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an endpoint using the provided settings",
        "privilege": "CreateEndpoint",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "dms:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an AWS DMS event notification subscription.",
        "privilege": "CreateEventSubscription",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "dms:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates the replication instance using the specified parameters",
        "privilege": "CreateReplicationInstance",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "dms:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a replication subnet group given a list of the subnet IDs in a VPC",
        "privilege": "CreateReplicationSubnetGroup",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "dms:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a replication task using the specified parameters",
        "privilege": "CreateReplicationTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Endpoint*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationInstance*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "dms:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified certificate",
        "privilege": "DeleteCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Certificate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified endpoint",
        "privilege": "DeleteEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an AWS DMS event subscription.",
        "privilege": "DeleteEventSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "EventSubscription*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified replication instance",
        "privilege": "DeleteReplicationInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationInstance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a subnet group",
        "privilege": "DeleteReplicationSubnetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationSubnetGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified replication task",
        "privilege": "DeleteReplicationTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationTask*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists all of the AWS DMS attributes for a customer account",
        "privilege": "DescribeAccountAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Provides a description of the certificate.",
        "privilege": "DescribeCertificates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the status of the connections that have been made between the replication instance and an endpoint",
        "privilege": "DescribeConnections",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the type of endpoints available",
        "privilege": "DescribeEndpointTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the endpoints for your account in the current region",
        "privilege": "DescribeEndpoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists categories for all event source types, or, if specified, for a specified source type.",
        "privilege": "DescribeEventCategories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists all the event subscriptions for a customer account.",
        "privilege": "DescribeEventSubscriptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists events for a given source identifier and source type.",
        "privilege": "DescribeEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the replication instance types that can be created in the specified region",
        "privilege": "DescribeOrderableReplicationInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the status of the RefreshSchemas operation",
        "privilege": "DescribeRefreshSchemasStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Endpoint*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the task logs for the specified task.",
        "privilege": "DescribeReplicationInstanceTaskLogs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationInstance*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about replication instances for your account in the current region",
        "privilege": "DescribeReplicationInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the replication subnet groups",
        "privilege": "DescribeReplicationSubnetGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the task assessment results from Amazon S3. This action always returns the latest results.",
        "privilege": "DescribeReplicationTaskAssessmentResults",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationTask"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about replication tasks for your account in the current region",
        "privilege": "DescribeReplicationTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the schema for the specified endpoint",
        "privilege": "DescribeSchemas",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Endpoint*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns table statistics on the database migration task, including table name, rows inserted, rows updated, and rows deleted",
        "privilege": "DescribeTableStatistics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationTask*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Uploads the specified certificate.",
        "privilege": "ImportCertificate",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all tags for an AWS DMS resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Certificate"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Endpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "EventSubscription"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationInstance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationSubnetGroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationTask"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the specified endpoint",
        "privilege": "ModifyEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Endpoint*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Certificate"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies an existing AWS DMS event notification subscription.",
        "privilege": "ModifyEventSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the replication instance to apply new settings",
        "privilege": "ModifyReplicationInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationInstance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the settings for the specified replication subnet group",
        "privilege": "ModifyReplicationSubnetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the specified replication task.",
        "privilege": "ModifyReplicationTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationTask*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Reboots a replication instance. Rebooting results in a momentary outage, until the replication instance becomes available again.",
        "privilege": "RebootReplicationInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationInstance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Populates the schema for the specified endpoint",
        "privilege": "RefreshSchemas",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Endpoint*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationInstance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Reloads the target database table with the source data.",
        "privilege": "ReloadTables",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationTask*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes metadata tags from a DMS resource",
        "privilege": "RemoveTagsFromResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Certificate"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Endpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "EventSubscription"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationInstance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationSubnetGroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationTask"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts the replication task",
        "privilege": "StartReplicationTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationTask*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts the replication task assessment for unsupported data types in the source database.",
        "privilege": "StartReplicationTaskAssessment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationTask*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops the replication task",
        "privilege": "StopReplicationTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationTask*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Tests the connection between the replication instance and the endpoint",
        "privilege": "TestConnection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Endpoint*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ReplicationInstance*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:dms:${Region}:${Account}:rep:*",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "dms:rep-tag/${TagKey}"
        ],
        "resource": "ReplicationInstance"
      },
      {
        "arn": "arn:${Partition}:dms:${Region}:${Account}:task:*",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "dms:task-tag/${TagKey}"
        ],
        "resource": "ReplicationTask"
      },
      {
        "arn": "arn:${Partition}:dms:${Region}:${Account}:endpoint:*",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "dms:endpoint-tag/${TagKey}"
        ],
        "resource": "Endpoint"
      },
      {
        "arn": "arn:${Partition}:dms:${Region}:${Account}:cert:*",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "dms:cert-tag/${TagKey}"
        ],
        "resource": "Certificate"
      },
      {
        "arn": "arn:${Partition}:dms:${Region}:${Account}:es:*",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "dms:es-tag/${TagKey}"
        ],
        "resource": "EventSubscription"
      },
      {
        "arn": "arn:${Partition}:dms:${Region}:${Account}:subgrp:*",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "dms:subgrp-tag/${TagKey}"
        ],
        "resource": "ReplicationSubnetGroup"
      }
    ],
    "service_name": "AWS Database Migration Service"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "",
        "type": "String"
      }
    ],
    "prefix": "ds",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Accepts a directory sharing request that was sent from the directory owner account.",
        "privilege": "AcceptSharedDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds a CIDR address block to correctly route traffic to and from your Microsoft AD on Amazon Web Services",
        "privilege": "AddIpRoutes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "ec2:AuthorizeSecurityGroupEgress",
              "ec2:AuthorizeSecurityGroupIngress",
              "ec2:DescribeSecurityGroups"
            ],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds or overwrites one or more tags for the specified Amazon Directory Services directory.",
        "privilege": "AddTagsToResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "ec2:CreateTags"
            ],
            "resource_type": "directory*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Authorizes an application for your AWS Directory.",
        "privilege": "AuthorizeApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancels an in-progress schema extension to a Microsoft AD directory.",
        "privilege": "CancelSchemaExtension",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Verifies that the alias is available for use.",
        "privilege": "CheckAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates an AD Connector to connect to an on-premises directory.",
        "privilege": "ConnectDirectory",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [
              "ec2:AuthorizeSecurityGroupEgress",
              "ec2:AuthorizeSecurityGroupIngress",
              "ec2:CreateNetworkInterface",
              "ec2:CreateSecurityGroup",
              "ec2:CreateTags",
              "ec2:DescribeNetworkInterfaces",
              "ec2:DescribeSubnets",
              "ec2:DescribeVpcs"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an alias for a directory and assigns the alias to the directory.",
        "privilege": "CreateAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a computer account in the specified directory, and joins the computer to the directory.",
        "privilege": "CreateComputer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a conditional forwarder associated with your AWS directory.",
        "privilege": "CreateConditionalForwarder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a Simple AD directory.",
        "privilege": "CreateDirectory",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [
              "ec2:AuthorizeSecurityGroupEgress",
              "ec2:AuthorizeSecurityGroupIngress",
              "ec2:CreateNetworkInterface",
              "ec2:CreateSecurityGroup",
              "ec2:CreateTags",
              "ec2:DescribeNetworkInterfaces",
              "ec2:DescribeSubnets",
              "ec2:DescribeVpcs"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a IdentityPool Directory in the AWS cloud.",
        "privilege": "CreateIdentityPoolDirectory",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a subscription to forward real time Directory Service domain controller security logs to the specified CloudWatch log group in your AWS account.",
        "privilege": "CreateLogSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a Microsoft AD in the AWS cloud.",
        "privilege": "CreateMicrosoftAD",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [
              "ec2:AuthorizeSecurityGroupEgress",
              "ec2:AuthorizeSecurityGroupIngress",
              "ec2:CreateNetworkInterface",
              "ec2:CreateSecurityGroup",
              "ec2:CreateTags",
              "ec2:DescribeNetworkInterfaces",
              "ec2:DescribeSubnets",
              "ec2:DescribeVpcs"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a snapshot of a Simple AD or Microsoft AD directory in the AWS cloud.",
        "privilege": "CreateSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Initiates the creation of the AWS side of a trust relationship between a Microsoft AD in the AWS cloud and an external domain.",
        "privilege": "CreateTrust",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a conditional forwarder that has been set up for your AWS directory.",
        "privilege": "DeleteConditionalForwarder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an AWS Directory Service directory.",
        "privilege": "DeleteDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "ec2:DeleteNetworkInterface",
              "ec2:DeleteSecurityGroup",
              "ec2:DescribeNetworkInterfaces",
              "ec2:RevokeSecurityGroupEgress",
              "ec2:RevokeSecurityGroupIngress"
            ],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified log subscription.",
        "privilege": "DeleteLogSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a directory snapshot.",
        "privilege": "DeleteSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing trust relationship between your Microsoft AD in the AWS cloud and an external domain.",
        "privilege": "DeleteTrust",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes from the system the certificate that was registered for a secured LDAP connection.",
        "privilege": "DeregisterCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes the specified directory as a publisher to the specified SNS topic.",
        "privilege": "DeregisterEventTopic",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Displays information about the certificate registered for a secured LDAP connection.",
        "privilege": "DescribeCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Obtains information about the conditional forwarders for this account.",
        "privilege": "DescribeConditionalForwarders",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Obtains information about the directories that belong to this account.",
        "privilege": "DescribeDirectories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Provides information about any domain controllers in your directory.",
        "privilege": "DescribeDomainControllers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Obtains information about which SNS topics receive status messages from the specified directory.",
        "privilege": "DescribeEventTopics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the status of LDAP security for the specified directory.",
        "privilege": "DescribeLDAPSSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the shared directories in your account.",
        "privilege": "DescribeSharedDirectories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Obtains information about the directory snapshots that belong to this account.",
        "privilege": "DescribeSnapshots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Obtains information about the trust relationships for this account.",
        "privilege": "DescribeTrusts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deactivates LDAP secure calls for the specified directory.",
        "privilege": "DisableLDAPS",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector directory.",
        "privilege": "DisableRadius",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disables single-sign on for a directory.",
        "privilege": "DisableSso",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Activates the switch for the specific directory to always use LDAP secure calls.",
        "privilege": "EnableLDAPS",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector directory.",
        "privilege": "EnableRadius",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables single-sign on for a directory.",
        "privilege": "EnableSso",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "",
        "privilege": "GetAuthorizedApplicationDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Obtains directory limit information for the current region.",
        "privilege": "GetDirectoryLimits",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Obtains the manual snapshot limits for a directory.",
        "privilege": "GetSnapshotLimits",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Obtains the aws applications authorized for a directory.",
        "privilege": "ListAuthorizedApplications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "For the specified directory, lists all the certificates registered for a secured LDAP connection.",
        "privilege": "ListCertificates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the address blocks that you have added to a directory.",
        "privilege": "ListIpRoutes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the active log subscriptions for the AWS account.",
        "privilege": "ListLogSubscriptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all schema extensions applied to a Microsoft AD Directory.",
        "privilege": "ListSchemaExtensions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists all tags on an Amazon Directory Services directory.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers a certificate for secured LDAP connection.",
        "privilege": "RegisterCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates a directory with an SNS topic.",
        "privilege": "RegisterEventTopic",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "sns:GetTopicAttributes"
            ],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Rejects a directory sharing request that was sent from the directory owner account.",
        "privilege": "RejectSharedDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes IP address blocks from a directory.",
        "privilege": "RemoveIpRoutes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes tags from an Amazon Directory Services directory.",
        "privilege": "RemoveTagsFromResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "ec2:DeleteTags"
            ],
            "resource_type": "directory*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Resets the password for any user in your AWS Managed Microsoft AD or Simple AD directory.",
        "privilege": "ResetUserPassword",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Restores a directory using an existing directory snapshot.",
        "privilege": "RestoreFromSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Shares a specified directory in your AWS account (directory owner) with another AWS account (directory consumer). With this operation you can use your directory from any AWS account and from any Amazon VPC within an AWS Region.",
        "privilege": "ShareDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Applies a schema extension to a Microsoft AD directory.",
        "privilege": "StartSchemaExtension",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Unauthorizes an application from your AWS Directory.",
        "privilege": "UnauthorizeApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops the directory sharing between the directory owner and consumer accounts.",
        "privilege": "UnshareDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a conditional forwarder that has been set up for your AWS directory.",
        "privilege": "UpdateConditionalForwarder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds or removes domain controllers to or from the directory. Based on the difference between current value and new value (provided through this API call), domain controllers will be added or removed. It may take up to 45 minutes for any new domain controllers to become fully active once the requested number of domain controllers is updated. During this time, you cannot make another update request.",
        "privilege": "UpdateNumberOfDomainControllers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the Remote Authentication Dial In User Service (RADIUS) server information for an AD Connector directory.",
        "privilege": "UpdateRadius",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the trust that has been set up between your AWS Managed Microsoft AD directory and an on-premises Active Directory.",
        "privilege": "UpdateTrust",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Verifies a trust relationship between your Microsoft AD in the AWS cloud and an external domain.",
        "privilege": "VerifyTrust",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directory*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:ds:${Region}:${Account}:directory/${DirectoryId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "directory"
      }
    ],
    "service_name": "AWS Directory Service"
  },
  {
    "conditions": [
      {
        "condition": "dynamodb:Attributes",
        "description": "Filter based on the attribute (field or column) names of the table.",
        "type": "String"
      },
      {
        "condition": "dynamodb:EnclosingOperation",
        "description": "Used to block Transactions APIs calls and allow the non-Transaction APIs calls and vice-versa.",
        "type": "String"
      },
      {
        "condition": "dynamodb:LeadingKeys",
        "description": "Filters based on the partition key of the table.",
        "type": "String"
      },
      {
        "condition": "dynamodb:ReturnConsumedCapacity",
        "description": "Filter based on the ReturnConsumedCapacity parameter of a request. Contains either \"TOTAL\" or \"NONE\".",
        "type": "String"
      },
      {
        "condition": "dynamodb:ReturnValues",
        "description": "Filter based on the ReturnValues parameter of request. Contains one of the following: \"ALL_OLD\", \"UPDATED_OLD\",\"ALL_NEW\",\"UPDATED_NEW\", or \"NONE\".",
        "type": "String"
      },
      {
        "condition": "dynamodb:Select",
        "description": "Filter based on the Select parameter of a Query or Scan request.",
        "type": "String"
      }
    ],
    "prefix": "dynamodb",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Returns the attributes of one or more items from one or more tables",
        "privilege": "BatchGetItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          },
          {
            "condition_keys": [
              "dynamodb:Attributes",
              "dynamodb:LeadingKeys",
              "dynamodb:ReturnConsumedCapacity",
              "dynamodb:Select"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Puts or deletes multiple items in one or more tables",
        "privilege": "BatchWriteItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          },
          {
            "condition_keys": [
              "dynamodb:Attributes",
              "dynamodb:LeadingKeys",
              "dynamodb:ReturnConsumedCapacity"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "The ConditionCheckItem operation checks the existence of a set of attributes for the item with the given primary key",
        "privilege": "ConditionCheckItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          },
          {
            "condition_keys": [
              "dynamodb:Attributes",
              "dynamodb:LeadingKeys",
              "dynamodb:ReturnConsumedCapacity",
              "dynamodb:ReturnValues"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a backup for an existing table",
        "privilege": "CreateBackup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to create a global table from an existing table",
        "privilege": "CreateGlobalTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-table*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateTable operation adds a new table to your account",
        "privilege": "CreateTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds a new replica table",
        "privilege": "CreateTableReplica",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing backup of a table",
        "privilege": "DeleteBackup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a single item in a table by primary key",
        "privilege": "DeleteItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          },
          {
            "condition_keys": [
              "dynamodb:Attributes",
              "dynamodb:EnclosingOperation",
              "dynamodb:LeadingKeys",
              "dynamodb:ReturnConsumedCapacity",
              "dynamodb:ReturnValues"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteTable operation deletes a table and all of its items",
        "privilege": "DeleteTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a replica table and all of its items",
        "privilege": "DeleteTableReplica",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an existing backup of a table",
        "privilege": "DescribeBackup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Checks the status of the backup restore settings on the specified table",
        "privilege": "DescribeContinuousBackups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the contributor insights status and related details for a given table or global secondary index",
        "privilege": "DescribeContributorInsights",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the specified global table",
        "privilege": "DescribeGlobalTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-table*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns settings information about the specified global table",
        "privilege": "DescribeGlobalTableSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-table*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the current provisioned-capacity limits for your AWS account in a region, both for the region as a whole and for any one DynamoDB table that you create there",
        "privilege": "DescribeLimits",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes one or more of the Reserved Capacity purchased",
        "privilege": "DescribeReservedCapacity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes Reserved Capacity offerings that are available for purchase",
        "privilege": "DescribeReservedCapacityOfferings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a stream, including the current status of the stream, its Amazon Resource Name (ARN), the composition of its shards, and its corresponding DynamoDB table",
        "privilege": "DescribeStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the table",
        "privilege": "DescribeTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the auto scaling settings across all replicas of the global table",
        "privilege": "DescribeTableReplicaAutoScaling",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gives a description of the Time to Live (TTL) status on the specified table.",
        "privilege": "DescribeTimeToLive",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "The GetItem operation returns a set of attributes for the item with the given primary key",
        "privilege": "GetItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          },
          {
            "condition_keys": [
              "dynamodb:Attributes",
              "dynamodb:EnclosingOperation",
              "dynamodb:LeadingKeys",
              "dynamodb:ReturnConsumedCapacity",
              "dynamodb:Select"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the stream records from a given shard",
        "privilege": "GetRecords",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a shard iterator",
        "privilege": "GetShardIterator",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List backups associated with the account and endpoint",
        "privilege": "ListBackups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the ContributorInsightsSummary for all tables and global secondary indexes associated with the current account and endpoint",
        "privilege": "ListContributorInsights",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all global tables that have a replica in the specified region",
        "privilege": "ListGlobalTables",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns an array of stream ARNs associated with the current account and endpoint",
        "privilege": "ListStreams",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of table names associated with the current account and endpoint",
        "privilege": "ListTables",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "List all tags on an Amazon DynamoDB resource",
        "privilege": "ListTagsOfResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Purchases Reserved Capacity for use with your account",
        "privilege": "PurchaseReservedCapacityOfferings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new item, or replaces an old item with a new item",
        "privilege": "PutItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          },
          {
            "condition_keys": [
              "dynamodb:Attributes",
              "dynamodb:EnclosingOperation",
              "dynamodb:LeadingKeys",
              "dynamodb:ReturnConsumedCapacity",
              "dynamodb:ReturnValues"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Uses the primary key of a table or a secondary index to directly access items from that table or index",
        "privilege": "Query",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index"
          },
          {
            "condition_keys": [
              "dynamodb:Attributes",
              "dynamodb:LeadingKeys",
              "dynamodb:ReturnConsumedCapacity",
              "dynamodb:ReturnValues",
              "dynamodb:Select"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new table from an existing backup",
        "privilege": "RestoreTableFromBackup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backup*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Restores a table to a point in time",
        "privilege": "RestoreTableToPointInTime",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns one or more items and item attributes by accessing every item in a table or a secondary index",
        "privilege": "Scan",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index"
          },
          {
            "condition_keys": [
              "dynamodb:Attributes",
              "dynamodb:LeadingKeys",
              "dynamodb:ReturnConsumedCapacity",
              "dynamodb:ReturnValues",
              "dynamodb:Select"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Associate a set of tags with an Amazon DynamoDB resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes the association of tags from an Amazon DynamoDB resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables or disables continuous backups",
        "privilege": "UpdateContinuousBackups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the status for contributor insights for a specific table or global secondary index",
        "privilege": "UpdateContributorInsights",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to add or remove replicas in the specified global table",
        "privilege": "UpdateGlobalTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-table*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to update settings of the specified global table",
        "privilege": "UpdateGlobalTableSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-table*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Edits an existing item's attributes, or adds a new item to the table if it does not already exist",
        "privilege": "UpdateItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          },
          {
            "condition_keys": [
              "dynamodb:Attributes",
              "dynamodb:EnclosingOperation",
              "dynamodb:LeadingKeys",
              "dynamodb:ReturnConsumedCapacity",
              "dynamodb:ReturnValues"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the provisioned throughput settings, global secondary indexes, or DynamoDB Streams settings for a given table",
        "privilege": "UpdateTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates auto scaling settings on your replica table",
        "privilege": "UpdateTableReplicaAutoScaling",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables or disables TTL for the specified table",
        "privilege": "UpdateTimeToLive",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:dynamodb:${Region}:${Account}:table/${TableName}/index/${IndexName}",
        "condition_keys": [],
        "resource": "index"
      },
      {
        "arn": "arn:${Partition}:dynamodb:${Region}:${Account}:table/${TableName}/stream/${StreamLabel}",
        "condition_keys": [],
        "resource": "stream"
      },
      {
        "arn": "arn:${Partition}:dynamodb:${Region}:${Account}:table/${TableName}",
        "condition_keys": [],
        "resource": "table"
      },
      {
        "arn": "arn:${Partition}:dynamodb:${Region}:${Account}:table/${TableName}/backup/${BackupName}",
        "condition_keys": [],
        "resource": "backup"
      },
      {
        "arn": "arn:${Partition}:dynamodb::${Account}:global-table/${GlobalTableName}",
        "condition_keys": [],
        "resource": "global-table"
      }
    ],
    "service_name": "Amazon DynamoDB"
  },
  {
    "conditions": [
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters access based on tag key-value pairs assigned to the AWS resource",
        "type": "String"
      }
    ],
    "prefix": "ebs",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Grants permission to return the data of a block in an Amazon Elastic Block Store (EBS) snapshot",
        "privilege": "GetSnapshotBlock",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list the block indexes and block tokens for blocks that are different between two Amazon Elastic Block Store (EBS) snapshots of the same volume/snapshot lineage",
        "privilege": "ListChangedBlocks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list the block indexes and block tokens for blocks in an Amazon Elastic Block Store (EBS) snapshot.",
        "privilege": "ListSnapshotBlocks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "snapshot"
      }
    ],
    "service_name": "Amazon Elastic Block Store"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters access by a tag key and value pair that is allowed in the request",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters access by a list of tag keys that are allowed in the request",
        "type": "String"
      },
      {
        "condition": "ec2:AccepterVpc",
        "description": "Filters access by the ARN of an accepter VPC in a VPC peering connection",
        "type": "ARN"
      },
      {
        "condition": "ec2:AssociatePublicIpAddress",
        "description": "Filters access by whether the user wants to associate a public IP address with the instance",
        "type": "Bool"
      },
      {
        "condition": "ec2:AuthenticationType",
        "description": "Filters access by the authentication type for the VPN tunnel endpoints",
        "type": "String"
      },
      {
        "condition": "ec2:AuthorizedService",
        "description": "Filters access by the AWS service that has permission to use a resource",
        "type": "String"
      },
      {
        "condition": "ec2:AuthorizedUser",
        "description": "Filters access by an IAM principal that has permission to use a resource",
        "type": "String"
      },
      {
        "condition": "ec2:AutoPlacement",
        "description": "Filters access by the Auto Placement properties of a Dedicated Host",
        "type": "String"
      },
      {
        "condition": "ec2:AvailabilityZone",
        "description": "Filters access by the name of an Availability Zone in an AWS Region",
        "type": "String"
      },
      {
        "condition": "ec2:CreateAction",
        "description": "Filters access by the name of a resource-creating API action",
        "type": "String"
      },
      {
        "condition": "ec2:DPDTimeoutSeconds",
        "description": "Filters access by the duration after which DPD timeout occurs on a VPN tunnel",
        "type": "Numeric"
      },
      {
        "condition": "ec2:EbsOptimized",
        "description": "Filters access by whether the instance is enabled for EBS optimization",
        "type": "Bool"
      },
      {
        "condition": "ec2:ElasticGpuType",
        "description": "Filters access by the type of Elastic Graphics accelerator",
        "type": "String"
      },
      {
        "condition": "ec2:Encrypted",
        "description": "Filters access by whether the EBS volume is encrypted",
        "type": "Bool"
      },
      {
        "condition": "ec2:GatewayType",
        "description": "Filters access by the gateway type for a VPN endpoint on the AWS side of a VPN connection",
        "type": "String"
      },
      {
        "condition": "ec2:HostRecovery",
        "description": "Filters access by whether host recovery is enabled for a Dedicated Host",
        "type": "String"
      },
      {
        "condition": "ec2:IKEVersions",
        "description": "Filters access by the internet key exchange (IKE) versions that are permitted for a VPN tunnel",
        "type": "String"
      },
      {
        "condition": "ec2:ImageType",
        "description": "Filters access by the type of image (machine, aki, or ari)",
        "type": "String"
      },
      {
        "condition": "ec2:InsideTunnelCidr",
        "description": "Filters access by the range of inside IP addresses for a VPN tunnel",
        "type": "String"
      },
      {
        "condition": "ec2:InstanceMarketType",
        "description": "Filters access by the market or purchasing option of an instance (on-demand or spot)",
        "type": "String"
      },
      {
        "condition": "ec2:InstanceProfile",
        "description": "Filters access by the ARN of an instance profile",
        "type": "ARN"
      },
      {
        "condition": "ec2:InstanceType",
        "description": "Filters access by the type of instance",
        "type": "String"
      },
      {
        "condition": "ec2:IsLaunchTemplateResource",
        "description": "Filters access by whether users are able to override resources that are specified in the launch template",
        "type": "Bool"
      },
      {
        "condition": "ec2:LaunchTemplate",
        "description": "Filters access by the ARN of a launch template",
        "type": "ARN"
      },
      {
        "condition": "ec2:MetadataHttpEndpoint",
        "description": "Filters access by whether the HTTP endpoint is enabled for the instance metadata service",
        "type": "String"
      },
      {
        "condition": "ec2:MetadataHttpPutResponseHopLimit",
        "description": "Filters access by the allowed number of hops when calling the instance metadata service",
        "type": "Numeric"
      },
      {
        "condition": "ec2:MetadataHttpTokens",
        "description": "Filters access by whether tokens are required when calling the instance metadata service (optional or required)",
        "type": "String"
      },
      {
        "condition": "ec2:Owner",
        "description": "Filters access by the owner of the resource (amazon, aws-marketplace, or an AWS account ID)",
        "type": "String"
      },
      {
        "condition": "ec2:ParentSnapshot",
        "description": "Filters access by the ARN of the parent snapshot",
        "type": "ARN"
      },
      {
        "condition": "ec2:ParentVolume",
        "description": "Filters access by the ARN of the parent volume from which the snapshot was created",
        "type": "ARN"
      },
      {
        "condition": "ec2:Permission",
        "description": "Filters access by the type of permission for a resource (INSTANCE-ATTACH or EIP-ASSOCIATE)",
        "type": "String"
      },
      {
        "condition": "ec2:Phase1DHGroupNumbers",
        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
        "type": "Numeric"
      },
      {
        "condition": "ec2:Phase1EncryptionAlgorithms",
        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
        "type": "String"
      },
      {
        "condition": "ec2:Phase1IntegrityAlgorithms",
        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 1 IKE negotiations",
        "type": "String"
      },
      {
        "condition": "ec2:Phase1LifetimeSeconds",
        "description": "Filters access by the lifetime in seconds for phase 1 of the IKE negotiations for a VPN tunnel",
        "type": "Numeric"
      },
      {
        "condition": "ec2:Phase2DHGroupNumbers",
        "description": "Filters access by the Diffie-Hellman group numbers that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
        "type": "Numeric"
      },
      {
        "condition": "ec2:Phase2EncryptionAlgorithms",
        "description": "Filters access by the encryption algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
        "type": "String"
      },
      {
        "condition": "ec2:Phase2IntegrityAlgorithms",
        "description": "Filters access by the integrity algorithms that are permitted for a VPN tunnel for the phase 2 IKE negotiations",
        "type": "String"
      },
      {
        "condition": "ec2:Phase2LifetimeSeconds",
        "description": "Filters access by the lifetime in seconds for phase 2 of the IKE negotiations for a VPN tunnel",
        "type": "Numeric"
      },
      {
        "condition": "ec2:PlacementGroup",
        "description": "Filters access by the ARN of the placement group",
        "type": "ARN"
      },
      {
        "condition": "ec2:PlacementGroupStrategy",
        "description": "Filters access by the instance placement strategy used by the placement group (cluster, spread, or partition)",
        "type": "String"
      },
      {
        "condition": "ec2:PresharedKeys",
        "description": "Filters access by the pre-shared key (PSK) used to establish the initial IKE security association between a virtual private gateway and a customer gateway",
        "type": "String"
      },
      {
        "condition": "ec2:ProductCode",
        "description": "Filters access by the product code that is associated with the AMI",
        "type": "String"
      },
      {
        "condition": "ec2:Public",
        "description": "Filters access by whether the image has public launch permissions",
        "type": "Bool"
      },
      {
        "condition": "ec2:Quantity",
        "description": "Filters access by the number of Dedicated Hosts in a request",
        "type": "Numeric"
      },
      {
        "condition": "ec2:Region",
        "description": "Filters access by the name of the AWS Region",
        "type": "String"
      },
      {
        "condition": "ec2:RekeyFuzzPercentage",
        "description": "Filters access by the percentage of increase of the rekey window (determined by the rekey margin time) within which the rekey time is randomly selected for a VPN tunnel",
        "type": "Numeric"
      },
      {
        "condition": "ec2:RekeyMarginTimeSeconds",
        "description": "Filters access by the margin time before the phase 2 lifetime expires for a VPN tunnel",
        "type": "Numeric"
      },
      {
        "condition": "ec2:RequesterVpc",
        "description": "Filters access by the ARN of a requester VPC in a VPC peering connection",
        "type": "ARN"
      },
      {
        "condition": "ec2:ReservedInstancesOfferingType",
        "description": "Filters access by the payment option of the Reserved Instance offering (No Upfront, Partial Upfront, or All Upfront)",
        "type": "String"
      },
      {
        "condition": "ec2:ResourceTag/",
        "description": "Filters access by the preface string for a tag key and value pair that are attached to a resource",
        "type": "String"
      },
      {
        "condition": "ec2:ResourceTag/${TagKey}",
        "description": "Filters access by a tag key and value pair of a resource",
        "type": "String"
      },
      {
        "condition": "ec2:RoleDelivery",
        "description": "Filters access by the version of the instance metadata service for retrieving IAM role credentials for EC2",
        "type": "Numeric"
      },
      {
        "condition": "ec2:RootDeviceType",
        "description": "Filters access by the root device type of the instance (ebs or instance-store)",
        "type": "String"
      },
      {
        "condition": "ec2:RoutingType",
        "description": "Filters access by the routing type for the VPN connection",
        "type": "String"
      },
      {
        "condition": "ec2:SnapshotTime",
        "description": "Filters access by the initiation time of a snapshot",
        "type": "String"
      },
      {
        "condition": "ec2:SourceInstanceARN",
        "description": "Filters access by the ARN of the instance from which the request originated",
        "type": "ARN"
      },
      {
        "condition": "ec2:Subnet",
        "description": "Filters access by the ARN of the subnet",
        "type": "ARN"
      },
      {
        "condition": "ec2:Tenancy",
        "description": "Filters access by the tenancy of the VPC or instance (default, dedicated, or host)",
        "type": "String"
      },
      {
        "condition": "ec2:VolumeIops",
        "description": "Filters access by the the number of input/output operations per second (IOPS) provisioned for the volume",
        "type": "Numeric"
      },
      {
        "condition": "ec2:VolumeSize",
        "description": "Filters access by the size of the volume, in GiB.",
        "type": "Numeric"
      },
      {
        "condition": "ec2:VolumeType",
        "description": "Filters access by the type of volume (gp2, io1, st1, sc1, or standard)",
        "type": "String"
      },
      {
        "condition": "ec2:Vpc",
        "description": "Filters access by the ARN of the VPC",
        "type": "ARN"
      },
      {
        "condition": "ec2:VpceServiceName",
        "description": "Filters access by the name of the VPC endpoint service",
        "type": "String"
      },
      {
        "condition": "ec2:VpceServiceOwner",
        "description": "Filters access by the service owner of the VPC endpoint service (amazon, aws-marketplace, or an AWS account ID)",
        "type": "String"
      },
      {
        "condition": "ec2:VpceServicePrivateDnsName",
        "description": "Filters access by the private DNS name of the VPC endpoint service",
        "type": "String"
      }
    ],
    "prefix": "ec2",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to accept a Convertible Reserved Instance exchange quote",
        "privilege": "AcceptReservedInstancesExchangeQuote",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to accept a transit gateway peering attachment request",
        "privilege": "AcceptTransitGatewayPeeringAttachment",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to accept a request to attach a VPC to a transit gateway",
        "privilege": "AcceptTransitGatewayVpcAttachment",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to accept one or more interface VPC endpoint connections to your VPC endpoint service",
        "privilege": "AcceptVpcEndpointConnections",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-endpoint-service*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to accept a VPC peering connection request",
        "privilege": "AcceptVpcPeeringConnection",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "vpc*"
          },
          {
            "condition_keys": [
              "ec2:AccepterVpc",
              "ec2:Region",
              "ec2:RequesterVpc",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-peering-connection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to advertise an IP address range that is provisioned for use in AWS through bring your own IP addresses (BYOIP)",
        "privilege": "AdvertiseByoipCidr",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to allocate an Elastic IP address (EIP) to your account",
        "privilege": "AllocateAddress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to allocate a Dedicated Host to your account",
        "privilege": "AllocateHosts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dedicated-host*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to apply a security group to the association between a Client VPN endpoint and a target network",
        "privilege": "ApplySecurityGroupsToClientVpnTargetNetwork",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "client-vpn-endpoint*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "security-group*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to assign one or more IPv6 addresses to a network interface",
        "privilege": "AssignIpv6Addresses",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to assign one or more secondary private IP addresses to a network interface",
        "privilege": "AssignPrivateIpAddresses",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate an Elastic IP address (EIP) with an instance or a network interface",
        "privilege": "AssociateAddress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate a target network with a Client VPN endpoint",
        "privilege": "AssociateClientVpnTargetNetwork",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "client-vpn-endpoint*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "subnet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate or disassociate a set of DHCP options with a VPC",
        "privilege": "AssociateDhcpOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate an IAM instance profile with a running or stopped instance",
        "privilege": "AssociateIamInstanceProfile",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:EbsOptimized",
              "ec2:InstanceProfile",
              "ec2:InstanceType",
              "ec2:PlacementGroup",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType",
              "ec2:Tenancy"
            ],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate a subnet or gateway with a route table",
        "privilege": "AssociateRouteTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate a CIDR block with a subnet",
        "privilege": "AssociateSubnetCidrBlock",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate an attachment and list of subnets with a transit gateway multicast domain",
        "privilege": "AssociateTransitGatewayMulticastDomain",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "subnet*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-multicast-domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate an attachment with a transit gateway route table",
        "privilege": "AssociateTransitGatewayRouteTable",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-route-table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate a CIDR block with a VPC",
        "privilege": "AssociateVpcCidrBlock",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to link an EC2-Classic instance to a ClassicLink-enabled VPC through one or more of the VPC's security groups",
        "privilege": "AttachClassicLinkVpc",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:EbsOptimized",
              "ec2:InstanceProfile",
              "ec2:InstanceType",
              "ec2:PlacementGroup",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "instance*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "security-group*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "vpc*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to attach an internet gateway to a VPC",
        "privilege": "AttachInternetGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to attach a network interface to an instance",
        "privilege": "AttachNetworkInterface",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to attach an EBS volume to a running or stopped instance and expose it to the instance with the specified device name",
        "privilege": "AttachVolume",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:EbsOptimized",
              "ec2:InstanceProfile",
              "ec2:InstanceType",
              "ec2:PlacementGroup",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "instance*"
          },
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:Encrypted",
              "ec2:ParentSnapshot",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:VolumeIops",
              "ec2:VolumeSize",
              "ec2:VolumeType"
            ],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to attach a virtual private gateway to a VPC",
        "privilege": "AttachVpnGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add an inbound authorization rule to a Client VPN endpoint",
        "privilege": "AuthorizeClientVpnIngress",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "client-vpn-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add one or more outbound rules to a VPC security group",
        "privilege": "AuthorizeSecurityGroupEgress",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "security-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add one or more inbound rules to a security group",
        "privilege": "AuthorizeSecurityGroupIngress",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "security-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to bundle an instance store-backed Windows instance",
        "privilege": "BundleInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to cancel a bundling operation",
        "privilege": "CancelBundleTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to cancel a Capacity Reservation and release the reserved capacity",
        "privilege": "CancelCapacityReservation",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "capacity-reservation*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to cancel an active conversion task",
        "privilege": "CancelConversionTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to cancel an active export task",
        "privilege": "CancelExportTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to cancel an in-process import virtual machine or import snapshot task",
        "privilege": "CancelImportTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to cancel a Reserved Instance listing on the Reserved Instance Marketplace",
        "privilege": "CancelReservedInstancesListing",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to cancel one or more Spot Fleet requests",
        "privilege": "CancelSpotFleetRequests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to cancel one or more Spot Instance requests",
        "privilege": "CancelSpotInstanceRequests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to determine whether an owned product code is associated with an instance",
        "privilege": "ConfirmProductInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to copy a source Amazon FPGA image (AFI) to the current Region",
        "privilege": "CopyFpgaImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to copy an Amazon Machine Image (AMI) from a source Region to the current Region",
        "privilege": "CopyImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to copy a point-in-time snapshot of an EBS volume and store it in Amazon S3",
        "privilege": "CopySnapshot",
        "resource_types": [
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}",
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a Capacity Reservation",
        "privilege": "CreateCapacityReservation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a Client VPN endpoint",
        "privilege": "CreateClientVpnEndpoint",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "client-vpn-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add a network route to a Client VPN endpoint's route table",
        "privilege": "CreateClientVpnRoute",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "client-vpn-endpoint*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "subnet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a customer gateway, which provides information to AWS about your customer gateway device",
        "privilege": "CreateCustomerGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a default subnet in a specified Availability Zone in a default VPC",
        "privilege": "CreateDefaultSubnet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a default VPC with a default subnet in each Availability Zone",
        "privilege": "CreateDefaultVpc",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a set of DHCP options for a VPC",
        "privilege": "CreateDhcpOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an egress-only internet gateway for a VPC",
        "privilege": "CreateEgressOnlyInternetGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to launch an EC2 Fleet",
        "privilege": "CreateFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create one or more flow logs to capture IP traffic for a network interface",
        "privilege": "CreateFlowLogs",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region"
            ],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "vpc-flow-log*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:Subnet",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "network-interface"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "subnet"
          },
          {
            "condition_keys": [
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "vpc"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an Amazon FPGA Image (AFI) from a design checkpoint (DCP)",
        "privilege": "CreateFpgaImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an Amazon EBS-backed AMI from a stopped or running Amazon EBS-backed instance",
        "privilege": "CreateImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to export a running or stopped instance to an Amazon S3 bucket",
        "privilege": "CreateInstanceExportTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an internet gateway for a VPC",
        "privilege": "CreateInternetGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a 2048-bit RSA key pair",
        "privilege": "CreateKeyPair",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a launch template",
        "privilege": "CreateLaunchTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new version of a launch template",
        "privilege": "CreateLaunchTemplateVersion",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "launch-template*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a static route for a local gateway route table",
        "privilege": "CreateLocalGatewayRoute",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "local-gateway-route-table*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "local-gateway-virtual-interface-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate a VPC with a local gateway route table",
        "privilege": "CreateLocalGatewayRouteTableVpcAssociation",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "local-gateway-route-table*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "vpc*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a NAT gateway in a subnet",
        "privilege": "CreateNatGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a network ACL in a VPC",
        "privilege": "CreateNetworkAcl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a numbered entry (a rule) in a network ACL",
        "privilege": "CreateNetworkAclEntry",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a network interface in a subnet",
        "privilege": "CreateNetworkInterface",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to create a permission for an AWS-authorized user to perform certain operations on a network interface",
        "privilege": "CreateNetworkInterfacePermission",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AuthorizedUser",
              "ec2:AvailabilityZone",
              "ec2:Permission",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Subnet",
              "ec2:Vpc",
              "ec2:AuthorizedService"
            ],
            "dependent_actions": [],
            "resource_type": "network-interface*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a placement group",
        "privilege": "CreatePlacementGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a listing for Standard Reserved Instances to be sold in the Reserved Instance Marketplace",
        "privilege": "CreateReservedInstancesListing",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a route in a VPC route table",
        "privilege": "CreateRoute",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "route-table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a route table for a VPC",
        "privilege": "CreateRouteTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a security group",
        "privilege": "CreateSecurityGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a snapshot of an EBS volume and store it in Amazon S3",
        "privilege": "CreateSnapshot",
        "resource_types": [
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}",
              "ec2:ParentVolume",
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          },
          {
            "condition_keys": [
              "ec2:Encrypted",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:VolumeIops",
              "ec2:VolumeSize",
              "ec2:VolumeType"
            ],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create crash-consistent snapshots of multiple EBS volumes and store them in Amazon S3",
        "privilege": "CreateSnapshots",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:EbsOptimized",
              "ec2:InstanceProfile",
              "ec2:InstanceType",
              "ec2:PlacementGroup",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "instance*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}",
              "ec2:ParentVolume",
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          },
          {
            "condition_keys": [
              "ec2:Encrypted",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:VolumeIops",
              "ec2:VolumeSize",
              "ec2:VolumeType"
            ],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a data feed for Spot Instances to view Spot Instance usage logs",
        "privilege": "CreateSpotDatafeedSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a subnet in a VPC",
        "privilege": "CreateSubnet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add or overwrite one or more tags for Amazon EC2 resources",
        "privilege": "CreateTags",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "capacity-reservation"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "client-vpn-endpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dedicated-host"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "dhcp-options"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Owner",
              "ec2:Public",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "fpga-image"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:ImageType",
              "ec2:Owner",
              "ec2:Public",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType"
            ],
            "dependent_actions": [],
            "resource_type": "image"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:AvailabilityZone",
              "ec2:EbsOptimized",
              "ec2:InstanceProfile",
              "ec2:InstanceType",
              "ec2:PlacementGroup",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "instance"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "internet-gateway"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "local-gateway"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "local-gateway-route-table"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "local-gateway-route-table-virtual-interface-group-association"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "local-gateway-route-table-vpc-association"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "local-gateway-virtual-interface"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "local-gateway-virtual-interface-group"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "network-acl"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:AvailabilityZone",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Subnet",
              "ec2:Vpc",
              "ec2:AssociatePublicIpAddress"
            ],
            "dependent_actions": [],
            "resource_type": "network-interface"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:AvailabilityZone",
              "ec2:InstanceType",
              "ec2:Region",
              "ec2:ReservedInstancesOfferingType",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "reserved-instances"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "route-table"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "security-group"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Owner",
              "ec2:ParentVolume",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:SnapshotTime",
              "ec2:VolumeSize"
            ],
            "dependent_actions": [],
            "resource_type": "snapshot"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "spot-instance-request"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:AvailabilityZone",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "subnet"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-filter"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-session"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-target"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-multicast-domain"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-route-table"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:AvailabilityZone",
              "ec2:Encrypted",
              "ec2:ParentSnapshot",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:VolumeIops",
              "ec2:VolumeSize",
              "ec2:VolumeType"
            ],
            "dependent_actions": [],
            "resource_type": "volume"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "vpc"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-endpoint"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-endpoint-service"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vpc-flow-log"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpn-connection"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpn-gateway"
          },
          {
            "condition_keys": [
              "ec2:CreateAction"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a traffic mirror filter",
        "privilege": "CreateTrafficMirrorFilter",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-filter*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a traffic mirror filter rule",
        "privilege": "CreateTrafficMirrorFilterRule",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-filter*"
          },
          {
            "condition_keys": [
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-filter-rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a traffic mirror session",
        "privilege": "CreateTrafficMirrorSession",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "network-interface*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-filter*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-session*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-target*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a traffic mirror target",
        "privilege": "CreateTrafficMirrorTarget",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-target*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "network-interface"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a transit gateway",
        "privilege": "CreateTransitGateway",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a multicast domain for a transit gateway",
        "privilege": "CreateTransitGatewayMulticastDomain",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-multicast-domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to request a transit gateway peering attachment between a requester and accepter transit gateway",
        "privilege": "CreateTransitGatewayPeeringAttachment",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a static route for a transit gateway route table",
        "privilege": "CreateTransitGatewayRoute",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-route-table*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a route table for a transit gateway",
        "privilege": "CreateTransitGatewayRouteTable",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-route-table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to attach a VPC to a transit gateway",
        "privilege": "CreateTransitGatewayVpcAttachment",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "subnet"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an EBS volume",
        "privilege": "CreateVolume",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:AvailabilityZone",
              "ec2:Encrypted",
              "ec2:ParentSnapshot",
              "ec2:Region",
              "ec2:VolumeIops",
              "ec2:VolumeSize",
              "ec2:VolumeType"
            ],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a VPC with a specified CIDR block",
        "privilege": "CreateVpc",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a VPC endpoint for an AWS service",
        "privilege": "CreateVpcEndpoint",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [
              "route53:AssociateVPCWithHostedZone"
            ],
            "resource_type": "vpc*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:VpceServiceName",
              "ec2:VpceServiceOwner"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-endpoint*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "route-table"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "security-group"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "subnet"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a connection notification for a VPC endpoint or VPC endpoint service",
        "privilege": "CreateVpcEndpointConnectionNotification",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a VPC endpoint service configuration to which service consumers (AWS accounts, IAM users, and IAM roles) can connect",
        "privilege": "CreateVpcEndpointServiceConfiguration",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:VpceServicePrivateDnsName"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-endpoint-service*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to request a VPC peering connection between two VPCs",
        "privilege": "CreateVpcPeeringConnection",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "vpc*"
          },
          {
            "condition_keys": [
              "ec2:AccepterVpc",
              "ec2:Region",
              "ec2:RequesterVpc"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-peering-connection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a VPN connection between a virtual private gateway or transit gateway and a customer gateway",
        "privilege": "CreateVpnConnection",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:AuthenticationType",
              "ec2:DPDTimeoutSeconds",
              "ec2:GatewayType",
              "ec2:IKEVersions",
              "ec2:InsideTunnelCidr",
              "ec2:Phase1DHGroupNumbers",
              "ec2:Phase2DHGroupNumbers",
              "ec2:Phase1EncryptionAlgorithms",
              "ec2:Phase2EncryptionAlgorithms",
              "ec2:Phase1IntegrityAlgorithms",
              "ec2:Phase2IntegrityAlgorithms",
              "ec2:Phase1LifetimeSeconds",
              "ec2:Phase2LifetimeSeconds",
              "ec2:PresharedKeys",
              "ec2:RekeyFuzzPercentage",
              "ec2:RekeyMarginTimeSeconds",
              "ec2:RoutingType"
            ],
            "dependent_actions": [],
            "resource_type": "vpn-connection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a static route for a VPN connection between a virtual private gateway and a customer gateway",
        "privilege": "CreateVpnConnectionRoute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a virtual private gateway",
        "privilege": "CreateVpnGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a Client VPN endpoint",
        "privilege": "DeleteClientVpnEndpoint",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "client-vpn-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a route from a Client VPN endpoint",
        "privilege": "DeleteClientVpnRoute",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "client-vpn-endpoint*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "subnet"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a customer gateway",
        "privilege": "DeleteCustomerGateway",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "customer-gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a set of DHCP options",
        "privilege": "DeleteDhcpOptions",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "dhcp-options*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an egress-only internet gateway",
        "privilege": "DeleteEgressOnlyInternetGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete one or more EC2 Fleets",
        "privilege": "DeleteFleets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete one or more flow logs",
        "privilege": "DeleteFlowLogs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an Amazon FPGA Image (AFI)",
        "privilege": "DeleteFpgaImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an internet gateway",
        "privilege": "DeleteInternetGateway",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "internet-gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a key pair by removing the public key from Amazon EC2",
        "privilege": "DeleteKeyPair",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a launch template and its associated versions",
        "privilege": "DeleteLaunchTemplate",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "launch-template*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete one or more versions of a launch template",
        "privilege": "DeleteLaunchTemplateVersions",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "launch-template*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a route from a local gateway route table",
        "privilege": "DeleteLocalGatewayRoute",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "local-gateway-route-table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an association between a VPC and local gateway route table",
        "privilege": "DeleteLocalGatewayRouteTableVpcAssociation",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "local-gateway-route-table-vpc-association*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a NAT gateway",
        "privilege": "DeleteNatGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a network ACL",
        "privilege": "DeleteNetworkAcl",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "network-acl*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an inbound or outbound entry (rule) from a network ACL",
        "privilege": "DeleteNetworkAclEntry",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "network-acl*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a detached network interface",
        "privilege": "DeleteNetworkInterface",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to delete a permission that is associated with a network interface",
        "privilege": "DeleteNetworkInterfacePermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a placement group",
        "privilege": "DeletePlacementGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a route from a route table",
        "privilege": "DeleteRoute",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "route-table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a route table",
        "privilege": "DeleteRouteTable",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "route-table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a security group",
        "privilege": "DeleteSecurityGroup",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "security-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a snapshot of an EBS volume",
        "privilege": "DeleteSnapshot",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Owner",
              "ec2:ParentVolume",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:SnapshotTime",
              "ec2:VolumeSize"
            ],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a data feed for Spot Instances",
        "privilege": "DeleteSpotDatafeedSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a subnet",
        "privilege": "DeleteSubnet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to delete one or more tags from Amazon EC2 resources",
        "privilege": "DeleteTags",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "capacity-reservation"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "client-vpn-endpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dedicated-host"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "dhcp-options"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "fpga-image"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "image"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "instance"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "internet-gateway"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "local-gateway"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "local-gateway-route-table"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "local-gateway-route-table-virtual-interface-group-association"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "local-gateway-route-table-vpc-association"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "local-gateway-virtual-interface"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "local-gateway-virtual-interface-group"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "network-acl"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "network-interface"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "reserved-instances"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "route-table"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "security-group"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "snapshot"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "spot-instance-request"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "subnet"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-multicast-domain"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-route-table"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "volume"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-endpoint"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-endpoint-service"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vpc-flow-log"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpn-connection"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpn-gateway"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a traffic mirror filter",
        "privilege": "DeleteTrafficMirrorFilter",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-filter*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a traffic mirror filter rule",
        "privilege": "DeleteTrafficMirrorFilterRule",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-filter*"
          },
          {
            "condition_keys": [
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-filter-rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a traffic mirror session",
        "privilege": "DeleteTrafficMirrorSession",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-session*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a traffic mirror target",
        "privilege": "DeleteTrafficMirrorTarget",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-target*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a transit gateway",
        "privilege": "DeleteTransitGateway",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions to delete a transit gateway multicast domain",
        "privilege": "DeleteTransitGatewayMulticastDomain",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-multicast-domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a peering attachment from a transit gateway",
        "privilege": "DeleteTransitGatewayPeeringAttachment",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a route from a transit gateway route table",
        "privilege": "DeleteTransitGatewayRoute",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-route-table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a transit gateway route table",
        "privilege": "DeleteTransitGatewayRouteTable",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-route-table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a VPC attachment from a transit gateway",
        "privilege": "DeleteTransitGatewayVpcAttachment",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an EBS volume",
        "privilege": "DeleteVolume",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:Encrypted",
              "ec2:ParentSnapshot",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:VolumeIops",
              "ec2:VolumeSize",
              "ec2:VolumeType"
            ],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a VPC",
        "privilege": "DeleteVpc",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete one or more VPC endpoint connection notifications",
        "privilege": "DeleteVpcEndpointConnectionNotifications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete one or more VPC endpoint service configurations",
        "privilege": "DeleteVpcEndpointServiceConfigurations",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-endpoint-service*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete one or more VPC endpoints",
        "privilege": "DeleteVpcEndpoints",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a VPC peering connection",
        "privilege": "DeleteVpcPeeringConnection",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AccepterVpc",
              "ec2:Region",
              "ec2:RequesterVpc",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-peering-connection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a VPN connection",
        "privilege": "DeleteVpnConnection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a static route for a VPN connection between a virtual private gateway and a customer gateway",
        "privilege": "DeleteVpnConnectionRoute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a virtual private gateway",
        "privilege": "DeleteVpnGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to release an IP address range that was provisioned through bring your own IP addresses (BYOIP), and to delete the corresponding address pool",
        "privilege": "DeprovisionByoipCidr",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to deregister an Amazon Machine Image (AMI)",
        "privilege": "DeregisterImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to deregister one or more network interface members from a group IP address in a transit gateway multicast domain",
        "privilege": "DeregisterTransitGatewayMulticastGroupMembers",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "network-interface*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-multicast-domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to deregister one or more network interface sources from a group IP address in a transit gateway multicast domain",
        "privilege": "DeregisterTransitGatewayMulticastGroupSources",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "network-interface*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-multicast-domain*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the attributes of the AWS account",
        "privilege": "DescribeAccountAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more Elastic IP addresses",
        "privilege": "DescribeAddresses",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the longer ID format settings for all resource types",
        "privilege": "DescribeAggregateIdFormat",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more of the Availability Zones that are available to you",
        "privilege": "DescribeAvailabilityZones",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more bundling tasks",
        "privilege": "DescribeBundleTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the IP address ranges that were provisioned through bring your own IP addresses (BYOIP)",
        "privilege": "DescribeByoipCidrs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more Capacity Reservations",
        "privilege": "DescribeCapacityReservations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more linked EC2-Classic instances",
        "privilege": "DescribeClassicLinkInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the authorization rules for a Client VPN endpoint",
        "privilege": "DescribeClientVpnAuthorizationRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe active client connections and connections that have been terminated within the last 60 minutes for a Client VPN endpoint",
        "privilege": "DescribeClientVpnConnections",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more Client VPN endpoints",
        "privilege": "DescribeClientVpnEndpoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the routes for a Client VPN endpoint",
        "privilege": "DescribeClientVpnRoutes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the target networks that are associated with a Client VPN endpoint",
        "privilege": "DescribeClientVpnTargetNetworks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more conversion tasks",
        "privilege": "DescribeConversionTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more customer gateways",
        "privilege": "DescribeCustomerGateways",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more DHCP options sets",
        "privilege": "DescribeDhcpOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more egress-only internet gateways",
        "privilege": "DescribeEgressOnlyInternetGateways",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe an Elastic Graphics accelerator that is associated with an instance",
        "privilege": "DescribeElasticGpus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more export image tasks",
        "privilege": "DescribeExportImageTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more export instance tasks",
        "privilege": "DescribeExportTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe the state of fast snapshot restores for snapshots",
        "privilege": "DescribeFastSnapshotRestores",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the events for an EC2 Fleet during a specified time",
        "privilege": "DescribeFleetHistory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the running instances for an EC2 Fleet",
        "privilege": "DescribeFleetInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more EC2 Fleets",
        "privilege": "DescribeFleets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more flow logs",
        "privilege": "DescribeFlowLogs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the attributes of an Amazon FPGA Image (AFI)",
        "privilege": "DescribeFpgaImageAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more Amazon FPGA Images (AFIs)",
        "privilege": "DescribeFpgaImages",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the Dedicated Host Reservations that are available to purchase",
        "privilege": "DescribeHostReservationOfferings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the Dedicated Host Reservations that are associated with Dedicated Hosts in the AWS account",
        "privilege": "DescribeHostReservations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more Dedicated Hosts",
        "privilege": "DescribeHosts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the IAM instance profile associations",
        "privilege": "DescribeIamInstanceProfileAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the ID format settings for resources",
        "privilege": "DescribeIdFormat",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the ID format settings for resources for an IAM user, IAM role, or root user",
        "privilege": "DescribeIdentityIdFormat",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe an attribute of an Amazon Machine Image (AMI)",
        "privilege": "DescribeImageAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more images (AMIs, AKIs, and ARIs)",
        "privilege": "DescribeImages",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe import virtual machine or import snapshot tasks",
        "privilege": "DescribeImportImageTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe import snapshot tasks",
        "privilege": "DescribeImportSnapshotTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the attributes of an instance",
        "privilege": "DescribeInstanceAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the credit option for CPU usage of one or more burstable performance instances",
        "privilege": "DescribeInstanceCreditSpecifications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the status of one or more instances",
        "privilege": "DescribeInstanceStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe all instance types that are offered in an AWS Region",
        "privilege": "DescribeInstanceTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more instances",
        "privilege": "DescribeInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more internet gateways",
        "privilege": "DescribeInternetGateways",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more key pairs",
        "privilege": "DescribeKeyPairs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more launch template versions",
        "privilege": "DescribeLaunchTemplateVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more launch templates",
        "privilege": "DescribeLaunchTemplates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the associations between virtual interface groups and local gateway route tables",
        "privilege": "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe an association between VPCs and local gateway route tables",
        "privilege": "DescribeLocalGatewayRouteTableVpcAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more local gateway route tables",
        "privilege": "DescribeLocalGatewayRouteTables",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe local gateway virtual interface groups",
        "privilege": "DescribeLocalGatewayVirtualInterfaceGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe local gateway virtual interfaces",
        "privilege": "DescribeLocalGatewayVirtualInterfaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more local gateways",
        "privilege": "DescribeLocalGateways",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe Elastic IP addresses that are being moved to the EC2-VPC platform",
        "privilege": "DescribeMovingAddresses",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more NAT gateways",
        "privilege": "DescribeNatGateways",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more network ACLs",
        "privilege": "DescribeNetworkAcls",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe a network interface attribute",
        "privilege": "DescribeNetworkInterfaceAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the permissions that are associated with a network interface",
        "privilege": "DescribeNetworkInterfacePermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more network interfaces",
        "privilege": "DescribeNetworkInterfaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more placement groups",
        "privilege": "DescribePlacementGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe available AWS services in a prefix list format",
        "privilege": "DescribePrefixLists",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the ID format settings for the root user and all IAM roles and IAM users that have explicitly specified a longer ID (17-character ID) preference",
        "privilege": "DescribePrincipalIdFormat",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more IPv4 address pools",
        "privilege": "DescribePublicIpv4Pools",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more AWS Regions that are currently available in your account",
        "privilege": "DescribeRegions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more purchased Reserved Instances in your account",
        "privilege": "DescribeReservedInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe your account's Reserved Instance listings in the Reserved Instance Marketplace",
        "privilege": "DescribeReservedInstancesListings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the modifications made to one or more Reserved Instances",
        "privilege": "DescribeReservedInstancesModifications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the Reserved Instance offerings that are available for purchase",
        "privilege": "DescribeReservedInstancesOfferings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more route tables",
        "privilege": "DescribeRouteTables",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to find available schedules for Scheduled Instances",
        "privilege": "DescribeScheduledInstanceAvailability",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe one or more Scheduled Instances in your account",
        "privilege": "DescribeScheduledInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the VPCs on the other side of a VPC peering connection that are referencing specified VPC security groups",
        "privilege": "DescribeSecurityGroupReferences",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more security groups",
        "privilege": "DescribeSecurityGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe an attribute of a snapshot",
        "privilege": "DescribeSnapshotAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more EBS snapshots",
        "privilege": "DescribeSnapshots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the data feed for Spot Instances",
        "privilege": "DescribeSpotDatafeedSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the running instances for a Spot Fleet",
        "privilege": "DescribeSpotFleetInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the events for a Spot Fleet request during a specified time",
        "privilege": "DescribeSpotFleetRequestHistory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more Spot Fleet requests",
        "privilege": "DescribeSpotFleetRequests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more Spot Instance requests",
        "privilege": "DescribeSpotInstanceRequests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the Spot Instance price history",
        "privilege": "DescribeSpotPriceHistory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the stale security group rules for security groups in a specified VPC",
        "privilege": "DescribeStaleSecurityGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more subnets",
        "privilege": "DescribeSubnets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe one or more tags for an Amazon EC2 resource",
        "privilege": "DescribeTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more traffic mirror filters",
        "privilege": "DescribeTrafficMirrorFilters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more traffic mirror sessions",
        "privilege": "DescribeTrafficMirrorSessions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more traffic mirror targets",
        "privilege": "DescribeTrafficMirrorTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more attachments between resources and transit gateways",
        "privilege": "DescribeTransitGatewayAttachments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more transit gateway multicast domains",
        "privilege": "DescribeTransitGatewayMulticastDomains",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more transit gateway peering attachments",
        "privilege": "DescribeTransitGatewayPeeringAttachments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more transit gateway route tables",
        "privilege": "DescribeTransitGatewayRouteTables",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more VPC attachments on a transit gateway",
        "privilege": "DescribeTransitGatewayVpcAttachments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more transit gateways",
        "privilege": "DescribeTransitGateways",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe an attribute of an EBS volume",
        "privilege": "DescribeVolumeAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the status of one or more EBS volumes",
        "privilege": "DescribeVolumeStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more EBS volumes",
        "privilege": "DescribeVolumes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe the current modification status of one or more EBS volumes",
        "privilege": "DescribeVolumesModifications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe an attribute of a VPC",
        "privilege": "DescribeVpcAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the ClassicLink status of one or more VPCs",
        "privilege": "DescribeVpcClassicLink",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the ClassicLink DNS support status of one or more VPCs",
        "privilege": "DescribeVpcClassicLinkDnsSupport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the connection notifications for VPC endpoints and VPC endpoint services",
        "privilege": "DescribeVpcEndpointConnectionNotifications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the VPC endpoint connections to your VPC endpoint services",
        "privilege": "DescribeVpcEndpointConnections",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe VPC endpoint service configurations (your services)",
        "privilege": "DescribeVpcEndpointServiceConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the principals (service consumers) that are permitted to discover your VPC endpoint service",
        "privilege": "DescribeVpcEndpointServicePermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe all supported AWS services that can be specified when creating a VPC endpoint",
        "privilege": "DescribeVpcEndpointServices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more VPC endpoints",
        "privilege": "DescribeVpcEndpoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more VPC peering connections",
        "privilege": "DescribeVpcPeeringConnections",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more VPCs",
        "privilege": "DescribeVpcs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe one or more VPN connections",
        "privilege": "DescribeVpnConnections",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe one or more virtual private gateways",
        "privilege": "DescribeVpnGateways",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to unlink (detach) a linked EC2-Classic instance from a VPC",
        "privilege": "DetachClassicLinkVpc",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:EbsOptimized",
              "ec2:InstanceProfile",
              "ec2:InstanceType",
              "ec2:PlacementGroup",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "instance*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "vpc*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to detach an internet gateway from a VPC",
        "privilege": "DetachInternetGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to detach a network interface from an instance",
        "privilege": "DetachNetworkInterface",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to detach an EBS volume from an instance",
        "privilege": "DetachVolume",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:EbsOptimized",
              "ec2:InstanceProfile",
              "ec2:InstanceType",
              "ec2:PlacementGroup",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "instance*"
          },
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:Encrypted",
              "ec2:ParentSnapshot",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:VolumeIops",
              "ec2:VolumeSize",
              "ec2:VolumeType"
            ],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to detach a virtual private gateway from a VPC",
        "privilege": "DetachVpnGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable EBS encryption by default for your account",
        "privilege": "DisableEbsEncryptionByDefault",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable fast snapshot restores for one or more snapshots in specified Availability Zones",
        "privilege": "DisableFastSnapshotRestores",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Owner",
              "ec2:ParentVolume",
              "ec2:Region",
              "ec2:AvailabilityZone",
              "ec2:SnapshotTime",
              "ec2:Encrypted",
              "ec2:VolumeSize",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable a resource attachment from propagating routes to the specified propagation route table",
        "privilege": "DisableTransitGatewayRouteTablePropagation",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-route-table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable a virtual private gateway from propagating routes to a specified route table of a VPC",
        "privilege": "DisableVgwRoutePropagation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable ClassicLink for a VPC",
        "privilege": "DisableVpcClassicLink",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "vpc*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable ClassicLink DNS support for a VPC",
        "privilege": "DisableVpcClassicLinkDnsSupport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate an Elastic IP address from an instance or network interface",
        "privilege": "DisassociateAddress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate a target network from a Client VPN endpoint",
        "privilege": "DisassociateClientVpnTargetNetwork",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "client-vpn-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate an IAM instance profile from a running or stopped instance",
        "privilege": "DisassociateIamInstanceProfile",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:EbsOptimized",
              "ec2:InstanceProfile",
              "ec2:InstanceType",
              "ec2:PlacementGroup",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate a subnet from a route table",
        "privilege": "DisassociateRouteTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate a CIDR block from a subnet",
        "privilege": "DisassociateSubnetCidrBlock",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate one or more subnets from a transit gateway multicast domain",
        "privilege": "DisassociateTransitGatewayMulticastDomain",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "subnet*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-multicast-domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate a resource attachment from a transit gateway route table",
        "privilege": "DisassociateTransitGatewayRouteTable",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-route-table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate a CIDR block from a VPC",
        "privilege": "DisassociateVpcCidrBlock",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable EBS encryption by default for your account",
        "privilege": "EnableEbsEncryptionByDefault",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable fast snapshot restores for one or more snapshots in specified Availability Zones",
        "privilege": "EnableFastSnapshotRestores",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Owner",
              "ec2:ParentVolume",
              "ec2:Region",
              "ec2:AvailabilityZone",
              "ec2:SnapshotTime",
              "ec2:Encrypted",
              "ec2:VolumeSize",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable an attachment to propagate routes to a propagation route table",
        "privilege": "EnableTransitGatewayRouteTablePropagation",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-route-table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable a virtual private gateway to propagate routes to a VPC route table",
        "privilege": "EnableVgwRoutePropagation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable I/O operations for a volume that had I/O operations disabled",
        "privilege": "EnableVolumeIO",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable a VPC for ClassicLink",
        "privilege": "EnableVpcClassicLink",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "vpc*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable a VPC to support DNS hostname resolution for ClassicLink",
        "privilege": "EnableVpcClassicLinkDnsSupport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to download the client certificate revocation list for a Client VPN endpoint",
        "privilege": "ExportClientVpnClientCertificateRevocationList",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to download the contents of the Client VPN endpoint configuration file for a Client VPN endpoint",
        "privilege": "ExportClientVpnClientConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to export an Amazon Machine Image (AMI) to a VM file",
        "privilege": "ExportImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to export routes from a transit gateway route table to an Amazon S3 bucket",
        "privilege": "ExportTransitGatewayRoutes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get usage information about a Capacity Reservation",
        "privilege": "GetCapacityReservationUsage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get the console output for an instance",
        "privilege": "GetConsoleOutput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a JPG-format screenshot of a running instance",
        "privilege": "GetConsoleScreenshot",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:EbsOptimized",
              "ec2:InstanceProfile",
              "ec2:InstanceType",
              "ec2:PlacementGroup",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get the default credit option for CPU usage of a burstable performance instance family",
        "privilege": "GetDefaultCreditSpecification",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get the ID of the default customer master key (CMK) for EBS encryption by default",
        "privilege": "GetEbsDefaultKmsKeyId",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe whether EBS encryption by default is enabled for your account",
        "privilege": "GetEbsEncryptionByDefault",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to preview a reservation purchase with configurations that match those of a Dedicated Host",
        "privilege": "GetHostReservationPurchasePreview",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get the configuration data of the specified instance for use with a new launch template or launch template version",
        "privilege": "GetLaunchTemplateData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the encrypted administrator password for a running Windows instance",
        "privilege": "GetPasswordData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return a quote and exchange information for exchanging one or more Convertible Reserved Instances for a new Convertible Reserved Instance",
        "privilege": "GetReservedInstancesExchangeQuote",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the route tables to which a resource attachment propagates routes",
        "privilege": "GetTransitGatewayAttachmentPropagations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get information about the associations for a transit gateway multicast domain",
        "privilege": "GetTransitGatewayMulticastDomainAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get information about associations for a transit gateway route table",
        "privilege": "GetTransitGatewayRouteTableAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get information about the route table propagations for a transit gateway route table",
        "privilege": "GetTransitGatewayRouteTablePropagations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to upload a client certificate revocation list to a Client VPN endpoint",
        "privilege": "ImportClientVpnClientCertificateRevocationList",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "client-vpn-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to import single or multi-volume disk images or EBS snapshots into an Amazon Machine Image (AMI)",
        "privilege": "ImportImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an import instance task using metadata from a disk image",
        "privilege": "ImportInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to import a public key from an RSA key pair that was created with a third-party tool",
        "privilege": "ImportKeyPair",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to import a disk into an EBS snapshot",
        "privilege": "ImportSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an import volume task using metadata from a disk image",
        "privilege": "ImportVolume",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify a Capacity Reservation's capacity and the conditions under which it is to be released",
        "privilege": "ModifyCapacityReservation",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "capacity-reservation*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify a Client VPN endpoint",
        "privilege": "ModifyClientVpnEndpoint",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "client-vpn-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change the account level default credit option for CPU usage of burstable performance instances",
        "privilege": "ModifyDefaultCreditSpecification",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change the default customer master key (CMK) for EBS encryption by default for your account",
        "privilege": "ModifyEbsDefaultKmsKeyId",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an EC2 Fleet",
        "privilege": "ModifyFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an attribute of an Amazon FPGA Image (AFI)",
        "privilege": "ModifyFpgaImageAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify a Dedicated Host",
        "privilege": "ModifyHosts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the ID format for a resource",
        "privilege": "ModifyIdFormat",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the ID format of a resource for a specific principal in your account",
        "privilege": "ModifyIdentityIdFormat",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an attribute of an Amazon Machine Image (AMI)",
        "privilege": "ModifyImageAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an attribute of an instance",
        "privilege": "ModifyInstanceAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the Capacity Reservation settings for a stopped instance",
        "privilege": "ModifyInstanceCapacityReservationAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the credit option for CPU usage on an instance",
        "privilege": "ModifyInstanceCreditSpecification",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the start time for a scheduled EC2 instance event",
        "privilege": "ModifyInstanceEventStartTime",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the metadata options for an instance",
        "privilege": "ModifyInstanceMetadataOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the placement attributes for an instance",
        "privilege": "ModifyInstancePlacement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify a launch template",
        "privilege": "ModifyLaunchTemplate",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "launch-template*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an attribute of a network interface",
        "privilege": "ModifyNetworkInterfaceAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify attributes of one or more Reserved Instances",
        "privilege": "ModifyReservedInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to add or remove permission settings for a snapshot",
        "privilege": "ModifySnapshotAttribute",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Owner",
              "ec2:ParentVolume",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:SnapshotTime",
              "ec2:VolumeSize"
            ],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify a Spot Fleet request",
        "privilege": "ModifySpotFleetRequest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an attribute of a subnet",
        "privilege": "ModifySubnetAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to allow or restrict mirroring network services",
        "privilege": "ModifyTrafficMirrorFilterNetworkServices",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-filter*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify a traffic mirror rule",
        "privilege": "ModifyTrafficMirrorFilterRule",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-filter*"
          },
          {
            "condition_keys": [
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-filter-rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify a traffic mirror session",
        "privilege": "ModifyTrafficMirrorSession",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-session*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-filter"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "traffic-mirror-target"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify a VPC attachment on a transit gateway",
        "privilege": "ModifyTransitGatewayVpcAttachment",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "subnet"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the parameters of an EBS volume",
        "privilege": "ModifyVolume",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an attribute of a volume",
        "privilege": "ModifyVolumeAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an attribute of a VPC",
        "privilege": "ModifyVpcAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an attribute of a VPC endpoint",
        "privilege": "ModifyVpcEndpoint",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-endpoint*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "route-table"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "security-group"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "subnet"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify a connection notification for a VPC endpoint or VPC endpoint service",
        "privilege": "ModifyVpcEndpointConnectionNotification",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the attributes of a VPC endpoint service configuration",
        "privilege": "ModifyVpcEndpointServiceConfiguration",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:VpceServicePrivateDnsName",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-endpoint-service*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to modify the permissions for a VPC endpoint service",
        "privilege": "ModifyVpcEndpointServicePermissions",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-endpoint-service*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the VPC peering connection options on one side of a VPC peering connection",
        "privilege": "ModifyVpcPeeringConnectionOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the instance tenancy attribute of a VPC",
        "privilege": "ModifyVpcTenancy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the target gateway of a Site-to-Site VPN connection",
        "privilege": "ModifyVpnConnection",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:GatewayType"
            ],
            "dependent_actions": [],
            "resource_type": "vpn-connection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the certificate for a Site-to-Site VPN connection",
        "privilege": "ModifyVpnTunnelCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the options for a Site-to-Site VPN connection",
        "privilege": "ModifyVpnTunnelOptions",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:AuthenticationType",
              "ec2:DPDTimeoutSeconds",
              "ec2:IKEVersions",
              "ec2:InsideTunnelCidr",
              "ec2:Phase1DHGroupNumbers",
              "ec2:Phase2DHGroupNumbers",
              "ec2:Phase1EncryptionAlgorithms",
              "ec2:Phase2EncryptionAlgorithms",
              "ec2:Phase1IntegrityAlgorithms",
              "ec2:Phase2IntegrityAlgorithms",
              "ec2:Phase1LifetimeSeconds",
              "ec2:Phase2LifetimeSeconds",
              "ec2:PresharedKeys",
              "ec2:RekeyFuzzPercentage",
              "ec2:RekeyMarginTimeSeconds",
              "ec2:RoutingType"
            ],
            "dependent_actions": [],
            "resource_type": "vpn-connection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable detailed monitoring for a running instance",
        "privilege": "MonitorInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to move an Elastic IP address from the EC2-Classic platform to the EC2-VPC platform",
        "privilege": "MoveAddressToVpc",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to provision an address range for use in AWS through bring your own IP addresses (BYOIP), and to create a corresponding address pool",
        "privilege": "ProvisionByoipCidr",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to purchase a reservation with configurations that match those of a Dedicated Host",
        "privilege": "PurchaseHostReservation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to purchase a Reserved Instance offering",
        "privilege": "PurchaseReservedInstancesOffering",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to purchase one or more Scheduled Instances with a specified schedule",
        "privilege": "PurchaseScheduledInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to request a reboot of one or more instances",
        "privilege": "RebootInstances",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:EbsOptimized",
              "ec2:InstanceProfile",
              "ec2:InstanceType",
              "ec2:PlacementGroup",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to register an Amazon Machine Image (AMI)",
        "privilege": "RegisterImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to register one or more network interfaces as a member of a group IP address in a transit gateway multicast domain",
        "privilege": "RegisterTransitGatewayMulticastGroupMembers",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "network-interface*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-multicast-domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to register one or more network interfaces as a source of a group IP address in a transit gateway multicast domain",
        "privilege": "RegisterTransitGatewayMulticastGroupSources",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "network-interface*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-multicast-domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reject a transit gateway peering attachment request",
        "privilege": "RejectTransitGatewayPeeringAttachment",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reject a request to attach a VPC to a transit gateway",
        "privilege": "RejectTransitGatewayVpcAttachment",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reject one or more VPC endpoint connection requests to a VPC endpoint service",
        "privilege": "RejectVpcEndpointConnections",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-endpoint-service*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reject a VPC peering connection request",
        "privilege": "RejectVpcPeeringConnection",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AccepterVpc",
              "ec2:Region",
              "ec2:RequesterVpc",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-peering-connection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to release an Elastic IP address",
        "privilege": "ReleaseAddress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to release one or more On-Demand Dedicated Hosts",
        "privilege": "ReleaseHosts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to replace an IAM instance profile for an instance",
        "privilege": "ReplaceIamInstanceProfileAssociation",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:EbsOptimized",
              "ec2:InstanceProfile",
              "ec2:InstanceType",
              "ec2:PlacementGroup",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType",
              "ec2:Tenancy"
            ],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change which network ACL a subnet is associated with",
        "privilege": "ReplaceNetworkAclAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to replace an entry (rule) in a network ACL",
        "privilege": "ReplaceNetworkAclEntry",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to replace a route within a route table in a VPC",
        "privilege": "ReplaceRoute",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "route-table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change the route table that is associated with a subnet",
        "privilege": "ReplaceRouteTableAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to replace a route in a transit gateway route table",
        "privilege": "ReplaceTransitGatewayRoute",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-route-table*"
          },
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "transit-gateway-attachment"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to submit feedback about the status of an instance",
        "privilege": "ReportInstanceStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a Spot Fleet request",
        "privilege": "RequestSpotFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a Spot Instance request",
        "privilege": "RequestSpotInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reset the default customer master key (CMK) for EBS encryption for your account to use the AWS-managed CMK for EBS",
        "privilege": "ResetEbsDefaultKmsKeyId",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reset an attribute of an Amazon FPGA Image (AFI) to its default value",
        "privilege": "ResetFpgaImageAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reset an attribute of an Amazon Machine Image (AMI) to its default value",
        "privilege": "ResetImageAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reset an attribute of an instance to its default value",
        "privilege": "ResetInstanceAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reset an attribute of a network interface",
        "privilege": "ResetNetworkInterfaceAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to reset permission settings for a snapshot",
        "privilege": "ResetSnapshotAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to restore an Elastic IP address that was previously moved to the EC2-VPC platform back to the EC2-Classic platform",
        "privilege": "RestoreAddressToClassic",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove an inbound authorization rule from a Client VPN endpoint",
        "privilege": "RevokeClientVpnIngress",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "client-vpn-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove one or more outbound rules from a VPC security group",
        "privilege": "RevokeSecurityGroupEgress",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "security-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove one or more inbound rules from a security group",
        "privilege": "RevokeSecurityGroupIngress",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "security-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to launch one or more instances",
        "privilege": "RunInstances",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:ImageType",
              "ec2:IsLaunchTemplateResource",
              "ec2:LaunchTemplate",
              "ec2:Owner",
              "ec2:Public",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType"
            ],
            "dependent_actions": [],
            "resource_type": "image*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:AvailabilityZone",
              "ec2:EbsOptimized",
              "ec2:InstanceProfile",
              "ec2:InstanceType",
              "ec2:IsLaunchTemplateResource",
              "ec2:LaunchTemplate",
              "ec2:PlacementGroup",
              "ec2:Region",
              "ec2:RootDeviceType",
              "ec2:Tenancy",
              "ec2:MetadataHttpEndpoint",
              "ec2:MetadataHttpTokens",
              "ec2:MetadataHttpPutResponseHopLimit"
            ],
            "dependent_actions": [],
            "resource_type": "instance*"
          },
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:IsLaunchTemplateResource",
              "ec2:LaunchTemplate",
              "ec2:Region",
              "ec2:ResourceTag/",
              "ec2:Subnet",
              "ec2:Vpc",
              "ec2:AssociatePublicIpAddress"
            ],
            "dependent_actions": [],
            "resource_type": "network-interface*"
          },
          {
            "condition_keys": [
              "ec2:IsLaunchTemplateResource",
              "ec2:LaunchTemplate",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "security-group*"
          },
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:IsLaunchTemplateResource",
              "ec2:LaunchTemplate",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "subnet*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ec2:AvailabilityZone",
              "ec2:Encrypted",
              "ec2:IsLaunchTemplateResource",
              "ec2:LaunchTemplate",
              "ec2:ParentSnapshot",
              "ec2:Region",
              "ec2:VolumeIops",
              "ec2:VolumeSize",
              "ec2:VolumeType"
            ],
            "dependent_actions": [],
            "resource_type": "volume*"
          },
          {
            "condition_keys": [
              "ec2:ElasticGpuType"
            ],
            "dependent_actions": [],
            "resource_type": "elastic-gpu"
          },
          {
            "condition_keys": [
              "ec2:IsLaunchTemplateResource",
              "ec2:LaunchTemplate",
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "key-pair"
          },
          {
            "condition_keys": [
              "ec2:IsLaunchTemplateResource",
              "ec2:LaunchTemplate",
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "launch-template"
          },
          {
            "condition_keys": [
              "ec2:IsLaunchTemplateResource",
              "ec2:LaunchTemplate",
              "ec2:PlacementGroupStrategy",
              "ec2:Region"
            ],
            "dependent_actions": [],
            "resource_type": "placement-group"
          },
          {
            "condition_keys": [
              "ec2:IsLaunchTemplateResource",
              "ec2:LaunchTemplate",
              "ec2:Owner",
              "ec2:ParentVolume",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:SnapshotTime",
              "ec2:VolumeSize"
            ],
            "dependent_actions": [],
            "resource_type": "snapshot"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to launch one or more Scheduled Instances",
        "privilege": "RunScheduledInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to search for routes in a local gateway route table",
        "privilege": "SearchLocalGatewayRoutes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to search for groups, sources, and members in a transit gateway multicast domain",
        "privilege": "SearchTransitGatewayMulticastGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to search for routes in a transit gateway route table",
        "privilege": "SearchTransitGatewayRoutes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to send a diagnostic interrupt to an Amazon EC2 instance",
        "privilege": "SendDiagnosticInterrupt",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:EbsOptimized",
              "ec2:InstanceProfile",
              "ec2:InstanceType",
              "ec2:PlacementGroup",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start a stopped instance",
        "privilege": "StartInstances",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:EbsOptimized",
              "ec2:InstanceProfile",
              "ec2:InstanceType",
              "ec2:PlacementGroup",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start the private DNS verification process for a VPC endpoint service",
        "privilege": "StartVpcEndpointServicePrivateDnsVerification",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "vpc-endpoint-service*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop an Amazon EBS-backed instance",
        "privilege": "StopInstances",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:EbsOptimized",
              "ec2:InstanceProfile",
              "ec2:InstanceType",
              "ec2:PlacementGroup",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to terminate active Client VPN endpoint connections",
        "privilege": "TerminateClientVpnConnections",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": "client-vpn-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to shut down one or more instances",
        "privilege": "TerminateInstances",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:AvailabilityZone",
              "ec2:EbsOptimized",
              "ec2:InstanceProfile",
              "ec2:InstanceType",
              "ec2:PlacementGroup",
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:RootDeviceType",
              "ec2:Tenancy"
            ],
            "dependent_actions": [],
            "resource_type": "instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to unassign one or more IPv6 addresses from a network interface",
        "privilege": "UnassignIpv6Addresses",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to unassign one or more secondary private IP addresses from a network interface",
        "privilege": "UnassignPrivateIpAddresses",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable detailed monitoring for a running instance",
        "privilege": "UnmonitorInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update descriptions for one or more outbound rules in a VPC security group",
        "privilege": "UpdateSecurityGroupRuleDescriptionsEgress",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "security-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update descriptions for one or more inbound rules in a security group",
        "privilege": "UpdateSecurityGroupRuleDescriptionsIngress",
        "resource_types": [
          {
            "condition_keys": [
              "ec2:Region",
              "ec2:ResourceTag/${TagKey}",
              "ec2:Vpc"
            ],
            "dependent_actions": [],
            "resource_type": "security-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop advertising an address range that was provisioned for use in AWS through bring your own IP addresses (BYOIP)",
        "privilege": "WithdrawByoipCidr",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "capacity-reservation"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "client-vpn-endpoint"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}",
        "condition_keys": [
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "customer-gateway"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:dedicated-host/${HostId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:AutoPlacement",
          "ec2:AvailabilityZone",
          "ec2:HostRecovery",
          "ec2:InstanceType",
          "ec2:Quantity",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "dedicated-host"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "dhcp-options"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:elasticGpu/${ElasticGpuId}",
        "condition_keys": [],
        "resource": "elastic-gpu"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}::fpga-image/${FpgaImageId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Owner",
          "ec2:Public",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "fpga-image"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}::image/${ImageId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:ImageType",
          "ec2:Owner",
          "ec2:Public",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType"
        ],
        "resource": "image"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:PlacementGroup",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RootDeviceType",
          "ec2:Tenancy"
        ],
        "resource": "instance"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "internet-gateway"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}",
        "condition_keys": [
          "ec2:Region"
        ],
        "resource": "key-pair"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}",
        "condition_keys": [
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "launch-template"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway/${LocalGatewayId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "local-gateway"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRouteTableId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "local-gateway-route-table"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-virtual-interface-group-association/${LocalGatewayRouteTableVirtualInterfaceGroupAssociationId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "local-gateway-route-table-virtual-interface-group-association"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-vpc-association/${LocalGatewayRouteTableVpcAssociationId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "local-gateway-route-table-vpc-association"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface/${LocalGatewayVirtualInterfaceId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "local-gateway-virtual-interface"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface-group/${LocalGatewayVirtualInterfaceGroupId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "local-gateway-virtual-interface-group"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-acl/${NaclId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Vpc"
        ],
        "resource": "network-acl"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:AssociatePublicIpAddress",
          "ec2:AuthorizedService",
          "ec2:AvailabilityZone",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Subnet",
          "ec2:Vpc"
        ],
        "resource": "network-interface"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}",
        "condition_keys": [
          "ec2:PlacementGroupStrategy",
          "ec2:Region"
        ],
        "resource": "placement-group"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:reserved-instances/${ReservationId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:AvailabilityZone",
          "ec2:InstanceType",
          "ec2:Region",
          "ec2:ReservedInstancesOfferingType",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy"
        ],
        "resource": "reserved-instances"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Vpc"
        ],
        "resource": "route-table"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Vpc"
        ],
        "resource": "security-group"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Owner",
          "ec2:ParentVolume",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}",
          "ec2:SnapshotTime",
          "ec2:VolumeSize"
        ],
        "resource": "snapshot"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}::spot-instances-request/${SpotInstanceRequestId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "spot-instance-request"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:AvailabilityZone",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Vpc"
        ],
        "resource": "subnet"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "traffic-mirror-session"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "traffic-mirror-target"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "traffic-mirror-filter"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter-rule/${TrafficMirrorFilterRuleId}",
        "condition_keys": [
          "ec2:Region"
        ],
        "resource": "traffic-mirror-filter-rule"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "transit-gateway-attachment"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "transit-gateway-multicast-domain"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "transit-gateway-route-table"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "transit-gateway"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:AvailabilityZone",
          "ec2:Encrypted",
          "ec2:ParentSnapshot",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeType"
        ],
        "resource": "volume"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}",
          "ec2:Tenancy"
        ],
        "resource": "vpc"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpceId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpceServiceName",
          "ec2:VpceServiceOwner"
        ],
        "resource": "vpc-endpoint"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpceServiceId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}",
          "ec2:VpceServicePrivateDnsName"
        ],
        "resource": "vpc-endpoint-service"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:Region",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "vpc-flow-log"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}",
        "condition_keys": [
          "ec2:AccepterVpc",
          "ec2:Region",
          "ec2:RequesterVpc",
          "ec2:ResourceTag/${TagKey}"
        ],
        "resource": "vpc-peering-connection"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "ec2:AuthenticationType",
          "ec2:DPDTimeoutSeconds",
          "ec2:GatewayType",
          "ec2:IKEVersions",
          "ec2:InsideTunnelCidr",
          "ec2:Phase1DHGroupNumbers",
          "ec2:Phase1EncryptionAlgorithms",
          "ec2:Phase1IntegrityAlgorithms",
          "ec2:Phase1LifetimeSeconds",
          "ec2:Phase2DHGroupNumbers",
          "ec2:Phase2EncryptionAlgorithms",
          "ec2:Phase2IntegrityAlgorithms",
          "ec2:Phase2LifetimeSeconds",
          "ec2:PresharedKeys",
          "ec2:Region",
          "ec2:RekeyFuzzPercentage",
          "ec2:RekeyMarginTimeSeconds",
          "ec2:ResourceTag/${TagKey}",
          "ec2:RoutingType"
        ],
        "resource": "vpn-connection"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}",
        "condition_keys": [],
        "resource": "vpn-gateway"
      }
    ],
    "service_name": "Amazon EC2"
  },
  {
    "conditions": [
      {
        "condition": "ec2:osuser",
        "description": "Filters access by specifying the default user name for the AMI that you used to launch your instance",
        "type": "String"
      }
    ],
    "prefix": "ec2-instance-connect",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to push the SSH public key to the instance metadata where it remains for 60 seconds.",
        "privilege": "SendSSHPublicKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          },
          {
            "condition_keys": [
              "ec2:osuser"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
        "condition_keys": [],
        "resource": "instance"
      }
    ],
    "service_name": "Amazon EC2 Instance Connect"
  },
  {
    "conditions": [],
    "prefix": "ec2messages",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Acknowledges a message, ensuring it will not be delivered again",
        "privilege": "AcknowledgeMessage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a message",
        "privilege": "DeleteMessage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Fails a message, signifying the message could not be processed successfully, ensuring it cannot be replied to or delivered again",
        "privilege": "FailMessage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Routes traffic to the correct endpoint based on the given destination for the messages",
        "privilege": "GetEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Delivers messages to clients/instances using long polling",
        "privilege": "GetMessages",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sends replies from clients/instances to upstream service",
        "privilege": "SendReply",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon Message Delivery Service"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters create requests based on the allowed set of values for each of the tags.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value associated with the resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters create requests based on the presence of mandatory tags in the request.",
        "type": "String"
      },
      {
        "condition": "ecr:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value associated with the resource.",
        "type": "String"
      }
    ],
    "prefix": "ecr",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Grants permission to check the availability of multiple image layers in a specified registry and repository",
        "privilege": "BatchCheckLayerAvailability",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a list of specified images within a specified repository",
        "privilege": "BatchDeleteImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get detailed information for specified images within a specified repository",
        "privilege": "BatchGetImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to inform Amazon ECR that the image layer upload for a specified registry, repository name, and upload ID, has completed",
        "privilege": "CompleteLayerUpload",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an image repository",
        "privilege": "CreateRepository",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified lifecycle policy",
        "privilege": "DeleteLifecyclePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an existing image repository",
        "privilege": "DeleteRepository",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the repository policy from a specified repository",
        "privilege": "DeleteRepositoryPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe the image scan findings for the specified image",
        "privilege": "DescribeImageScanFindings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get metadata about the images in a repository, including image size, image tags, and creation date",
        "privilege": "DescribeImages",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe image repositories in a registry",
        "privilege": "DescribeRepositories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a token that is valid for a specified registry for 12 hours",
        "privilege": "GetAuthorizationToken",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the download URL corresponding to an image layer",
        "privilege": "GetDownloadUrlForLayer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the specified lifecycle policy",
        "privilege": "GetLifecyclePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the results of the specified lifecycle policy preview request",
        "privilege": "GetLifecyclePolicyPreview",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the repository policy for a specified repository",
        "privilege": "GetRepositoryPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to notify Amazon ECR that you intend to upload an image layer",
        "privilege": "InitiateLayerUpload",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all the image IDs for a given repository",
        "privilege": "ListImages",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list the tags for an Amazon ECR resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create or update the image manifest associated with an image",
        "privilege": "PutImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the image scanning configuration for a repository",
        "privilege": "PutImageScanningConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the image tag mutability settings for a repository",
        "privilege": "PutImageTagMutability",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create or update a lifecycle policy",
        "privilege": "PutLifecyclePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to apply a repository policy on a specified repository to control access permissions",
        "privilege": "SetRepositoryPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start an image scan",
        "privilege": "StartImageScan",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start a preview of the specified lifecycle policy",
        "privilege": "StartLifecyclePolicyPreview",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to tag an Amazon ECR resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to untag an Amazon ECR resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to upload an image layer part to Amazon ECR",
        "privilege": "UploadLayerPart",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "repository*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:ecr:${Region}:${Account}:repository/${RepositoryName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "ecr:ResourceTag/${TagKey}"
        ],
        "resource": "repository"
      }
    ],
    "service_name": "Amazon Elastic Container Registry"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "",
        "type": "String"
      },
      {
        "condition": "ecs:ResourceTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "ecs:cluster",
        "description": "The ARN of an ECS cluster.",
        "type": "ARN"
      },
      {
        "condition": "ecs:container-instances",
        "description": "The ARN of an ECS container instance.",
        "type": "ARN"
      },
      {
        "condition": "ecs:service",
        "description": "The ARN of an ECS service.",
        "type": "ARN"
      },
      {
        "condition": "ecs:task-definition",
        "description": "The ARN of an ECS task definition.",
        "type": "ARN"
      }
    ],
    "prefix": "ecs",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a new Amazon ECS cluster.",
        "privilege": "CreateCluster",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Runs and maintains a desired number of tasks from a specified task definition.",
        "privilege": "CreateService",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "service*"
          },
          {
            "condition_keys": [
              "ecs:cluster",
              "ecs:task-definition",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new Amazon ECS task set.",
        "privilege": "CreateTaskSet",
        "resource_types": [
          {
            "condition_keys": [
              "ecs:cluster",
              "ecs:service",
              "ecs:task-definition"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the ARN and resource ID format of a resource for a specified IAM user, IAM role, or the root user for an account. You can specify whether the new ARN and resource ID format are disabled for new resources that are created.",
        "privilege": "DeleteAccountSetting",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes one or more custom attributes from an Amazon ECS resource.",
        "privilege": "DeleteAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "container-instance*"
          },
          {
            "condition_keys": [
              "ecs:cluster"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified cluster.",
        "privilege": "DeleteCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specified service within a cluster.",
        "privilege": "DeleteService",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "service*"
          },
          {
            "condition_keys": [
              "ecs:cluster"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified task set.",
        "privilege": "DeleteTaskSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task-set*"
          },
          {
            "condition_keys": [
              "ecs:cluster",
              "ecs:service"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deregisters an Amazon ECS container instance from the specified cluster.",
        "privilege": "DeregisterContainerInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deregisters the specified task definition by family and revision.",
        "privilege": "DeregisterTaskDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes one or more of your clusters.",
        "privilege": "DescribeClusters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes Amazon ECS container instances.",
        "privilege": "DescribeContainerInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "container-instance*"
          },
          {
            "condition_keys": [
              "ecs:cluster"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified services running in your cluster.",
        "privilege": "DescribeServices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "service*"
          },
          {
            "condition_keys": [
              "ecs:cluster"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a task definition. You can specify a family and revision to find information about a specific task definition, or you can simply specify the family to find the latest ACTIVE revision in that family.",
        "privilege": "DescribeTaskDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes Amazon ECS task sets.",
        "privilege": "DescribeTaskSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task-set*"
          },
          {
            "condition_keys": [
              "ecs:cluster",
              "ecs:service"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a specified task or tasks.",
        "privilege": "DescribeTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task*"
          },
          {
            "condition_keys": [
              "ecs:cluster"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Returns an endpoint for the Amazon ECS agent to poll for updates.",
        "privilege": "DiscoverPollEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the account settings for an Amazon ECS resource for a specified principal.",
        "privilege": "ListAccountSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the attributes for Amazon ECS resources within a specified target type and cluster.",
        "privilege": "ListAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of existing clusters.",
        "privilege": "ListClusters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of container instances in a specified cluster.",
        "privilege": "ListContainerInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the services that are running in a specified cluster.",
        "privilege": "ListServices",
        "resource_types": [
          {
            "condition_keys": [
              "ecs:cluster"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List tags for the specified resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "container-instance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task-definition"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of task definition families that are registered to your account (which may include task definition families that no longer have any ACTIVE task definitions).",
        "privilege": "ListTaskDefinitionFamilies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of task definitions that are registered to your account.",
        "privilege": "ListTaskDefinitions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of tasks for a specified cluster.",
        "privilege": "ListTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "container-instance*"
          },
          {
            "condition_keys": [
              "ecs:cluster"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to an agent to connect with the Amazon ECS service to report status and get commands.",
        "privilege": "Poll",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "container-instance*"
          },
          {
            "condition_keys": [
              "ecs:cluster"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the ARN and resource ID format of a resource for a specified IAM user, IAM role, or the root user for an account. You can specify whether the new ARN and resource ID format are enabled for new resources that are created. Enabling this setting is required to use new Amazon ECS features such as resource tagging.",
        "privilege": "PutAccountSetting",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the ARN and resource ID format of a resource type for all IAM users on an account for which no individual account setting has been set. Enabling this setting is required to use new Amazon ECS features such as resource tagging.",
        "privilege": "PutAccountSettingDefault",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create or update an attribute on an Amazon ECS resource.",
        "privilege": "PutAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "container-instance*"
          },
          {
            "condition_keys": [
              "ecs:cluster"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers an EC2 instance into the specified cluster.",
        "privilege": "RegisterContainerInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers a new task definition from the supplied family and containerDefinitions.",
        "privilege": "RegisterTaskDefinition",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Start a task using random placement and the default Amazon ECS scheduler.",
        "privilege": "RunTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task-definition*"
          },
          {
            "condition_keys": [
              "ecs:cluster",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a new task from the specified task definition on the specified container instance or instances.",
        "privilege": "StartTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task-definition*"
          },
          {
            "condition_keys": [
              "ecs:cluster",
              "ecs:container-instances",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start a telemetry session.",
        "privilege": "StartTelemetrySession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "container-instance*"
          },
          {
            "condition_keys": [
              "ecs:cluster"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a running task.",
        "privilege": "StopTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task*"
          },
          {
            "condition_keys": [
              "ecs:cluster"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sent to acknowledge that attachments changed states.",
        "privilege": "SubmitAttachmentStateChanges",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sent to acknowledge that a container changed states.",
        "privilege": "SubmitContainerStateChange",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sent to acknowledge that a task changed states.",
        "privilege": "SubmitTaskStateChange",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Tags the specified resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "container-instance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "service"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task-definition"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Untags the specified resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "container-instance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "service"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task-definition"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the Amazon ECS container agent on a specified container instance.",
        "privilege": "UpdateContainerAgent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "container-instance*"
          },
          {
            "condition_keys": [
              "ecs:cluster"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to modify the status of an Amazon ECS container instance.",
        "privilege": "UpdateContainerInstancesState",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "container-instance*"
          },
          {
            "condition_keys": [
              "ecs:cluster"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the desired count, deployment configuration, or task definition used in a service.",
        "privilege": "UpdateService",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "service*"
          },
          {
            "condition_keys": [
              "ecs:cluster",
              "ecs:task-definition"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the primary task set used in a service.",
        "privilege": "UpdateServicePrimaryTaskSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "service*"
          },
          {
            "condition_keys": [
              "ecs:cluster"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified task set.",
        "privilege": "UpdateTaskSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task-set*"
          },
          {
            "condition_keys": [
              "ecs:cluster",
              "ecs:service"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:ecs:${Region}:${Account}:cluster/${ClusterName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "ecs:ResourceTag/${TagKey}"
        ],
        "resource": "cluster"
      },
      {
        "arn": "arn:${Partition}:ecs:${Region}:${Account}:container-instance/${ContainerInstanceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "ecs:ResourceTag/${TagKey}"
        ],
        "resource": "container-instance"
      },
      {
        "arn": "arn:${Partition}:ecs:${Region}:${Account}:service/${ServiceName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "ecs:ResourceTag/${TagKey}"
        ],
        "resource": "service"
      },
      {
        "arn": "arn:${Partition}:ecs:${Region}:${Account}:task/${TaskId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "ecs:ResourceTag/${TagKey}"
        ],
        "resource": "task"
      },
      {
        "arn": "arn:${Partition}:ecs:${Region}:${Account}:task-definition/${TaskDefinitionFamilyName}:${TaskDefinitionRevisionNumber}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "ecs:ResourceTag/${TagKey}"
        ],
        "resource": "task-definition"
      },
      {
        "arn": "arn:${Partition}:ecs:${region}:${Account}:task-set/${ClusterName}/${ServiceName}/${TaskSetId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "ecs:ResourceTag/${TagKey}"
        ],
        "resource": "task-set"
      }
    ],
    "service_name": "Amazon Elastic Container Service"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters access by a key that is present in the request the user makes to the EKS service.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters access by a tag key and value pair.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters access by the list of all the tag key names present in the request the user makes to the EKS service.",
        "type": "String"
      }
    ],
    "prefix": "eks",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates an Amazon EKS cluster.",
        "privilege": "CreateCluster",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an AWS Fargate profile.",
        "privilege": "CreateFargateProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an Amazon EKS Nodegroup.",
        "privilege": "CreateNodegroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an Amazon EKS cluster.",
        "privilege": "DeleteCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an AWS Fargate profile.",
        "privilege": "DeleteFargateProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fargateprofile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an Amazon EKS Nodegroup.",
        "privilege": "DeleteNodegroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "nodegroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns descriptive information about an Amazon EKS cluster.",
        "privilege": "DescribeCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns descriptive information about an AWS Fargate profile associated with a cluster.",
        "privilege": "DescribeFargateProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fargateprofile*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns descriptive information about an Amazon EKS nodegroup.",
        "privilege": "DescribeNodegroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "nodegroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a given update for a given Amazon EKS cluster/nodegroup (in the specified or default region).",
        "privilege": "DescribeUpdate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "nodegroup"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the Amazon EKS clusters in your AWS account (in the specified or default region).",
        "privilege": "ListClusters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the AWS Fargate profiles in your AWS account (in the specified or default region) associated with a given cluster.",
        "privilege": "ListFargateProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the Amazon EKS nodegroups in your AWS account (in the specified or default region) attached to given cluster.",
        "privilege": "ListNodegroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List tags for the specified resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fargateprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "nodegroup"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the updates for a given Amazon EKS cluster/nodegroup (in the specified or default region).",
        "privilege": "ListUpdates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "nodegroup"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Tags the specified resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fargateprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "nodegroup"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Untags the specified resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fargateprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "nodegroup"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update Amazon EKS cluster configurations (eg: API server endpoint access).",
        "privilege": "UpdateClusterConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the Kubernetes version of an Amazon EKS cluster.",
        "privilege": "UpdateClusterVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update Amazon EKS nodegroup configurations (eg: min/max/desired capacity or labels).",
        "privilege": "UpdateNodegroupConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "nodegroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the Kubernetes version of an Amazon EKS nodegroup.",
        "privilege": "UpdateNodegroupVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "nodegroup*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:eks:${Region}:${Account}:cluster/${ClusterName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "cluster"
      },
      {
        "arn": "arn:${Partition}:eks:${Region}:${Account}:nodegroup/${ClusterName}/${NodegroupName}/${UUID}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "nodegroup"
      },
      {
        "arn": "arn:${Partition}:eks:${Region}:${Account}:fargateprofile/${ClusterName}/${FargateProfileName}/${UUID}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "fargateprofile"
      }
    ],
    "service_name": "Amazon Elastic Container Service for Kubernetes"
  },
  {
    "conditions": [],
    "prefix": "elastic-inference",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Connects customer to Elastic Inference accelerator",
        "privilege": "Connect",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accelerator*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:elastic-inference:${Region}:${Account}:elastic-inference-accelerator/${AcceleratorId}",
        "condition_keys": [],
        "resource": "accelerator"
      }
    ],
    "service_name": "Amazon Elastic Inference"
  },
  {
    "conditions": [],
    "prefix": "elasticache",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "The AddTagsToResource action adds up to 10 cost allocation tags to the named resource.",
        "privilege": "AddTagsToResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The AuthorizeCacheSecurityGroupIngress action allows network ingress to a cache security group.",
        "privilege": "AuthorizeCacheSecurityGroupIngress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "ec2:AuthorizeSecurityGroupIngress"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CopySnapshot action makes a copy of an existing snapshot.",
        "privilege": "CopySnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:DeleteObject",
              "s3:GetBucketAcl",
              "s3:PutObject"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateCacheCluster action creates a cache cluster.",
        "privilege": "CreateCacheCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "ec2:CreateNetworkInterface",
              "ec2:DeleteNetworkInterface",
              "ec2:DescribeNetworkInterfaces",
              "ec2:DescribeSubnets",
              "ec2:DescribeVpcs",
              "s3:GetObject"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateCacheParameterGroup action creates a new cache parameter group.",
        "privilege": "CreateCacheParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateCacheSecurityGroup action creates a new cache security group.",
        "privilege": "CreateCacheSecurityGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateCacheSubnetGroup action creates a new cache subnet group.",
        "privilege": "CreateCacheSubnetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateReplicationGroup action creates a replication group.",
        "privilege": "CreateReplicationGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "ec2:CreateNetworkInterface",
              "ec2:DeleteNetworkInterface",
              "ec2:DescribeNetworkInterfaces",
              "ec2:DescribeSubnets",
              "ec2:DescribeVpcs",
              "s3:GetObject"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateSnapshot action creates a copy of an entire cache cluster at a specific moment in time.",
        "privilege": "CreateSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DecreaseReplicaCount action decreases the number of replicas in a Redis replication group.",
        "privilege": "DecreaseReplicaCount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "ec2:CreateNetworkInterface",
              "ec2:DeleteNetworkInterface",
              "ec2:DescribeNetworkInterfaces",
              "ec2:DescribeSubnets",
              "ec2:DescribeVpcs"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteCacheCluster action deletes a previously provisioned cache cluster.",
        "privilege": "DeleteCacheCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteCacheParameterGroup action deletes the specified cache parameter group.",
        "privilege": "DeleteCacheParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteCacheSecurityGroup action deletes a cache security group.",
        "privilege": "DeleteCacheSecurityGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteCacheSubnetGroup action deletes a cache subnet group.",
        "privilege": "DeleteCacheSubnetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteReplicationGroup action deletes an existing replication group.",
        "privilege": "DeleteReplicationGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteSnapshot action deletes an existing snapshot.",
        "privilege": "DeleteSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeCacheClusters action returns information about all provisioned cache clusters if no cache cluster identifier is specified, or about a specific cache cluster if a cache cluster identifier is supplied.",
        "privilege": "DescribeCacheClusters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeCacheEngineVersions action returns a list of the available cache engines and their versions.",
        "privilege": "DescribeCacheEngineVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeCacheParameterGroups action returns a list of cache parameter group descriptions.",
        "privilege": "DescribeCacheParameterGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeCacheParameters action returns the detailed parameter list for a particular cache parameter group.",
        "privilege": "DescribeCacheParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeCacheSecurityGroups action returns a list of cache security group descriptions.",
        "privilege": "DescribeCacheSecurityGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeCacheSubnetGroups action returns a list of cache subnet group descriptions.",
        "privilege": "DescribeCacheSubnetGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeEngineDefaultParameters action returns the default engine and system parameter information for the specified cache engine.",
        "privilege": "DescribeEngineDefaultParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeEvents action returns events related to cache clusters, cache security groups, and cache parameter groups.",
        "privilege": "DescribeEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeReplicationGroups action returns information about a particular replication group.",
        "privilege": "DescribeReplicationGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeReservedCacheNodes action returns information about reserved cache nodes for this account, or about a specified reserved cache node.",
        "privilege": "DescribeReservedCacheNodes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeReservedCacheNodesOfferings action lists available reserved cache node offerings.",
        "privilege": "DescribeReservedCacheNodesOfferings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The DescribeSnapshots action returns information about cache cluster snapshots.",
        "privilege": "DescribeSnapshots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The IncreaseReplicaCount action increases the number of replicas in a Redis replication group.",
        "privilege": "IncreaseReplicaCount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "ec2:CreateNetworkInterface",
              "ec2:DeleteNetworkInterface",
              "ec2:DescribeNetworkInterfaces",
              "ec2:DescribeSubnets",
              "ec2:DescribeVpcs"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List Allowed Node Type Modifications",
        "privilege": "ListAllowedNodeTypeModifications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "The ListTagsForResource action lists all cost allocation tags currently on the named resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The ModifyCacheCluster action modifies the settings for a cache cluster.",
        "privilege": "ModifyCacheCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The ModifyCacheParameterGroup action modifies the parameters of a cache parameter group.",
        "privilege": "ModifyCacheParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The ModifyCacheSubnetGroup action modifies an existing cache subnet group.",
        "privilege": "ModifyCacheSubnetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The ModifyReplicationGroup action modifies the settings for a replication group.",
        "privilege": "ModifyReplicationGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The ModifyReplicationGroupShardConfiguration action allows you to add shards, remove shards, or rebalance the keyspaces among exisiting shards.",
        "privilege": "ModifyReplicationGroupShardConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "ec2:CreateNetworkInterface",
              "ec2:DeleteNetworkInterface",
              "ec2:DescribeNetworkInterfaces",
              "ec2:DescribeSubnets",
              "ec2:DescribeVpcs"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The PurchaseReservedCacheNodesOffering action allows you to purchase a reserved cache node offering.",
        "privilege": "PurchaseReservedCacheNodesOffering",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The RebootCacheCluster action reboots some, or all, of the cache nodes within a provisioned cache cluster.",
        "privilege": "RebootCacheCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "The RemoveTagsFromResource action removes the tags identified by the TagKeys list from the named resource.",
        "privilege": "RemoveTagsFromResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The ResetCacheParameterGroup action modifies the parameters of a cache parameter group to the engine or system default value.",
        "privilege": "ResetCacheParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The RevokeCacheSecurityGroupIngress action revokes ingress from a cache security group.",
        "privilege": "RevokeCacheSecurityGroupIngress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The TestFailover action allows you to test automatic failover on a specified node group in a replication group",
        "privilege": "TestFailover",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "ec2:CreateNetworkInterface",
              "ec2:DeleteNetworkInterface",
              "ec2:DescribeNetworkInterfaces",
              "ec2:DescribeSubnets",
              "ec2:DescribeVpcs"
            ],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon ElastiCache"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request.",
        "type": "String"
      },
      {
        "condition": "elasticbeanstalk:FromApplication",
        "description": "Filters access by an application as a dependency or a constraint on an input parameter.",
        "type": "ARN"
      },
      {
        "condition": "elasticbeanstalk:FromApplicationVersion",
        "description": "Filters access by an application version as a dependency or a constraint on an input parameter.",
        "type": "ARN"
      },
      {
        "condition": "elasticbeanstalk:FromConfigurationTemplate",
        "description": "Filters access by a configuration template as a dependency or a constraint on an input parameter.",
        "type": "ARN"
      },
      {
        "condition": "elasticbeanstalk:FromEnvironment",
        "description": "Filters access by an environment as a dependency or a constraint on an input parameter.",
        "type": "ARN"
      },
      {
        "condition": "elasticbeanstalk:FromPlatform",
        "description": "Filters access by a platform as a dependency or a constraint on an input parameter.",
        "type": "ARN"
      },
      {
        "condition": "elasticbeanstalk:FromSolutionStack",
        "description": "Filters access by a solution stack as a dependency or a constraint on an input parameter.",
        "type": "ARN"
      },
      {
        "condition": "elasticbeanstalk:InApplication",
        "description": "Filters access by the application that contains the resource that the action operates on.",
        "type": "ARN"
      }
    ],
    "prefix": "elasticbeanstalk",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to cancel in-progress environment configuration update or application version deployment.",
        "privilege": "AbortEnvironmentUpdate",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add tags to an Elastic Beanstalk resource and to update tag values.",
        "privilege": "AddTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "applicationversion"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurationtemplate"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "platform"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to apply a scheduled managed action immediately.",
        "privilege": "ApplyEnvironmentManagedAction",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to check CNAME availability.",
        "privilege": "CheckDNSAvailability",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create or update a group of environments, each running a separate component of a single application.",
        "privilege": "ComposeEnvironments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "applicationversion*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new application.",
        "privilege": "CreateApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an application version for an application.",
        "privilege": "CreateApplicationVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "applicationversion*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a configuration template.",
        "privilege": "CreateConfigurationTemplate",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "configurationtemplate*"
          },
          {
            "condition_keys": [
              "elasticbeanstalk:FromApplication",
              "elasticbeanstalk:FromApplicationVersion",
              "elasticbeanstalk:FromConfigurationTemplate",
              "elasticbeanstalk:FromEnvironment",
              "elasticbeanstalk:FromSolutionStack",
              "elasticbeanstalk:FromPlatform",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to launch an environment for an application.",
        "privilege": "CreateEnvironment",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment*"
          },
          {
            "condition_keys": [
              "elasticbeanstalk:FromApplicationVersion",
              "elasticbeanstalk:FromConfigurationTemplate",
              "elasticbeanstalk:FromSolutionStack",
              "elasticbeanstalk:FromPlatform",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new version of a custom platform.",
        "privilege": "CreatePlatformVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "platform*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create the Amazon S3 storage location for the account.",
        "privilege": "CreateStorageLocation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an application along with all associated versions and configurations.",
        "privilege": "DeleteApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an application version from an application.",
        "privilege": "DeleteApplicationVersion",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "applicationversion*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a configuration template.",
        "privilege": "DeleteConfigurationTemplate",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "configurationtemplate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the draft configuration associated with the running environment.",
        "privilege": "DeleteEnvironmentConfiguration",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a version of a custom platform.",
        "privilege": "DeletePlatformVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "platform*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of account attributes, including resource quotas.",
        "privilege": "DescribeAccountAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of application versions stored in an AWS Elastic Beanstalk storage bucket.",
        "privilege": "DescribeApplicationVersions",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "applicationversion"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve the descriptions of existing applications.",
        "privilege": "DescribeApplications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve descriptions of environment configuration options.",
        "privilege": "DescribeConfigurationOptions",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "configurationtemplate"
          },
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "solutionstack"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a description of the settings for a configuration set.",
        "privilege": "DescribeConfigurationSettings",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "configurationtemplate"
          },
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about the overall health of an environment.",
        "privilege": "DescribeEnvironmentHealth",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of an environment's completed and failed managed actions.",
        "privilege": "DescribeEnvironmentManagedActionHistory",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of an environment's upcoming and in-progress managed actions.",
        "privilege": "DescribeEnvironmentManagedActions",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of AWS resources for an environment.",
        "privilege": "DescribeEnvironmentResources",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve descriptions for existing environments.",
        "privilege": "DescribeEnvironments",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of event descriptions matching a set of criteria.",
        "privilege": "DescribeEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application"
          },
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "applicationversion"
          },
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "configurationtemplate"
          },
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve more detailed information about the health of environment instances.",
        "privilege": "DescribeInstancesHealth",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a description of a platform version.",
        "privilege": "DescribePlatformVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "platform"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of the available solution stack names.",
        "privilege": "ListAvailableSolutionStacks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "solutionstack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of the available platform branches.",
        "privilege": "ListPlatformBranches",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of the available platforms.",
        "privilege": "ListPlatformVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "platform"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of tags of an Elastic Beanstalk resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "applicationversion"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurationtemplate"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "platform"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete and recreate all of the AWS resources for an environment and to force a restart.",
        "privilege": "RebuildEnvironment",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove tags from an Elastic Beanstalk resource.",
        "privilege": "RemoveTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "applicationversion"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurationtemplate"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "environment"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "platform"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to initiate a request to compile information of the deployed environment.",
        "privilege": "RequestEnvironmentInfo",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to request an environment to restart the application container server running on each Amazon EC2 instance.",
        "privilege": "RestartAppServer",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the compiled information from a RequestEnvironmentInfo request.",
        "privilege": "RetrieveEnvironmentInfo",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to swap the CNAMEs of two environments.",
        "privilege": "SwapEnvironmentCNAMEs",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment*"
          },
          {
            "condition_keys": [
              "elasticbeanstalk:FromEnvironment"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to terminate an environment.",
        "privilege": "TerminateEnvironment",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an application with specified properties.",
        "privilege": "UpdateApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the application version lifecycle policy associated with the application.",
        "privilege": "UpdateApplicationResourceLifecycle",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an application version with specified properties.",
        "privilege": "UpdateApplicationVersion",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "applicationversion*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a configuration template with specified properties or configuration option values.",
        "privilege": "UpdateConfigurationTemplate",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "configurationtemplate*"
          },
          {
            "condition_keys": [
              "elasticbeanstalk:FromApplication",
              "elasticbeanstalk:FromApplicationVersion",
              "elasticbeanstalk:FromConfigurationTemplate",
              "elasticbeanstalk:FromEnvironment",
              "elasticbeanstalk:FromSolutionStack",
              "elasticbeanstalk:FromPlatform"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an environment.",
        "privilege": "UpdateEnvironment",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment*"
          },
          {
            "condition_keys": [
              "elasticbeanstalk:FromApplicationVersion",
              "elasticbeanstalk:FromConfigurationTemplate",
              "elasticbeanstalk:FromSolutionStack",
              "elasticbeanstalk:FromPlatform"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to check the validity of a set of configuration settings for a configuration template or an environment.",
        "privilege": "ValidateConfigurationSettings",
        "resource_types": [
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "configurationtemplate"
          },
          {
            "condition_keys": [
              "elasticbeanstalk:InApplication"
            ],
            "dependent_actions": [],
            "resource_type": "environment"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:elasticbeanstalk:${Region}:${Account}:application/${ApplicationName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "application"
      },
      {
        "arn": "arn:${Partition}:elasticbeanstalk:${Region}:${Account}:applicationversion/${ApplicationName}/${VersionLabel}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "elasticbeanstalk:InApplication"
        ],
        "resource": "applicationversion"
      },
      {
        "arn": "arn:${Partition}:elasticbeanstalk:${Region}:${Account}:configurationtemplate/${ApplicationName}/${TemplateName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "elasticbeanstalk:InApplication"
        ],
        "resource": "configurationtemplate"
      },
      {
        "arn": "arn:${Partition}:elasticbeanstalk:${Region}:${Account}:environment/${ApplicationName}/${EnvironmentName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "elasticbeanstalk:InApplication"
        ],
        "resource": "environment"
      },
      {
        "arn": "arn:${Partition}:elasticbeanstalk:${Region}::solutionstack/${SolutionStackName}",
        "condition_keys": [],
        "resource": "solutionstack"
      },
      {
        "arn": "arn:${Partition}:elasticbeanstalk:${Region}::platform/${PlatformNameWithVersion}",
        "condition_keys": [],
        "resource": "platform"
      }
    ],
    "service_name": "AWS Elastic Beanstalk"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of mandatory tags in the request",
        "type": "String"
      },
      {
        "condition": "elasticfilesystem:AccessPointArn",
        "description": "The ARN of the access point used to mount the file system",
        "type": "String"
      }
    ],
    "prefix": "elasticfilesystem",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Starts a backup job for an existing file system.",
        "privilege": "Backup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Permission for allowing read-access to a file system.",
        "privilege": "ClientMount",
        "resource_types": [
          {
            "condition_keys": [
              "elasticfilesystem:AccessPointArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permission for allowing root-access to a file system.",
        "privilege": "ClientRootAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          },
          {
            "condition_keys": [
              "elasticfilesystem:AccessPointArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permission for allowing write-access to a file system.",
        "privilege": "ClientWrite",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          },
          {
            "condition_keys": [
              "elasticfilesystem:AccessPointArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an access point for the specified file system.",
        "privilege": "CreateAccessPoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a new, empty file system.",
        "privilege": "CreateFileSystem",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a mount target for a file system.",
        "privilege": "CreateMountTarget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates or overwrites tags associated with a file system.",
        "privilege": "CreateTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified access point.",
        "privilege": "DeleteAccessPoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "access-point*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a file system, permanently severing access to its contents.",
        "privilege": "DeleteFileSystem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Clears the resource-level policy for a given file system.",
        "privilege": "DeleteFileSystemPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified mount target.",
        "privilege": "DeleteMountTarget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Deletes the specified tags from a file system.",
        "privilege": "DeleteTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the descriptions of Amazon EFS access points.",
        "privilege": "DescribeAccessPoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the current resource-level policy for a given file system.",
        "privilege": "DescribeFileSystemPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the description of a specific Amazon EFS file system if either the file system CreationToken or the FileSystemId is provided; otherwise, returns descriptions of all file systems owned by the caller's AWS account in the AWS region of the endpoint that you're calling.",
        "privilege": "DescribeFileSystems",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the current LifecycleConfiguration object for the specified Amazon EFS file system.",
        "privilege": "DescribeLifecycleConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the security groups currently in effect for a mount target.",
        "privilege": "DescribeMountTargetSecurityGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the descriptions of all the current mount targets, or a specific mount target, for a file system.",
        "privilege": "DescribeMountTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the tags associated with a file system.",
        "privilege": "DescribeTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the tags associated with the specified Amazon EFS resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the set of security groups in effect for a mount target.",
        "privilege": "ModifyMountTargetSecurityGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Apply a resource-level policy granting and/or restricting actions from given actors for the specified file system.",
        "privilege": "PutFileSystemPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables lifecycle management by creating a new LifecycleConfiguration object.",
        "privilege": "PutLifecycleConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a restore job for an existing file system.",
        "privilege": "Restore",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates or overwrites tags associated with the specified Amazon EFS resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Deletes the specified tags from a specified Amazon EFS resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the throughput mode or the amount of provisioned throughput of an existing file system.",
        "privilege": "UpdateFileSystem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:elasticfilesystem:${Region}:${Account}:file-system/${FileSystemId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "file-system"
      },
      {
        "arn": "arn:${Partition}:elasticfilesystem:${Region}:${Account}:access-point/${AccessPointId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "access-point"
      }
    ],
    "service_name": "Amazon Elastic File System"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/tag-key",
        "description": "A key that is present in the request the user makes to the ELB service.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "The list of all the tag key names associated with the resource in the request.",
        "type": "String"
      },
      {
        "condition": "elasticloadbalancing:ResourceTag/tag-key",
        "description": "A tag key and value pair.",
        "type": "String"
      }
    ],
    "prefix": "elasticloadbalancing",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Adds the specified certificates to the specified secure listener.",
        "privilege": "AddListenerCertificates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener/app*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener/net*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds the specified tags to the specified load balancer. Each load balancer can have a maximum of 10 tags.",
        "privilege": "AddTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/app/"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/net/"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "targetgroup"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a listener for the specified Application Load Balancer.",
        "privilege": "CreateListener",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/app/"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/net/"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a load balancer.",
        "privilege": "CreateLoadBalancer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/app/"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/net/"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a rule for the specified listener.",
        "privilege": "CreateRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener/app*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener/net*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a target group.",
        "privilege": "CreateTargetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "targetgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified listener.",
        "privilege": "DeleteListener",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener/app*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener/net*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified load balancer.",
        "privilege": "DeleteLoadBalancer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/app/"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/net/"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified rule.",
        "privilege": "DeleteRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener-rule/app*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener-rule/net*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified target group.",
        "privilege": "DeleteTargetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "targetgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deregisters the specified targets from the specified target group.",
        "privilege": "DeregisterTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "targetgroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the Elastic Load Balancing resource limits for the AWS account.",
        "privilege": "DescribeAccountLimits",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the certificates for the specified secure listener.",
        "privilege": "DescribeListenerCertificates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified listeners or the listeners for the specified Application Load Balancer.",
        "privilege": "DescribeListeners",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the attributes for the specified load balancer.",
        "privilege": "DescribeLoadBalancerAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified the load balancers. If no load balancers are specified, the call describes all of your load balancers.",
        "privilege": "DescribeLoadBalancers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified rules or the rules for the specified listener.",
        "privilege": "DescribeRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified policies or all policies used for SSL negotiation.",
        "privilege": "DescribeSSLPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the tags associated with the specified load balancers.",
        "privilege": "DescribeTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the attributes for the specified target group.",
        "privilege": "DescribeTargetGroupAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified target groups or all of your target groups.",
        "privilege": "DescribeTargetGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the health of the specified targets or all of your targets.",
        "privilege": "DescribeTargetHealth",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the specified properties of the specified listener.",
        "privilege": "ModifyListener",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener/app*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener/net*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the attributes of the specified load balancer.",
        "privilege": "ModifyLoadBalancerAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/app/"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/net/"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the specified rule.",
        "privilege": "ModifyRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener-rule/app*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener-rule/net*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the health checks used when evaluating the health state of the targets in the specified target group.",
        "privilege": "ModifyTargetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "targetgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the specified attributes of the specified target group.",
        "privilege": "ModifyTargetGroupAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "targetgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers the specified targets with the specified target group.",
        "privilege": "RegisterTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "targetgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes the specified certificates of the specified secure listener.",
        "privilege": "RemoveListenerCertificates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener/app*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener/net*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes one or more tags from the specified load balancer.",
        "privilege": "RemoveTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/app/"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/net/"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "targetgroup"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Not found",
        "privilege": "SetIpAddressType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/app/"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/net/"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the priorities of the specified rules.",
        "privilege": "SetRulePriorities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener-rule/app*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener-rule/net*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates the specified security groups with the specified load balancer.",
        "privilege": "SetSecurityGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/app/"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/net/"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the Availability Zone for the specified subnets for the specified load balancer.",
        "privilege": "SetSubnets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/app/"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/net/"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Gives WebAcl permission to WAF",
        "privilege": "SetWebAcl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener/app/${LoadBalancerName}/${LoadBalancerId}/${ListenerId}",
        "condition_keys": [],
        "resource": "listener/app"
      },
      {
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener-rule/app/${LoadBalancerName}/${LoadBalancerId}/${ListenerId}/${ListenerRuleId}",
        "condition_keys": [],
        "resource": "listener-rule/app"
      },
      {
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener/net/${LoadBalancerName}/${LoadBalancerId}/${ListenerId}",
        "condition_keys": [],
        "resource": "listener/net"
      },
      {
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener-rule/net/${LoadBalancerName}/${LoadBalancerId}/${ListenerId}/${ListenerRuleId}",
        "condition_keys": [],
        "resource": "listener-rule/net"
      },
      {
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/app/${LoadBalancerName}/${LoadBalancerId}",
        "condition_keys": [
          "aws:RequestTag/tag-key",
          "aws:TagKeys",
          "elasticloadbalancing:ResourceTag/tag-key"
        ],
        "resource": "loadbalancer/app/"
      },
      {
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/net/${LoadBalancerName}/${LoadBalancerId}",
        "condition_keys": [
          "aws:RequestTag/tag-key",
          "aws:TagKeys",
          "elasticloadbalancing:ResourceTag/tag-key"
        ],
        "resource": "loadbalancer/net/"
      },
      {
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:targetgroup/${TargetGroupName}/${TargetGroupId}",
        "condition_keys": [
          "aws:RequestTag/tag-key",
          "aws:TagKeys",
          "elasticloadbalancing:ResourceTag/tag-key"
        ],
        "resource": "targetgroup"
      }
    ],
    "service_name": "Elastic Load Balancing V2"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/tag-key",
        "description": "A key that is present in the request the user makes to the ELB service.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "The list of all the tag key names associated with the resource in the request.",
        "type": "String"
      },
      {
        "condition": "elasticloadbalancing:ResourceTag/",
        "description": "The preface string for a tag key and value pair attached to a resource.",
        "type": "String"
      },
      {
        "condition": "elasticloadbalancing:ResourceTag/tag-key",
        "description": "A tag key and value pair.",
        "type": "String"
      }
    ],
    "prefix": "elasticloadbalancing",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "Adds the specified tags to the specified load balancer. Each load balancer can have a maximum of 10 tags.",
        "privilege": "AddTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates one or more security groups with your load balancer in a virtual private cloud (VPC).",
        "privilege": "ApplySecurityGroupsToLoadBalancer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds one or more subnets to the set of configured subnets for the specified load balancer.",
        "privilege": "AttachLoadBalancerToSubnets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Specifies the health check settings to use when evaluating the health state of your back-end instances.",
        "privilege": "ConfigureHealthCheck",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Generates a stickiness policy with sticky session lifetimes that follow that of an application-generated cookie.",
        "privilege": "CreateAppCookieStickinessPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Generates a stickiness policy with sticky session lifetimes controlled by the lifetime of the browser (user-agent) or a specified expiration period.",
        "privilege": "CreateLBCookieStickinessPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a load balancer.",
        "privilege": "CreateLoadBalancer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates one or more listeners for the specified load balancer.",
        "privilege": "CreateLoadBalancerListeners",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a policy with the specified attributes for the specified load balancer.",
        "privilege": "CreateLoadBalancerPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified load balancer.",
        "privilege": "DeleteLoadBalancer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified listeners from the specified load balancer.",
        "privilege": "DeleteLoadBalancerListeners",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified policy from the specified load balancer. This policy must not be enabled for any listeners.",
        "privilege": "DeleteLoadBalancerPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deregisters the specified instances from the specified load balancer.",
        "privilege": "DeregisterInstancesFromLoadBalancer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the state of the specified instances with respect to the specified load balancer.",
        "privilege": "DescribeInstanceHealth",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the attributes for the specified load balancer.",
        "privilege": "DescribeLoadBalancerAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified policies.",
        "privilege": "DescribeLoadBalancerPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified load balancer policy types.",
        "privilege": "DescribeLoadBalancerPolicyTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the specified the load balancers. If no load balancers are specified, the call describes all of your load balancers.",
        "privilege": "DescribeLoadBalancers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the tags associated with the specified load balancers.",
        "privilege": "DescribeTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes the specified subnets from the set of configured subnets for the load balancer.",
        "privilege": "DetachLoadBalancerFromSubnets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes the specified Availability Zones from the set of Availability Zones for the specified load balancer.",
        "privilege": "DisableAvailabilityZonesForLoadBalancer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds the specified Availability Zones to the set of Availability Zones for the specified load balancer.",
        "privilege": "EnableAvailabilityZonesForLoadBalancer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the attributes of the specified load balancer.",
        "privilege": "ModifyLoadBalancerAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds the specified instances to the specified load balancer.",
        "privilege": "RegisterInstancesWithLoadBalancer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes one or more tags from the specified load balancer.",
        "privilege": "RemoveTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the certificate that terminates the specified listener's SSL connections.",
        "privilege": "SetLoadBalancerListenerSSLCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Replaces the set of policies associated with the specified port on which the back-end server is listening with a new set of policies.",
        "privilege": "SetLoadBalancerPoliciesForBackendServer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Replaces the current set of policies for the specified load balancer port with the specified set of policies.",
        "privilege": "SetLoadBalancerPoliciesOfListener",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener/${LoadBalancerName}/${LoadBalancerId}/${ListenerId}",
        "condition_keys": [],
        "resource": "listener"
      },
      {
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/${LoadBalancerName}",
        "condition_keys": [
          "aws:RequestTag/tag-key",
          "aws:TagKeys",
          "elasticloadbalancing:ResourceTag/tag-key"
        ],
        "resource": "loadbalancer"
      }
    ],
    "service_name": "Elastic Load Balancing"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters access based on whether the tag and value pair is provided with the action",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters access based on the tag and value pair associated with an Amazon EMR resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters access based on whether the tag keys are provided with the action regardless of tag value",
        "type": "String"
      },
      {
        "condition": "elasticmapreduce:RequestTag/${TagKey}",
        "description": "Filters actions based on whether the tag and value pair is provided with the action",
        "type": "String"
      },
      {
        "condition": "elasticmapreduce:ResourceTag/${TagKey}",
        "description": "Filters actions based on the tag and value pair associated with an Amazon EMR resource",
        "type": "String"
      }
    ],
    "prefix": "elasticmapreduce",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to add an instance fleet to a running cluster.",
        "privilege": "AddInstanceFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add instance groups to a running cluster.",
        "privilege": "AddInstanceGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add new steps to a running cluster.",
        "privilege": "AddJobFlowSteps",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add tags to an Amazon EMR resource.",
        "privilege": "AddTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "editor"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "elasticmapreduce:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to cancel a pending step or steps in a running cluster.",
        "privilege": "CancelSteps",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an EMR notebook.",
        "privilege": "CreateEditor",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "elasticmapreduce:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a security configuration.",
        "privilege": "CreateSecurityConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an EMR notebook.",
        "privilege": "DeleteEditor",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "editor*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a security configuration.",
        "privilege": "DeleteSecurityConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details about a cluster, including status, hardware and software configuration, VPC settings, and so on.",
        "privilege": "DescribeCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view information about a notebook, including status, user, role, tags, location, and more.",
        "privilege": "DescribeEditor",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "editor*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This API is deprecated and will eventually be removed. We recommend you use ListClusters, DescribeCluster, ListSteps, ListInstanceGroups and ListBootstrapActions instead.",
        "privilege": "DescribeJobFlows",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details of a security configuration.",
        "privilege": "DescribeSecurityConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details about a cluster step.",
        "privilege": "DescribeStep",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the EMR block public access configuration for the AWS account in the Region.",
        "privilege": "GetBlockPublicAccessConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details about the bootstrap actions associated with a cluster.",
        "privilege": "ListBootstrapActions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get the status of accessible clusters.",
        "privilege": "ListClusters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list summary information for accessible EMR notebooks.",
        "privilege": "ListEditors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details of instance fleets in a cluster.",
        "privilege": "ListInstanceFleets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details of instance groups in a cluster.",
        "privilege": "ListInstanceGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details about the Amazon EC2 instances in a cluster.",
        "privilege": "ListInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list available security configurations in this account by name, along with creation dates and times.",
        "privilege": "ListSecurityConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list steps associated with a cluster.",
        "privilege": "ListSteps",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change cluster settings such as number of steps that can be executed concurrently for a cluster.",
        "privilege": "ModifyCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change the target On-Demand and target Spot capacities for a instance fleet.",
        "privilege": "ModifyInstanceFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change the number and configuration of EC2 instances for an instance group.",
        "privilege": "ModifyInstanceGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to launch the Jupyter notebook editor for an EMR notebook from within the console.",
        "privilege": "OpenEditorInConsole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "editor*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create or update an automatic scaling policy for a core instance group or task instance group.",
        "privilege": "PutAutoScalingPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to create or update the EMR block public access configuration for the AWS account in the Region.",
        "privilege": "PutBlockPublicAccessConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove an automatic scaling policy from an instance group.",
        "privilege": "RemoveAutoScalingPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove tags from an Amazon EMR resource.",
        "privilege": "RemoveTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "editor"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create and launch a cluster (job flow).",
        "privilege": "RunJobFlow",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "elasticmapreduce:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add and remove termination protection for a cluster.",
        "privilege": "SetTerminationProtection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start an EMR notebook.",
        "privilege": "StartEditor",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "editor*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to shut down an EMR notebook.",
        "privilege": "StopEditor",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "editor*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to terminate a cluster (job flow).",
        "privilege": "TerminateJobFlows",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to use the EMR management console to view events from all clusters.",
        "privilege": "ViewEventsFromAllClustersInConsole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:elasticmapreduce:${Region}:${Account}:cluster/${ClusterId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "elasticmapreduce:ResourceTag/${TagKey}"
        ],
        "resource": "cluster"
      },
      {
        "arn": "arn:${Partition}:elasticmapreduce:${Region}:${Account}:editor/${EditorId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "elasticmapreduce:ResourceTag/${TagKey}"
        ],
        "resource": "editor"
      }
    ],
    "service_name": "Amazon Elastic MapReduce"
  },
  {
    "conditions": [],
    "prefix": "elastictranscoder",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Cancel a job that Elastic Transcoder has not begun to process",
        "privilege": "CancelJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a job.",
        "privilege": "CreateJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "preset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a pipeline",
        "privilege": "CreatePipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a preset.",
        "privilege": "CreatePreset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "preset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a pipeline",
        "privilege": "DeletePipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a preset",
        "privilege": "DeletePreset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "preset*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get a list of the jobs that you assigned to a pipeline",
        "privilege": "ListJobsByPipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get information about all of the jobs associated with the current AWS account that have a specified status",
        "privilege": "ListJobsByStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get a list of the pipelines associated with the current AWS account",
        "privilege": "ListPipelines",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get a list of all presets associated with the current AWS account.",
        "privilege": "ListPresets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get detailed information about a job",
        "privilege": "ReadJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get detailed information about a pipeline",
        "privilege": "ReadPipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get detailed information about a preset.",
        "privilege": "ReadPreset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "preset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Test the settings for a pipeline to ensure that Elastic Transcoder can create and process jobs",
        "privilege": "TestRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update settings for a pipeline",
        "privilege": "UpdatePipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update only Amazon Simple Notification Service (Amazon SNS) notifications for a pipeline",
        "privilege": "UpdatePipelineNotifications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Pause or reactivate a pipeline, so the pipeline stops or restarts processing jobs, update the status for the pipeline.",
        "privilege": "UpdatePipelineStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:elastictranscoder:${Region}:${Account}:job/${JobId}",
        "condition_keys": [],
        "resource": "job"
      },
      {
        "arn": "arn:${Partition}:elastictranscoder:${Region}:${Account}:pipeline/${PipelineId}",
        "condition_keys": [],
        "resource": "pipeline"
      },
      {
        "arn": "arn:${Partition}:elastictranscoder:${Region}:${Account}:preset/${PresetId}",
        "condition_keys": [],
        "resource": "preset"
      }
    ],
    "service_name": "Amazon Elastic Transcoder"
  },
  {
    "conditions": [],
    "prefix": "es",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "Grants permission to attach resource tags to an Amazon ES domain.",
        "privilege": "AddTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an Amazon ES domain.",
        "privilege": "CreateElasticsearchDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create the service-linked role required for Amazon ES domains that use VPC access.",
        "privilege": "CreateElasticsearchServiceRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an Amazon ES domain and all of its data.",
        "privilege": "DeleteElasticsearchDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the service-linked role required for Amazon ES domains that use VPC access.",
        "privilege": "DeleteElasticsearchServiceRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view a description of the domain configuration for the specified Amazon ES domain, including the domain ID, domain service endpoint, and domain ARN.",
        "privilege": "DescribeElasticsearchDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view a description of the configuration options and status of an Amazon ES domain.",
        "privilege": "DescribeElasticsearchDomainConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view a description of the domain configuration for up to five specified Amazon ES domains.",
        "privilege": "DescribeElasticsearchDomains",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view the instance count, storage, and master node limits for a given Elasticsearch version and instance type.",
        "privilege": "DescribeElasticsearchInstanceTypeLimits",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to fetch reserved instance offerings for ES",
        "privilege": "DescribeReservedElasticsearchInstanceOfferings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to fetch ES reserved instances already purchased by customer",
        "privilege": "DescribeReservedElasticsearchInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to send HTTP DELETE requests to the Elasticsearch APIs.",
        "privilege": "ESHttpDelete",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to send HTTP GET requests to the Elasticsearch APIs.",
        "privilege": "ESHttpGet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to send HTTP HEAD requests to the Elasticsearch APIs.",
        "privilege": "ESHttpHead",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to send HTTP PATCH requests to the Elasticsearch APIs.",
        "privilege": "ESHttpPatch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to send HTTP POST requests to the Elasticsearch APIs.",
        "privilege": "ESHttpPost",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to send HTTP PUT requests to the Elasticsearch APIs.",
        "privilege": "ESHttpPut",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to fetch list of compatible elastic search versions to which Amazon ES domain can be upgraded",
        "privilege": "GetCompatibleElasticsearchVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to fetch upgrade history for given ES domain",
        "privilege": "GetUpgradeHistory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to fetch upgrade status for given ES domain",
        "privilege": "GetUpgradeStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to display the names of all Amazon ES domains that the current user owns.",
        "privilege": "ListDomainNames",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all instance types and available features for a given Elasticsearch version.",
        "privilege": "ListElasticsearchInstanceTypeDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all Elasticsearch instance types that are supported for a given Elasticsearch version.",
        "privilege": "ListElasticsearchInstanceTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all supported Elasticsearch versions on Amazon ES.",
        "privilege": "ListElasticsearchVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to display all of the tags for an Amazon ES domain.",
        "privilege": "ListTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to purchase ES reserved instances",
        "privilege": "PurchaseReservedElasticsearchInstanceOffering",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove tags from Amazon ES domains.",
        "privilege": "RemoveTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the configuration of an Amazon ES domain, such as the instance type or number of instances.",
        "privilege": "UpdateElasticsearchDomainConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to initiate upgrade of elastic search domain to given version",
        "privilege": "UpgradeElasticsearchDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:es:${Region}:${Account}:domain/${DomainName}",
        "condition_keys": [],
        "resource": "domain"
      }
    ],
    "service_name": "Amazon Elasticsearch Service"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value associated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of mandatory tags in the request",
        "type": "String"
      },
      {
        "condition": "events:TargetArn",
        "description": "The ARN of a target that can be put to a rule.",
        "type": "ARN"
      },
      {
        "condition": "events:detail-type",
        "description": "Matches the literal string of the detail-type filed of the event.",
        "type": "String"
      },
      {
        "condition": "events:detail.eventTypeCode",
        "description": "Matches the literal string for the detail.eventTypeCode field of the event.",
        "type": "String"
      },
      {
        "condition": "events:detail.service",
        "description": "Matches the literal string for the detail.service field of the event.",
        "type": "String"
      },
      {
        "condition": "events:detail.userIdentity.principalId",
        "description": "Matches the literal string for the detail.useridentity.principalid field of the event.",
        "type": "String"
      },
      {
        "condition": "events:source",
        "description": "The AWS service or AWS partner event source that generated the event. Matches the literal string of the source field of the event.",
        "type": "String"
      }
    ],
    "prefix": "events",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Activates a partner event source that has been deactivated. Once activated, your matching event bus will start receiving events from the event source.",
        "privilege": "ActivateEventSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event-source*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new event bus within your account. This can be a custom event bus which you can use to receive events from your own custom applications and services, or it can be a partner event bus which can be matched to a partner event source.",
        "privilege": "CreateEventBus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event-bus*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Called by an AWS partner to create a partner event source.",
        "privilege": "CreatePartnerEventSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event-source*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Called by an AWS partner to create a partner event source.",
        "privilege": "DeactivateEventSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event-source*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified custom event bus or partner event bus. All rules associated with this event bus are also deleted. You can't delete your account's default event bus.",
        "privilege": "DeleteEventBus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event-bus*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Called by an AWS partner to delete a partner event source.",
        "privilege": "DeletePartnerEventSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event-source*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a rule. You must remove all targets from a rule using RemoveTargets before you can delete the rule.",
        "privilege": "DeleteRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Displays the external AWS accounts that are permitted to write events to your account using your account's event bus, and the associated policy.",
        "privilege": "DescribeEventBus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event-bus"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the details of the specified partner event source that is shared with your account.",
        "privilege": "DescribeEventSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event-source*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Called by an AWS partner describe the details of the specified partner event source that they have created.",
        "privilege": "DescribePartnerEventSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event-source*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the details of the specified rule.",
        "privilege": "DescribeRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disables a rule. A disabled rule won't match any events, and won't self-trigger if it has a schedule expression.",
        "privilege": "DisableRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables a rule. If the rule does not exist, the operation fails.",
        "privilege": "EnableRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the event buses in your account, including the default event bus, custom event buses, and partner event buses.",
        "privilege": "ListEventBuses",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event-bus*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the event sources shared with this account.",
        "privilege": "ListEventSources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event-source*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Called by an AWS partner to display the AWS account ID that the specified partner event source is associated with.",
        "privilege": "ListPartnerEventSourceAccounts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event-source*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Called by an AWS partner to list all the partner event sources that they have created.",
        "privilege": "ListPartnerEventSources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event-source*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the names of the rules that the given target is put to.",
        "privilege": "ListRuleNamesByTarget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the Amazon EventBridge rules in your account.",
        "privilege": "ListRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "This action lists tags for an Amazon EventBridge resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event-bus"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists of targets assigned to the rule.",
        "privilege": "ListTargetsByRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sends custom events to Amazon EventBridge so that they can be matched to rules.",
        "privilege": "PutEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sends custom events to Amazon EventBridge so that they can be matched to rules.",
        "privilege": "PutPartnerEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Running PutPermission permits the specified AWS account to put events to your account's default event bus.",
        "privilege": "PutPermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates or updates a rule. Rules are enabled by default, or based on value of the State parameter.",
        "privilege": "PutRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          },
          {
            "condition_keys": [
              "events:detail.userIdentity.principalId",
              "events:detail-type",
              "events:source",
              "events:detail.service",
              "events:detail.eventTypeCode",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds target(s) to a rule. Targets are the resources that can be invoked when a rule is triggered.",
        "privilege": "PutTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          },
          {
            "condition_keys": [
              "events:TargetArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Revokes the permission of another AWS account to be able to put events to your default event bus.",
        "privilege": "RemovePermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes target(s) from a rule so that when the rule is triggered, those targets will no longer be invoked.",
        "privilege": "RemoveTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action tags an Amazon EventBridge resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event-bus"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Tests whether an event pattern matches the provided event.",
        "privilege": "TestEventPattern",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action removes a tag from an Amazon EventBridge resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event-bus"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:events:${Region}::event-source/${EventSourceName}",
        "condition_keys": [],
        "resource": "event-source"
      },
      {
        "arn": "arn:${Partition}:events:${Region}:${Account}:event-bus/${EventBusName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "event-bus"
      },
      {
        "arn": "arn:${Partition}:events:${Region}:${Account}:rule/[${EventBusName}/]${RuleName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "rule"
      }
    ],
    "service_name": "Amazon EventBridge"
  },
  {
    "conditions": [],
    "prefix": "execute-api",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Used to invalidate API cache upon a client request",
        "privilege": "InvalidateCache",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "execute-api-general*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used to invoke an API upon a client request",
        "privilege": "Invoke",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "execute-api-general*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "ManageConnections controls access to the @connections API",
        "privilege": "ManageConnections",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "execute-api-general*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:execute-api:${Region}:${Account}:${ApiId}/${Stage}/${Method}/${ApiSpecificResourcePath}",
        "condition_keys": [],
        "resource": "execute-api-general"
      }
    ],
    "service_name": "Amazon API Gateway"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters create requests based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value associated with the resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters create requests based on the presence of mandatory tags in the request",
        "type": "String"
      }
    ],
    "prefix": "firehose",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a delivery stream.",
        "privilege": "CreateDeliveryStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deliverystream*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a delivery stream and its data.",
        "privilege": "DeleteDeliveryStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deliverystream*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the specified delivery stream and gets the status.",
        "privilege": "DescribeDeliveryStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deliverystream*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists your delivery streams.",
        "privilege": "ListDeliveryStreams",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the tags for the specified delivery stream.",
        "privilege": "ListTagsForDeliveryStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deliverystream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Writes a single data record into an Amazon Kinesis Firehose delivery stream.",
        "privilege": "PutRecord",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deliverystream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Writes multiple data records into a delivery stream in a single call, which can achieve higher throughput per producer than when writing single records.",
        "privilege": "PutRecordBatch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deliverystream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables server-side encryption (SSE) for the delivery stream.",
        "privilege": "StartDeliveryStreamEncryption",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deliverystream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disables the specified destination of the specified delivery stream.",
        "privilege": "StopDeliveryStreamEncryption",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deliverystream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds or updates tags for the specified delivery stream.",
        "privilege": "TagDeliveryStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deliverystream*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes tags from the specified delivery stream.",
        "privilege": "UntagDeliveryStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deliverystream*"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified destination of the specified delivery stream.",
        "privilege": "UpdateDestination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deliverystream*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:firehose:${Region}:${Account}:deliverystream/${DeliveryStreamName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "deliverystream"
      }
    ],
    "service_name": "Amazon Kinesis Firehose"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value assoicated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of mandatory tags in the request",
        "type": "String"
      }
    ],
    "prefix": "fms",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Sets the AWS Firewall Manager administrator account and enables the service in all organization accounts",
        "privilege": "AssociateAdminAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an AWS Firewall Manager association with the IAM role and the Amazon Simple Notification Service (SNS) topic that is used to notify the FM administrator about major FM events and errors across the organization.",
        "privilege": "DeleteNotificationChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes an AWS Firewall Manager policy.",
        "privilege": "DeletePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates the account that has been set as the AWS Firewall Manager administrator account and and disables the service in all organization accounts",
        "privilege": "DisassociateAdminAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the AWS Organizations master account that is associated with AWS Firewall Manager as the AWS Firewall Manager administrator.",
        "privilege": "GetAdminAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns detailed compliance information about the specified member account. Details include resources that are in and out of compliance with the specified policy.",
        "privilege": "GetComplianceDetail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the Amazon Simple Notification Service (SNS) topic that is used to record AWS Firewall Manager SNS logs.",
        "privilege": "GetNotificationChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the specified AWS Firewall Manager policy.",
        "privilege": "GetPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns policy-level attack summary information in the event of a potential DDoS attack.",
        "privilege": "GetProtectionStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of PolicyComplianceStatus objects in the response. Use PolicyComplianceStatus to get a summary of which member accounts are protected by the specified policy.",
        "privilege": "ListComplianceStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of member account ids if the caller is FMS admin account.",
        "privilege": "ListMemberAccounts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of PolicySummary objects in the response.",
        "privilege": "ListPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the Tags for a given resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Designates the IAM role and Amazon Simple Notification Service (SNS) topic that AWS Firewall Manager (FM) could use to notify the FM administrator about major FM events and errors across the organization.",
        "privilege": "PutNotificationChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an AWS Firewall Manager policy.",
        "privilege": "PutPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds a Tag to a given resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes a Tag from a given resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:fms:${Region}:${Account}:policy/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "policy"
      }
    ],
    "service_name": "AWS Firewall Manager"
  },
  {
    "conditions": [],
    "prefix": "forecast",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a dataset",
        "privilege": "CreateDataset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a dataset group",
        "privilege": "CreateDatasetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasetGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a dataset import job",
        "privilege": "CreateDatasetImportJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasetImportJob*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a forecast",
        "privilege": "CreateForecast",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "predictor*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a forecast export job",
        "privilege": "CreateForecastExportJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "forecast*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a predictor",
        "privilege": "CreatePredictor",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasetGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a dataset",
        "privilege": "DeleteDataset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a dataset group",
        "privilege": "DeleteDatasetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasetGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a dataset import job",
        "privilege": "DeleteDatasetImportJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasetImportJob*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a forecast",
        "privilege": "DeleteForecast",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "forecast*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a forecast export job",
        "privilege": "DeleteForecastExportJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "forecastExport*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a predictor",
        "privilege": "DeletePredictor",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "predictor*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a dataset",
        "privilege": "DescribeDataset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a dataset group",
        "privilege": "DescribeDatasetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasetGroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a dataset import job",
        "privilege": "DescribeDatasetImportJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasetImportJob*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a forecast",
        "privilege": "DescribeForecast",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "forecast*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a forecast export job",
        "privilege": "DescribeForecastExportJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "forecastExport*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a predictor",
        "privilege": "DescribePredictor",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "predictor*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets Accuracy Metrics for a predictor",
        "privilege": "GetAccuracyMetrics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "predictor*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists dataset groups",
        "privilege": "ListDatasetGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists dataset import jobs",
        "privilege": "ListDatasetImportJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists datasets",
        "privilege": "ListDatasets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists forecast export jobs",
        "privilege": "ListForecastExportJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists forecasts",
        "privilege": "ListForecasts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists predictors",
        "privilege": "ListPredictors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a forecast for a single item",
        "privilege": "QueryForecast",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "forecast*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a dataset group",
        "privilege": "UpdateDatasetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasetGroup*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:dataset/${ResourceId}",
        "condition_keys": [],
        "resource": "dataset"
      },
      {
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:dataset-group/${ResourceId}",
        "condition_keys": [],
        "resource": "datasetGroup"
      },
      {
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:dataset-import-job/${ResourceId}",
        "condition_keys": [],
        "resource": "datasetImportJob"
      },
      {
        "arn": "arn:${Partition}:forecast:::algorithm/${ResourceId}",
        "condition_keys": [],
        "resource": "algorithm"
      },
      {
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:predictor/${ResourceId}",
        "condition_keys": [],
        "resource": "predictor"
      },
      {
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:forecast/${ResourceId}",
        "condition_keys": [],
        "resource": "forecast"
      },
      {
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:forecast-export-job/${ResourceId}",
        "condition_keys": [],
        "resource": "forecastExport"
      }
    ],
    "service_name": "Amazon Forecast"
  },
  {
    "conditions": [],
    "prefix": "frauddetector",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a batch of variables.",
        "privilege": "BatchCreateVariable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets a batch of variables.",
        "privilege": "BatchGetVariable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a detector version. The detector version starts in a DRAFT status.",
        "privilege": "CreateDetectorVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a version of the model using the specified model type.",
        "privilege": "CreateModelVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a rule for use with the specified detector.",
        "privilege": "CreateRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a variable.",
        "privilege": "CreateVariable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the detector. Before deleting a detector, you must first delete all detector versions and rule versions associated with the detector.",
        "privilege": "DeleteDetector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the detector version. You cannot delete detector versions that are in ACTIVE status.",
        "privilege": "DeleteDetectorVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified event.",
        "privilege": "DeleteEvent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the rule version. You cannot delete a rule version if it is used by an ACTIVE or INACTIVE detector version.",
        "privilege": "DeleteRuleVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets all versions for a specified detector.",
        "privilege": "DescribeDetector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets all of the model versions for the specified model type or for the specified model type and model ID. You can also get details for a single, specified model version.",
        "privilege": "DescribeModelVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets a particular detector version.",
        "privilege": "GetDetectorVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets all of detectors. This is a paginated API. If you provide a null maxSizePerPage, this actions retrieves a maximum of 10 records per page. If you provide a maxSizePerPage, the value must be between 5 and 10. To get the next page results, provide the pagination token from the GetEventTypesResponse as part of your request. A null pagination token fetches the records from the beginning.",
        "privilege": "GetDetectors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets the details for one or more Amazon SageMaker models that have been imported into the service. This is a paginated API. If you provide a null maxSizePerPage, this actions retrieves a maximum of 10 records per page. If you provide a maxSizePerPage, the value must be between 5 and 10. To get the next page results, provide the pagination token from the GetExternalModelsResult as part of your request. A null pagination token fetches the records from the beginning.",
        "privilege": "GetExternalModels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets a model version.",
        "privilege": "GetModelVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets all of the models for the AWS account, or the specified model type, or gets a single model for the specified model type, model ID combination.",
        "privilege": "GetModels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets one or more outcomes. This is a paginated API. If you provide a null maxSizePerPage, this actions retrieves a maximum of 10 records per page. If you provide a maxSizePerPage, the value must be between 50 and 100. To get the next page results, provide the pagination token from the GetOutcomesResult as part of your request. A null pagination token fetches the records from the beginning.",
        "privilege": "GetOutcomes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Evaluates an event against a detector version. If a version ID is not provided, the detector\u2019s (ACTIVE) version is used.",
        "privilege": "GetPrediction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets all rules available for the specified detector.",
        "privilege": "GetRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets all of the variables or the specific variable. This is a paginated API. Providing null maxSizePerPage results in retrieving maximum of 100 records per page. If you provide maxSizePerPage the value must be between 50 and 100. To get the next page result, a provide a pagination token from GetVariablesResult as part of your request. Null pagination token fetches the records from the beginning.",
        "privilege": "GetVariables",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates a detector.",
        "privilege": "PutDetector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates an Amazon SageMaker model endpoint. You can also use this action to update the configuration of the model endpoint, including the IAM role and/or the mapped variables.",
        "privilege": "PutExternalModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates a model.",
        "privilege": "PutModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates an outcome.",
        "privilege": "PutOutcome",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a detector version. The detector version attributes that you can update include models, external model endpoints, rules, and description. You can only update a DRAFT detector version.",
        "privilege": "UpdateDetectorVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the detector version's description. You can update the metadata for any detector version (DRAFT, ACTIVE, or INACTIVE).",
        "privilege": "UpdateDetectorVersionMetadata",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the detector version\u2019s status. You can perform the following promotions or demotions using UpdateDetectorVersionStatus: DRAFT to ACTIVE, ACTIVE to INACTIVE, and INACTIVE to ACTIVE.",
        "privilege": "UpdateDetectorVersionStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a model version. You can update the description and status attributes using this action.",
        "privilege": "UpdateModelVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a rule's metadata.",
        "privilege": "UpdateRuleMetadata",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a rule version resulting in a new rule version.",
        "privilege": "UpdateRuleVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a variable.",
        "privilege": "UpdateVariable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon Fraud Detector"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "A tag key that is present in the request that the user makes to Amazon FreeRTOS.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "The tag key component of a tag attached to an Amazon FreeRTOS resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "The list of all the tag key names associated with the resource in the request.",
        "type": "String"
      }
    ],
    "prefix": "freertos",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a software configuration.",
        "privilege": "CreateSoftwareConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the software configuration.",
        "privilege": "DeleteSoftwareConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the hardware platform.",
        "privilege": "DescribeHardwarePlatform",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the software configuration.",
        "privilege": "DescribeSoftwareConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the URL for Amazon FreeRTOS software download.",
        "privilege": "GetSoftwareURL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the URL for Amazon FreeRTOS software download based on the configuration.",
        "privilege": "GetSoftwareURLForConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists versions of AmazonFreeRTOS.",
        "privilege": "ListFreeRTOSVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the hardware platforms.",
        "privilege": "ListHardwarePlatforms",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the hardware vendors.",
        "privilege": "ListHardwareVendors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the software configurations.",
        "privilege": "ListSoftwareConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the software configuration.",
        "privilege": "UpdateSoftwareConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:freertos:${Region}:${Account}:configuration/${configurationName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "configuration"
      }
    ],
    "service_name": "Amazon FreeRTOS"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "",
        "type": "String"
      }
    ],
    "prefix": "fsx",
    "privileges": [
      {
        "access_level": "Write",
        "description": "This action cancels a data repository task",
        "privilege": "CancelDataRepositoryTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action creates a new backup.",
        "privilege": "CreateBackup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backup*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action creates a new task.",
        "privilege": "CreateDataRepositoryTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action creates a new, empty, Amazon FSx file system",
        "privilege": "CreateFileSystem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action creates a new Amazon FSx file system from an existing backup.",
        "privilege": "CreateFileSystemFromBackup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backup*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action deletes a backup, deleting its contents. After deletion, the backup no longer exists, and its data is gone.",
        "privilege": "DeleteBackup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action deletes a file system, deleting its contents.",
        "privilege": "DeleteFileSystem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This action returns the description of specific Amazon FSx backups, if one or more BackupIds are provided for that backup. Otherwise, it returns all backups owned by your AWS account in the AWS Region of the endpoint that you're calling.",
        "privilege": "DescribeBackups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This action returns the description of specific Amazon FSx data repository task, if one or more TaskIds are provided for that data repository task. Otherwise, it returns all data repository task owned by your AWS account in the AWS Region of the endpoint that you're calling.",
        "privilege": "DescribeDataRepositoryTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This action returns the description of specific Amazon FSx file systems, if a FileSystemIds value is provided for that file system. Otherwise, it returns descriptions of all file systems owned by your AWS account in the AWS Region of the endpoint that you're calling.",
        "privilege": "DescribeFileSystems",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This action lists tags for an Amazon FSx resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action tags an Amazon FSx resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action removes a tag from an Amazon FSx resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "backup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "task"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action updates file system configuration.",
        "privilege": "UpdateFileSystem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "file-system*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:fsx:${Region}:${Account}:file-system/*",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "file-system"
      },
      {
        "arn": "arn:${Partition}:fsx:${Region}:${Account}:backup/*",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "backup"
      },
      {
        "arn": "arn:${Partition}:fsx:${Region}:${Account}:task/*",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "task"
      }
    ],
    "service_name": "Amazon FSx"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the tags that are passed in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on the tags associated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the tag keys that are passed in the request",
        "type": "String"
      }
    ],
    "prefix": "gamelift",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Registers player acceptance or rejection of a proposed FlexMatch match.",
        "privilege": "AcceptMatch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Defines a new alias for a fleet.",
        "privilege": "CreateAlias",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new game build using files stored in an Amazon S3 bucket.",
        "privilege": "CreateBuild",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new fleet of computing resources to run your game servers.",
        "privilege": "CreateFleet",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a new game session on a specified fleet.",
        "privilege": "CreateGameSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets up a new queue for processing new game session placement requests.",
        "privilege": "CreateGameSessionQueue",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new FlexMatch matchmaker.",
        "privilege": "CreateMatchmakingConfiguration",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new matchmaking rule set for FlexMatch.",
        "privilege": "CreateMatchmakingRuleSet",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Reserves an available game session slot for a player.",
        "privilege": "CreatePlayerSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Reserves available game session slots for multiple players.",
        "privilege": "CreatePlayerSessions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new Realtime Servers script.",
        "privilege": "CreateScript",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows GameLift to create or delete a peering connection between a GameLift fleet VPC and a VPC on another AWS account.",
        "privilege": "CreateVpcPeeringAuthorization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Establishes a peering connection between your GameLift fleet VPC and a VPC on another account.",
        "privilege": "CreateVpcPeeringConnection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an alias.",
        "privilege": "DeleteAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alias*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a game build.",
        "privilege": "DeleteBuild",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "build*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an empty fleet.",
        "privilege": "DeleteFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing game session queue.",
        "privilege": "DeleteGameSessionQueue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gameSessionQueue*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing FlexMatch matchmaker.",
        "privilege": "DeleteMatchmakingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "matchmakingConfiguration*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing FlexMatch matchmaking rule set.",
        "privilege": "DeleteMatchmakingRuleSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "matchmakingRuleSet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a set of auto-scaling rules.",
        "privilege": "DeleteScalingPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a Realtime Servers script.",
        "privilege": "DeleteScript",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "script*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancels a VPC peering authorization.",
        "privilege": "DeleteVpcPeeringAuthorization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes a peering connection between VPCs.",
        "privilege": "DeleteVpcPeeringConnection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves properties for an alias.",
        "privilege": "DescribeAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alias*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves properties for a game build.",
        "privilege": "DescribeBuild",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "build*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the maximum allowed and current usage for EC2 instance types.",
        "privilege": "DescribeEC2InstanceLimits",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves general properties, including status, for fleets.",
        "privilege": "DescribeFleetAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the current capacity setting for fleets.",
        "privilege": "DescribeFleetCapacity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves entries from a fleet's event log.",
        "privilege": "DescribeFleetEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the inbound connection permissions for a fleet.",
        "privilege": "DescribeFleetPortSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves utilization statistics for fleets.",
        "privilege": "DescribeFleetUtilization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves properties for game sessions in a fleet, including the protection policy.",
        "privilege": "DescribeGameSessionDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves details of a game session placement request.",
        "privilege": "DescribeGameSessionPlacement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves properties for game session queues.",
        "privilege": "DescribeGameSessionQueues",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves properties for game sessions in a fleet.",
        "privilege": "DescribeGameSessions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves information about instances in a fleet.",
        "privilege": "DescribeInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves details of matchmaking tickets.",
        "privilege": "DescribeMatchmaking",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves properties for FlexMatch matchmakers.",
        "privilege": "DescribeMatchmakingConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves properties for FlexMatch matchmaking rule sets.",
        "privilege": "DescribeMatchmakingRuleSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves properties for player sessions in a game session.",
        "privilege": "DescribePlayerSessions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the current runtime configuration for a fleet.",
        "privilege": "DescribeRuntimeConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves all scaling policies that are applied to a fleet.",
        "privilege": "DescribeScalingPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves properties for a Realtime Servers script.",
        "privilege": "DescribeScript",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "script*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves valid VPC peering authorizations.",
        "privilege": "DescribeVpcPeeringAuthorizations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves details on active or pending VPC peering connections.",
        "privilege": "DescribeVpcPeeringConnections",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the location of stored logs for a game session.",
        "privilege": "GetGameSessionLogUrl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Requests remote access to a specified fleet instance.",
        "privilege": "GetInstanceAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves all aliases that are defined in the current region.",
        "privilege": "ListAliases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves all game build in the current region.",
        "privilege": "ListBuilds",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves a list of fleet IDs for all fleets in the current region.",
        "privilege": "ListFleets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves properties for all Realtime Servers scripts in the current region.",
        "privilege": "ListScripts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List Tags for GameLift Resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alias"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "build"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gameSessionQueue"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "matchmakingConfiguration"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "matchmakingRuleSet"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "script"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates a fleet auto-scaling policy.",
        "privilege": "PutScalingPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves fresh upload credentials to use when uploading a new game build.",
        "privilege": "RequestUploadCredentials",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "build*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the fleet ID associated with an alias.",
        "privilege": "ResolveAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alias*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves game sessions that match a set of search criteria.",
        "privilege": "SearchGameSessions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Resumes auto-scaling activity on a fleet after it was suspended with StopFleetActions().",
        "privilege": "StartFleetActions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sends a game session placement request to a game session queue.",
        "privilege": "StartGameSessionPlacement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gameSessionQueue*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Requests FlexMatch matchmaking to fill available player slots in an existing game session.",
        "privilege": "StartMatchBackfill",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Requests FlexMatch matchmaking for one or a group of players and game session placement for a resulting match.",
        "privilege": "StartMatchmaking",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Suspends auto-scaling activity on a fleet.",
        "privilege": "StopFleetActions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancels a game session placement request that is in progress.",
        "privilege": "StopGameSessionPlacement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancels a matchmaking or match backfill request that is in progress.",
        "privilege": "StopMatchmaking",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Tags GameLift Resources",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alias"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "build"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gameSessionQueue"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "matchmakingConfiguration"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "matchmakingRuleSet"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "script"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Untagging GameLift Resources",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alias"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "build"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gameSessionQueue"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "matchmakingConfiguration"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "matchmakingRuleSet"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "script"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the properties of an existing alias.",
        "privilege": "UpdateAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alias*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing build's metadata.",
        "privilege": "UpdateBuild",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "build*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the general properties of an existing fleet.",
        "privilege": "UpdateFleetAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adjusts a fleet's capacity settings.",
        "privilege": "UpdateFleetCapacity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adjusts a fleet's port settings.",
        "privilege": "UpdateFleetPortSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the properties of an existing game session.",
        "privilege": "UpdateGameSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates properties of an existing game session queue.",
        "privilege": "UpdateGameSessionQueue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gameSessionQueue*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates properties of an existing FlexMatch matchmaking configuration.",
        "privilege": "UpdateMatchmakingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "matchmakingConfiguration*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates how server processes are configured on instances in an existing fleet.",
        "privilege": "UpdateRuntimeConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the metadata and content of an existing Realtime Servers script.",
        "privilege": "UpdateScript",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "script*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Validates the syntax of a FlexMatch matchmaking rule set.",
        "privilege": "ValidateMatchmakingRuleSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:gamelift:${Region}::alias/${AliasId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "alias"
      },
      {
        "arn": "arn:${Partition}:gamelift:${Region}:${AccountId}:build/${BuildId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "build"
      },
      {
        "arn": "arn:${Partition}:gamelift:${Region}:${AccountId}:script/${ScriptId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "script"
      },
      {
        "arn": "arn:${Partition}:gamelift:${Region}:${Account}:fleet/${FleetId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "fleet"
      },
      {
        "arn": "arn:${Partition}:gamelift:${Region}:${Account}:gamesessionqueue/${GameSessionQueueName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "gameSessionQueue"
      },
      {
        "arn": "arn:${Partition}:gamelift:${Region}:${Account}:matchmakingconfiguration/${MatchmakingConfigurationName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "matchmakingConfiguration"
      },
      {
        "arn": "arn:${Partition}:gamelift:${Region}:${Account}:matchmakingruleset/${MatchmakingRuleSetName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "matchmakingRuleSet"
      }
    ],
    "service_name": "Amazon GameLift"
  },
  {
    "conditions": [
      {
        "condition": "glacier:ArchiveAgeInDays",
        "description": "How long an archive has been stored in the vault, in days.",
        "type": "String"
      },
      {
        "condition": "glacier:ResourceTag/",
        "description": "A customer-defined tag.",
        "type": "String"
      }
    ],
    "prefix": "glacier",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Aborts a multipart upload identified by the upload ID",
        "privilege": "AbortMultipartUpload",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Aborts the vault locking process if the vault lock is not in the Locked state",
        "privilege": "AbortVaultLock",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds the specified tags to a vault",
        "privilege": "AddTagsToVault",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Completes a multipart upload process",
        "privilege": "CompleteMultipartUpload",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Completes the vault locking process",
        "privilege": "CompleteVaultLock",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new vault with the specified name",
        "privilege": "CreateVault",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an archive from a vault",
        "privilege": "DeleteArchive",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          },
          {
            "condition_keys": [
              "glacier:ArchiveAgeInDays"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a vault",
        "privilege": "DeleteVault",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Deletes the access policy associated with the specified vault",
        "privilege": "DeleteVaultAccessPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the notification configuration set for a vault",
        "privilege": "DeleteVaultNotifications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a job you previously initiated",
        "privilege": "DescribeJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a vault",
        "privilege": "DescribeVault",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the current data retrieval policy for the account and region specified in the GET request",
        "privilege": "GetDataRetrievalPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Downloads the output of the job you initiated",
        "privilege": "GetJobOutput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the access-policy subresource set on the vault",
        "privilege": "GetVaultAccessPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves attributes from the lock-policy subresource set on the specified vault",
        "privilege": "GetVaultLock",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the notification-configuration subresource set on the vault",
        "privilege": "GetVaultNotifications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Initiates a job of the specified type",
        "privilege": "InitiateJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          },
          {
            "condition_keys": [
              "glacier:ArchiveAgeInDays"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Initiates a multipart upload",
        "privilege": "InitiateMultipartUpload",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Initiates the vault locking process",
        "privilege": "InitiateVaultLock",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists jobs for a vault that are in-progress and jobs that have recently finished",
        "privilege": "ListJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists in-progress multipart uploads for the specified vault",
        "privilege": "ListMultipartUploads",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the parts of an archive that have been uploaded in a specific multipart upload",
        "privilege": "ListParts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "This operation lists the provisioned capacity for the specified AWS account.",
        "privilege": "ListProvisionedCapacity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the tags attached to a vault",
        "privilege": "ListTagsForVault",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all vaults",
        "privilege": "ListVaults",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation purchases a provisioned capacity unit for an AWS account.",
        "privilege": "PurchaseProvisionedCapacity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes one or more tags from the set of tags attached to a vault",
        "privilege": "RemoveTagsFromVault",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Sets and then enacts a data retrieval policy in the region specified in the PUT request",
        "privilege": "SetDataRetrievalPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Configures an access policy for a vault and will overwrite an existing policy",
        "privilege": "SetVaultAccessPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Configures vault notifications",
        "privilege": "SetVaultNotifications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds an archive to a vault",
        "privilege": "UploadArchive",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Uploads a part of an archive",
        "privilege": "UploadMultipartPart",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "vault*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:glacier:${Region}:${Account}:vaults/${VaultName}",
        "condition_keys": [],
        "resource": "vault"
      }
    ],
    "service_name": "Amazon Glacier"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "globalaccelerator",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Advertises an IPv4 address range that is provisioned for use with your accelerator through bring your own IP addresses (BYOIP).",
        "privilege": "AdvertiseByoipCidr",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create an accelerator.",
        "privilege": "CreateAccelerator",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Add an endpoint group.",
        "privilege": "CreateEndpointGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Add a listener.",
        "privilege": "CreateListener",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accelerator*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the accelerator.",
        "privilege": "DeleteAccelerator",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accelerator*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the endpoint group.",
        "privilege": "DeleteEndpointGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpointgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the listener.",
        "privilege": "DeleteListener",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Releases the specified address range that you provisioned for use with your accelerator through bring your own IP addresses (BYOIP) and deletes the corresponding address pool.",
        "privilege": "DeprovisionByoipCidr",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe the accelerator.",
        "privilege": "DescribeAccelerator",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accelerator*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe the accelerator Attributes.",
        "privilege": "DescribeAcceleratorAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accelerator*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe the endpoint group.",
        "privilege": "DescribeEndpointGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpointgroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe the listener.",
        "privilege": "DescribeListener",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the accelerators.",
        "privilege": "ListAccelerators",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the byoip cidrs.",
        "privilege": "ListByoipCidrs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the endpoint groups.",
        "privilege": "ListEndpointGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the listeners.",
        "privilege": "ListListeners",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accelerator*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "List tags for a globalaccelerator resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accelerator"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Provisions an address range for use with your accelerator through bring your own IP addresses (BYOIP) and creates a corresponding address pool.",
        "privilege": "ProvisionByoipCidr",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Add tags to globalaccelerator resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accelerator"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Remove tags from globalaccelerator resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accelerator"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the accelerator.",
        "privilege": "UpdateAccelerator",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accelerator*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the accelerator attributes.",
        "privilege": "UpdateAcceleratorAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accelerator*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the endpoint group.",
        "privilege": "UpdateEndpointGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpointgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the listener.",
        "privilege": "UpdateListener",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "listener*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops advertising an IPv4 address range that is provisioned as an address pool.",
        "privilege": "WithdrawByoipCidr",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:globalaccelerator::${Account}:accelerator/${AcceleratorId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "accelerator"
      },
      {
        "arn": "arn:${Partition}:globalaccelerator::${Account}:accelerator/${AcceleratorId}/listener/${ListenerId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "listener"
      },
      {
        "arn": "arn:${Partition}:globalaccelerator::${Account}:accelerator/${AcceleratorId}/listener/${ListenerId}/endpoint-group/${EndpointGroupId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "endpointgroup"
      }
    ],
    "service_name": "AWS Global Accelerator"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "glue",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to create one or more partitions",
        "privilege": "BatchCreatePartition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete one or more connections",
        "privilege": "BatchDeleteConnection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete one or more partitions",
        "privilege": "BatchDeletePartition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete one or more tables",
        "privilege": "BatchDeleteTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to delete one or more versions of a table",
        "privilege": "BatchDeleteTableVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "tableversion*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve one or more crawlers",
        "privilege": "BatchGetCrawlers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve one or more development endpoints",
        "privilege": "BatchGetDevEndpoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve one or more jobs",
        "privilege": "BatchGetJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve one or more partitions",
        "privilege": "BatchGetPartition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve one or more triggers",
        "privilege": "BatchGetTriggers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve one or more workflows",
        "privilege": "BatchGetWorkflows",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop one or more job runs for a job",
        "privilege": "BatchStopJobRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop a running ML Task Run",
        "privilege": "CancelMLTaskRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlTransform*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a classifier",
        "privilege": "CreateClassifier",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a connection",
        "privilege": "CreateConnection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a crawler",
        "privilege": "CreateCrawler",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a database",
        "privilege": "CreateDatabase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a development endpoint",
        "privilege": "CreateDevEndpoint",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a job",
        "privilege": "CreateJob",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an ML Transform",
        "privilege": "CreateMLTransform",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a partition",
        "privilege": "CreatePartition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a script",
        "privilege": "CreateScript",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a security configuration",
        "privilege": "CreateSecurityConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a table",
        "privilege": "CreateTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a trigger",
        "privilege": "CreateTrigger",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a function definition",
        "privilege": "CreateUserDefinedFunction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userdefinedfunction*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a workflow",
        "privilege": "CreateWorkflow",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a classifier",
        "privilege": "DeleteClassifier",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a connection",
        "privilege": "DeleteConnection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a crawler",
        "privilege": "DeleteCrawler",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a database",
        "privilege": "DeleteDatabase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a development endpoint",
        "privilege": "DeleteDevEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a job",
        "privilege": "DeleteJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an ML Transform",
        "privilege": "DeleteMLTransform",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlTransform*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a partition",
        "privilege": "DeletePartition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a resource policy",
        "privilege": "DeleteResourcePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a security configuration",
        "privilege": "DeleteSecurityConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a table",
        "privilege": "DeleteTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to delete a version of a table",
        "privilege": "DeleteTableVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "tableversion*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a trigger",
        "privilege": "DeleteTrigger",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a function definition",
        "privilege": "DeleteUserDefinedFunction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userdefinedfunction*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a workflow",
        "privilege": "DeleteWorkflow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the catalog import status",
        "privilege": "GetCatalogImportStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a classifier",
        "privilege": "GetClassifier",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list all classifiers",
        "privilege": "GetClassifiers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a connection",
        "privilege": "GetConnection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connection*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of connections",
        "privilege": "GetConnections",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connection*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a crawler",
        "privilege": "GetCrawler",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve metrics about crawlers",
        "privilege": "GetCrawlerMetrics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve all crawlers",
        "privilege": "GetCrawlers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve catalog encryption settings",
        "privilege": "GetDataCatalogEncryptionSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a database",
        "privilege": "GetDatabase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve all databases",
        "privilege": "GetDatabases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to transform a script into a directed acyclic graph (DAG)",
        "privilege": "GetDataflowGraph",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a development endpoint",
        "privilege": "GetDevEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve all development endpoints",
        "privilege": "GetDevEndpoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a job",
        "privilege": "GetJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a job bookmark",
        "privilege": "GetJobBookmark",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a job run",
        "privilege": "GetJobRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve all job runs of a job",
        "privilege": "GetJobRuns",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve all current jobs",
        "privilege": "GetJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve an ML Task Run",
        "privilege": "GetMLTaskRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlTransform*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve all ML Task Runs",
        "privilege": "GetMLTaskRuns",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlTransform*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve an ML Transform",
        "privilege": "GetMLTransform",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlTransform*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve all ML Transforms",
        "privilege": "GetMLTransforms",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a mapping",
        "privilege": "GetMapping",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a partition",
        "privilege": "GetPartition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the partitions of a table",
        "privilege": "GetPartitions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a mapping for a script",
        "privilege": "GetPlan",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a resource policy",
        "privilege": "GetResourcePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a security configuration",
        "privilege": "GetSecurityConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve one or more security configurations",
        "privilege": "GetSecurityConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a table",
        "privilege": "GetTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a version of a table",
        "privilege": "GetTableVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "tableversion*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of versions of a table",
        "privilege": "GetTableVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "tableversion*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the tables in a database",
        "privilege": "GetTables",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve all tags associated with a resource",
        "privilege": "GetTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "crawler"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "devendpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trigger"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workflow"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a trigger",
        "privilege": "GetTrigger",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the triggers associated with a job",
        "privilege": "GetTriggers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a function definition.",
        "privilege": "GetUserDefinedFunction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userdefinedfunction*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve multiple function definitions",
        "privilege": "GetUserDefinedFunctions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userdefinedfunction*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a workflow",
        "privilege": "GetWorkflow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a workflow run",
        "privilege": "GetWorkflowRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve workflow run properties",
        "privilege": "GetWorkflowRunProperties",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve all runs of a workflow",
        "privilege": "GetWorkflowRuns",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to import an Athena data catalog into AWS Glue",
        "privilege": "ImportCatalogToGlue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve all crawlers",
        "privilege": "ListCrawlers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve all development endpoints",
        "privilege": "ListDevEndpoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve all current jobs",
        "privilege": "ListJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve all ML Transforms",
        "privilege": "ListMLTransforms",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve all triggers",
        "privilege": "ListTriggers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve all workflows",
        "privilege": "ListWorkflows",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update catalog encryption settings",
        "privilege": "PutDataCatalogEncryptionSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a resource policy",
        "privilege": "PutResourcePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update workflow run properties",
        "privilege": "PutWorkflowRunProperties",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reset a job bookmark",
        "privilege": "ResetJobBookmark",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the tables in the catalog",
        "privilege": "SearchTables",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start a crawler",
        "privilege": "StartCrawler",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change the schedule state of a crawler to SCHEDULED",
        "privilege": "StartCrawlerSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start an Export Labels ML Task Run",
        "privilege": "StartExportLabelsTaskRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlTransform*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start an Import Labels ML Task Run",
        "privilege": "StartImportLabelsTaskRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlTransform*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start running a job",
        "privilege": "StartJobRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start an Evaluation ML Task Run",
        "privilege": "StartMLEvaluationTaskRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlTransform*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start a Labeling Set Generation ML Task Run",
        "privilege": "StartMLLabelingSetGenerationTaskRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlTransform*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start a trigger",
        "privilege": "StartTrigger",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start running a workflow",
        "privilege": "StartWorkflowRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop a running crawler",
        "privilege": "StopCrawler",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to set the schedule state of a crawler to NOT_SCHEDULED",
        "privilege": "StopCrawlerSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop a trigger",
        "privilege": "StopTrigger",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add tags to a resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "crawler"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "devendpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trigger"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workflow"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove tags associated with a resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "crawler"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "devendpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trigger"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workflow"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a classifier",
        "privilege": "UpdateClassifier",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a connection",
        "privilege": "UpdateConnection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a crawler",
        "privilege": "UpdateCrawler",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the schedule of a crawler",
        "privilege": "UpdateCrawlerSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a database",
        "privilege": "UpdateDatabase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a development endpoint",
        "privilege": "UpdateDevEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a job",
        "privilege": "UpdateJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an ML Transform",
        "privilege": "UpdateMLTransform",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlTransform*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a partition",
        "privilege": "UpdatePartition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a table",
        "privilege": "UpdateTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "table*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a trigger",
        "privilege": "UpdateTrigger",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a function definition",
        "privilege": "UpdateUserDefinedFunction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "catalog*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "userdefinedfunction*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a workflow",
        "privilege": "UpdateWorkflow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to use an ML Transform from within a Glue ETL Script",
        "privilege": "UseMLTransforms",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlTransform*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:glue:${Region}:${Account}:catalog/${CatalogName}",
        "condition_keys": [],
        "resource": "catalog"
      },
      {
        "arn": "arn:${Partition}:glue:${Region}:${Account}:database/${DatabaseName}",
        "condition_keys": [],
        "resource": "database"
      },
      {
        "arn": "arn:${Partition}:glue:${Region}:${Account}:table/${TableName}",
        "condition_keys": [],
        "resource": "table"
      },
      {
        "arn": "arn:${Partition}:glue:${Region}:${Account}:tableVersion/${TableVersionName}",
        "condition_keys": [],
        "resource": "tableversion"
      },
      {
        "arn": "arn:${Partition}:glue:${Region}:${Account}:connection/${ConnectionName}",
        "condition_keys": [],
        "resource": "connection"
      },
      {
        "arn": "arn:${Partition}:glue:${Region}:${Account}:userDefinedFunction/${UserDefinedFunctionName}",
        "condition_keys": [],
        "resource": "userdefinedfunction"
      },
      {
        "arn": "arn:${Partition}:glue:${Region}:${Account}:devendpoint/${DevEndpointName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "devendpoint"
      },
      {
        "arn": "arn:${Partition}:glue:${Region}:${Account}:job/${JobName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "job"
      },
      {
        "arn": "arn:${Partition}:glue:${Region}:${Account}:trigger/${TriggerName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "trigger"
      },
      {
        "arn": "arn:${Partition}:glue:${Region}:${Account}:crawler/${CrawlerName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "crawler"
      },
      {
        "arn": "arn:${Partition}:glue:${Region}:${Account}:workflow/${WorkflowName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "workflow"
      },
      {
        "arn": "arn:${Partition}:glue:${Region}:${Account}:mlTransform/${TransformId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "mlTransform"
      }
    ],
    "service_name": "AWS Glue"
  },
  {
    "conditions": [
      {
        "condition": "aws:CurrentTime",
        "description": "Filters access by checking date/time conditions for the current date and time.",
        "type": "Date"
      },
      {
        "condition": "aws:EpochTime",
        "description": "Filters access by checking date/time conditions for the current date and time in epoch or Unix time.",
        "type": "Date"
      },
      {
        "condition": "aws:MultiFactorAuthAge",
        "description": "Filters access by checking how long ago (in seconds) the security credentials validated by multi-factor authentication (MFA) in the request were issued using MFA.",
        "type": "Numeric"
      },
      {
        "condition": "aws:MultiFactorAuthPresent",
        "description": "Filters access by checking whether multi-factor authentication (MFA) was used to validate the temporary security credentials that made the current request.",
        "type": "Boolean"
      },
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters create requests based on the allowed set of values for each of the mandatory tags.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on the tag value associated with the resource.",
        "type": "String"
      },
      {
        "condition": "aws:SecureTransport",
        "description": "Filters access by checking whether the request was sent using SSL.",
        "type": "Boolean"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters create requests based on the presence of mandatory tags in the request.",
        "type": "String"
      },
      {
        "condition": "aws:UserAgent",
        "description": "Filters access by the requester's client application.",
        "type": "String"
      }
    ],
    "prefix": "greengrass",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to associate a role with a group. The role's permissions must allow Greengrass core Lambda functions and connectors to perform actions in other AWS services.",
        "privilege": "AssociateRoleToGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to associate a role with your account. AWS IoT Greengrass uses this role to access your Lambda functions and AWS IoT resources.",
        "privilege": "AssociateServiceRoleToAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a connector definition.",
        "privilege": "CreateConnectorDefinition",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a version of an existing connector definition.",
        "privilege": "CreateConnectorDefinitionVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connectorDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a core definition.",
        "privilege": "CreateCoreDefinition",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a version of an existing core definition. Greengrass groups must each contain exactly one Greengrass core.",
        "privilege": "CreateCoreDefinitionVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "coreDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a deployment.",
        "privilege": "CreateDeployment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a device definition.",
        "privilege": "CreateDeviceDefinition",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a version of an existing device definition.",
        "privilege": "CreateDeviceDefinitionVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deviceDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a Lambda function definition to be used in a group that contains a list of Lambda functions and their configurations.",
        "privilege": "CreateFunctionDefinition",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a version of an existing Lambda function definition.",
        "privilege": "CreateFunctionDefinitionVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "functionDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a group.",
        "privilege": "CreateGroup",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a CA for the group, or rotate the existing CA.",
        "privilege": "CreateGroupCertificateAuthority",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a version of a group that has already been defined.",
        "privilege": "CreateGroupVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a logger definition.",
        "privilege": "CreateLoggerDefinition",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a version of an existing logger definition.",
        "privilege": "CreateLoggerDefinitionVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loggerDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a resource definition that contains a list of resources to be used in a group.",
        "privilege": "CreateResourceDefinition",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a version of an existing resource definition.",
        "privilege": "CreateResourceDefinitionVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resourceDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an AWS IoT job that will trigger your Greengrass cores to update the software they are running.",
        "privilege": "CreateSoftwareUpdateJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a subscription definition.",
        "privilege": "CreateSubscriptionDefinition",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a version of an existing subscription definition.",
        "privilege": "CreateSubscriptionDefinitionVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subscriptionDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a connector definition.",
        "privilege": "DeleteConnectorDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connectorDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a core definition. Deleting a definition that is currently in use in a deployment affects future deployments.",
        "privilege": "DeleteCoreDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "coreDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a device definition. Deleting a definition that is currently in use in a deployment affects future deployments.",
        "privilege": "DeleteDeviceDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deviceDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a Lambda function definition. Deleting a definition that is currently in use in a deployment affects future deployments.",
        "privilege": "DeleteFunctionDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "functionDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a group that is not currently in use in a deployment.",
        "privilege": "DeleteGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a logger definition. Deleting a definition that is currently in use in a deployment affects future deployments.",
        "privilege": "DeleteLoggerDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loggerDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a resource definition.",
        "privilege": "DeleteResourceDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resourceDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a subscription definition. Deleting a definition that is currently in use in a deployment affects future deployments.",
        "privilege": "DeleteSubscriptionDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subscriptionDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate the role from a group.",
        "privilege": "DisassociateRoleFromGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate the service role from an account. Without a service role, deployments will not work.",
        "privilege": "DisassociateServiceRoleFromAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the role associated with a group.",
        "privilege": "GetAssociatedRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return the status of a bulk deployment.",
        "privilege": "GetBulkDeploymentStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bulkDeployment*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the connectivity information for a core.",
        "privilege": "GetConnectivityInfo",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connectivityInfo*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a connector definition.",
        "privilege": "GetConnectorDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connectorDefinition*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a connector definition version.",
        "privilege": "GetConnectorDefinitionVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connectorDefinition*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connectorDefinitionVersion*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a core definition.",
        "privilege": "GetCoreDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "coreDefinition*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a core definition version.",
        "privilege": "GetCoreDefinitionVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "coreDefinition*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "coreDefinitionVersion*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return the status of a deployment.",
        "privilege": "GetDeploymentStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deployment*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a device definition.",
        "privilege": "GetDeviceDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deviceDefinition*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a device definition version.",
        "privilege": "GetDeviceDefinitionVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deviceDefinition*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deviceDefinitionVersion*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a Lambda function definition, such as its creation time and latest version.",
        "privilege": "GetFunctionDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "functionDefinition*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a Lambda function definition version, such as which Lambda functions are included in the version and their configurations.",
        "privilege": "GetFunctionDefinitionVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "functionDefinition*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "functionDefinitionVersion*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a group.",
        "privilege": "GetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return the public key of the CA associated with a group.",
        "privilege": "GetGroupCertificateAuthority",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "certificateAuthority*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the current configuration for the CA used by a group.",
        "privilege": "GetGroupCertificateConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a group version.",
        "privilege": "GetGroupVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "groupVersion*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a logger definition.",
        "privilege": "GetLoggerDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loggerDefinition*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a logger definition version.",
        "privilege": "GetLoggerDefinitionVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loggerDefinition*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loggerDefinitionVersion*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a resource definition, such as its creation time and latest version.",
        "privilege": "GetResourceDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resourceDefinition*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a resource definition version, such as which resources are included in the version.",
        "privilege": "GetResourceDefinitionVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resourceDefinition*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resourceDefinitionVersion*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the service role that is attached to an account.",
        "privilege": "GetServiceRoleForAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a subscription definition.",
        "privilege": "GetSubscriptionDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subscriptionDefinition*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a subscription definition version.",
        "privilege": "GetSubscriptionDefinitionVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subscriptionDefinition*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subscriptionDefinitionVersion*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a paginated list of the deployments that have been started in a bulk deployment operation and their current deployment status.",
        "privilege": "ListBulkDeploymentDetailedReports",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bulkDeployment*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of bulk deployments.",
        "privilege": "ListBulkDeployments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the versions of a connector definition.",
        "privilege": "ListConnectorDefinitionVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connectorDefinition*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of connector definitions.",
        "privilege": "ListConnectorDefinitions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the versions of a core definition.",
        "privilege": "ListCoreDefinitionVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "coreDefinition*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of core definitions.",
        "privilege": "ListCoreDefinitions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of all deployments for a group.",
        "privilege": "ListDeployments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the versions of a device definition.",
        "privilege": "ListDeviceDefinitionVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deviceDefinition*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of device definitions.",
        "privilege": "ListDeviceDefinitions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the versions of a Lambda function definition.",
        "privilege": "ListFunctionDefinitionVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "functionDefinition*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of Lambda function definitions.",
        "privilege": "ListFunctionDefinitions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of current CAs for a group.",
        "privilege": "ListGroupCertificateAuthorities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the versions of a group.",
        "privilege": "ListGroupVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of groups.",
        "privilege": "ListGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the versions of a logger definition.",
        "privilege": "ListLoggerDefinitionVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loggerDefinition*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of logger definitions.",
        "privilege": "ListLoggerDefinitions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the versions of a resource definition.",
        "privilege": "ListResourceDefinitionVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resourceDefinition*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of resource definitions.",
        "privilege": "ListResourceDefinitions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the versions of a subscription definition.",
        "privilege": "ListSubscriptionDefinitionVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subscriptionDefinition*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of subscription definitions.",
        "privilege": "ListSubscriptionDefinitions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the tags for a resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bulkDeployment"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connectorDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "coreDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deviceDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "functionDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loggerDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resourceDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subscriptionDefinition"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reset a group's deployments.",
        "privilege": "ResetDeployments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to deploy multiple groups in one operation.",
        "privilege": "StartBulkDeployment",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop the execution of a bulk deployment.",
        "privilege": "StopBulkDeployment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bulkDeployment*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add tags to a resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bulkDeployment"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connectorDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "coreDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deviceDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "functionDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loggerDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resourceDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subscriptionDefinition"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove tags from a resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bulkDeployment"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connectorDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "coreDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deviceDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "functionDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loggerDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resourceDefinition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subscriptionDefinition"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the connectivity information for a Greengrass core. Any devices that belong to the group that has this core will receive this information in order to find the location of the core and connect to it.",
        "privilege": "UpdateConnectivityInfo",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connectivityInfo*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a connector definition.",
        "privilege": "UpdateConnectorDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "connectorDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a core definition.",
        "privilege": "UpdateCoreDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "coreDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a device definition.",
        "privilege": "UpdateDeviceDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deviceDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a Lambda function definition.",
        "privilege": "UpdateFunctionDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "functionDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a group.",
        "privilege": "UpdateGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the certificate expiry time for a group.",
        "privilege": "UpdateGroupCertificateConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a logger definition.",
        "privilege": "UpdateLoggerDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loggerDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a resource definition.",
        "privilege": "UpdateResourceDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resourceDefinition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a subscription definition.",
        "privilege": "UpdateSubscriptionDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subscriptionDefinition*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/things/${ThingName}/connectivityInfo",
        "condition_keys": [],
        "resource": "connectivityInfo"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/${GroupId}/deployments/${DeploymentId}/artifacts/lambda/${ArtifactId}",
        "condition_keys": [],
        "resource": "artifact"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/${GroupId}/certificateauthorities/${CertificateAuthorityId}",
        "condition_keys": [],
        "resource": "certificateAuthority"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/${GroupId}/deployments/${DeploymentId}",
        "condition_keys": [],
        "resource": "deployment"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/bulk/deployments/${BulkDeploymentId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "bulkDeployment"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/${GroupId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "group"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/${GroupId}/versions/${VersionId}",
        "condition_keys": [],
        "resource": "groupVersion"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/cores/${CoreDefinitionId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "coreDefinition"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/cores/${CoreDefinitionId}/versions/${VersionId}",
        "condition_keys": [],
        "resource": "coreDefinitionVersion"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/devices/${DeviceDefinitionId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "deviceDefinition"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/devices/${DeviceDefinitionId}/versions/${VersionId}",
        "condition_keys": [],
        "resource": "deviceDefinitionVersion"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/functions/${FunctionDefinitionId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "functionDefinition"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/functions/${FunctionDefinitionId}/versions/${VersionId}",
        "condition_keys": [],
        "resource": "functionDefinitionVersion"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/subscriptions/${SubscriptionDefinitionId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "subscriptionDefinition"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/subscriptions/${SubscriptionDefinitionId}/versions/${VersionId}",
        "condition_keys": [],
        "resource": "subscriptionDefinitionVersion"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/loggers/${LoggerDefinitionId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "loggerDefinition"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/loggers/${LoggerDefinitionId}/versions/${VersionId}",
        "condition_keys": [],
        "resource": "loggerDefinitionVersion"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/resources/${ResourceDefinitionId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "resourceDefinition"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/resources/${ResourceDefinitionId}/versions/${VersionId}",
        "condition_keys": [],
        "resource": "resourceDefinitionVersion"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/connectors/${ConnectorDefinitionId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "connectorDefinition"
      },
      {
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/connectors/${ConnectorDefinitionId}/versions/${VersionId}",
        "condition_keys": [],
        "resource": "connectorDefinitionVersion"
      }
    ],
    "service_name": "AWS IoT Greengrass"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters access by a key that is present in the request the user makes to the Ground Station service.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters access by a tag key and value pair.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters access by the list of all the tag key names present in the request the user makes to the Ground Station service.",
        "type": "String"
      },
      {
        "condition": "groundstation:configId",
        "description": "Filters access by the ID of a config",
        "type": "String"
      },
      {
        "condition": "groundstation:configType",
        "description": "Filters access by the type of a config",
        "type": "String"
      },
      {
        "condition": "groundstation:contactId",
        "description": "Filters access by the ID of a contact",
        "type": "String"
      },
      {
        "condition": "groundstation:dataflowEndpointGroupId",
        "description": "Filters access by the ID of a dataflow endpoint group",
        "type": "String"
      },
      {
        "condition": "groundstation:groundStationId",
        "description": "Filters access by the ID of a ground station",
        "type": "String"
      },
      {
        "condition": "groundstation:missionProfileId",
        "description": "Filters access by the ID of a mission profile",
        "type": "String"
      },
      {
        "condition": "groundstation:satelliteId",
        "description": "Filters access by the ID of a satellite",
        "type": "String"
      }
    ],
    "prefix": "groundstation",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to cancel a contact",
        "privilege": "CancelContact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Contact*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a configuration",
        "privilege": "CreateConfig",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a data flow endpoint group",
        "privilege": "CreateDataflowEndpointGroup",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a mission profile",
        "privilege": "CreateMissionProfile",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a config",
        "privilege": "DeleteConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Config*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a data flow endpoint group",
        "privilege": "DeleteDataflowEndpointGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "DataflowEndpointGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a mission profile",
        "privilege": "DeleteMissionProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "MissionProfile*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe a contact",
        "privilege": "DescribeContact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Contact*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return a configuration",
        "privilege": "GetConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Config*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return a data flow endpoint group",
        "privilege": "GetDataflowEndpointGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "DataflowEndpointGroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return minutes usage",
        "privilege": "GetMinuteUsage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a mission profile",
        "privilege": "GetMissionProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "MissionProfile*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return information about a satellite",
        "privilege": "GetSatellite",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Satellite*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permisson to return a list of past configurations",
        "privilege": "ListConfigs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to return a list of contacts",
        "privilege": "ListContacts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list data flow endpoint groups",
        "privilege": "ListDataflowEndpointGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list ground stations",
        "privilege": "ListGroundStations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to return a list of mission profiles",
        "privilege": "ListMissionProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list satellites",
        "privilege": "ListSatellites",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list tags for a resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Config"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Contact"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "DataflowEndpointGroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "MissionProfile"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reserve a contact",
        "privilege": "ReserveContact",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to assign a resource tag",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Config"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Contact"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "DataflowEndpointGroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "MissionProfile"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to deassign a resource tag",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Config"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Contact"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "DataflowEndpointGroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "MissionProfile"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a configuration",
        "privilege": "UpdateConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Config*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a mission profile",
        "privilege": "UpdateMissionProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "MissionProfile*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:groundstation:${Region}:${Account}:config/${configType}/${configId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "groundstation:configId",
          "groundstation:configType"
        ],
        "resource": "Config"
      },
      {
        "arn": "arn:${Partition}:groundstation:${Region}:${Account}:contact/${contactId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "groundstation:contactId"
        ],
        "resource": "Contact"
      },
      {
        "arn": "arn:${Partition}:groundstation:${Region}:${Account}:dataflow-endpoint-group/${dataflowEndpointGroupId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "groundstation:dataflowEndpointGroupId"
        ],
        "resource": "DataflowEndpointGroup"
      },
      {
        "arn": "arn:${Partition}:groundstation:${Region}:${Account}:groundstation:${groundStationId}",
        "condition_keys": [
          "groundstation:groundStationId"
        ],
        "resource": "GroundStationResource"
      },
      {
        "arn": "arn:${Partition}:groundstation:${Region}:${Account}:mission-profile/${missionProfileId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "groundstation:missionProfileId"
        ],
        "resource": "MissionProfile"
      },
      {
        "arn": "arn:${Partition}:groundstation:${Region}:${Account}:satellite/${satelliteId}",
        "condition_keys": [
          "groundstation:satelliteId"
        ],
        "resource": "Satellite"
      }
    ],
    "service_name": "AWS Ground Station"
  },
  {
    "conditions": [],
    "prefix": "groundtruthlabeling",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Get status of GroundTruthLabeling Jobs.",
        "privilege": "DescribeConsoleJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Paginated list API to list dataset objects in a manifest file.",
        "privilege": "ListDatasetObjects",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Filter records from a manifest file using S3 select. Get sample entries based on random sampling.",
        "privilege": "RunFilterOrSampleDatasetJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "List a S3 prefix and create manifest files from objects in that location.",
        "privilege": "RunGenerateManifestByCrawlingJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon GroundTruth Labeling"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "guardduty",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to accept invitations to become a GuardDuty member account.",
        "privilege": "AcceptInvitation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to archive GuardDuty findings.",
        "privilege": "ArchiveFindings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a detector.",
        "privilege": "CreateDetector",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create GuardDuty filters. A filters defines finding attributes and conditions used to filter findings.",
        "privilege": "CreateFilter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an IPSet.",
        "privilege": "CreateIPSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create GuardDuty member accounts. The account used to create a member becomes the GuardDuty master account.",
        "privilege": "CreateMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a publishing destination.",
        "privilege": "CreatePublishingDestination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:GetObject",
              "s3:ListBucket"
            ],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create sample findings.",
        "privilege": "CreateSampleFindings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create GuardDuty ThreatIntelSets. A ThreatIntelSet consists of known malicious IP addresses used by GuardDuty to generate findings.",
        "privilege": "CreateThreatIntelSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to decline invitations to become a GuardDuty member account.",
        "privilege": "DeclineInvitations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete GuardDuty detectors.",
        "privilege": "DeleteDetector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete GuardDuty filters.",
        "privilege": "DeleteFilter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "filter*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete GuardDuty IPSets.",
        "privilege": "DeleteIPSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete invitations to become a GuardDuty member account.",
        "privilege": "DeleteInvitations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete GuardDuty member accounts.",
        "privilege": "DeleteMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a publishing destination.",
        "privilege": "DeletePublishingDestination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "publishingdestination*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete GuardDuty ThreatIntelSets.",
        "privilege": "DeleteThreatIntelSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "threatintelset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve details about a publishing destination.",
        "privilege": "DescribePublishingDestination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "publishingdestination*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate a GuardDuty member account from its GuardDuty master account.",
        "privilege": "DisassociateFromMasterAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate GuardDuty member accounts from their master GuardDuty account.",
        "privilege": "DisassociateMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve GuardDuty detectors.",
        "privilege": "GetDetector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve GuardDuty filters.",
        "privilege": "GetFilter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "filter*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve GuardDuty findings.",
        "privilege": "GetFindings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of GuardDuty finding statistics.",
        "privilege": "GetFindingsStatistics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permsission to retrieve GuardDuty IPSets.",
        "privilege": "GetIPSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the count of all GuardDuty invitations sent to a specified account. The count does not include an accepted invitation.",
        "privilege": "GetInvitationsCount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve details of the GuardDuty master account associated with a member account.",
        "privilege": "GetMasterAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the member accounts associated with a master account.",
        "privilege": "GetMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve GuardDuty ThreatIntelSets.",
        "privilege": "GetThreatIntelSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "threatintelset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to invite other AWS accounts to enable GuardDuty and become GuardDuty member accounts.",
        "privilege": "InviteMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of GuardDuty detectors.",
        "privilege": "ListDetectors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of GuardDuty filters.",
        "privilege": "ListFilters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of GuardDuty findings.",
        "privilege": "ListFindings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a lists of all of the GuardDuty membership invitations that were sent to an AWS account.",
        "privilege": "ListInvitations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrierve a lsit of GuardDuty member accounts associated with a master account.",
        "privilege": "ListMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of publishing destinations.",
        "privilege": "ListPublishingDestinations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of tags associated with a GuardDuty resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "filter"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "threatintelset"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of GuardDuty ThreatIntelSets.",
        "privilege": "ListThreatIntelSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to a master account to monitor findings from GuardDuty member accounts. Use this after disabling monitoring of member accounts using the StopMonitoringMembers operation.",
        "privilege": "StartMonitoringMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable monitoring findings from member accounts.",
        "privilege": "StopMonitoringMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add tags to a GuardDuty resource. There is a limit of 50 tags per resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "filter"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "threatintelset"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to unarchive GuardDuty findings.",
        "privilege": "UnarchiveFindings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove tags from a GuardDuty resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "filter"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "threatintelset"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update GuardDuty detectors.",
        "privilege": "UpdateDetector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to updates GuardDuty filters.",
        "privilege": "UpdateFilter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "filter*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update findings feedback to mark GuardDuty findings as useful or not useful.",
        "privilege": "UpdateFindingsFeedback",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update GuardDuty IPSets.",
        "privilege": "UpdateIPSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a publishing destination.",
        "privilege": "UpdatePublishingDestination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:GetObject",
              "s3:ListBucket"
            ],
            "resource_type": "detector*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "publishingdestination*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to updates the GuardDuty ThreatIntelSets.",
        "privilege": "UpdateThreatIntelSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detector*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "threatintelset*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:guardduty:${Region}:${Account}:detector/${DetectorId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "detector"
      },
      {
        "arn": "arn:${Partition}:guardduty:${Region}:${Account}:detector/${DetectorId}/filter/${FilterName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "filter"
      },
      {
        "arn": "arn:${Partition}:guardduty:${Region}:${Account}:detector/${DetectorId}/ipset/${IPSetId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "ipset"
      },
      {
        "arn": "arn:${Partition}:guardduty:${Region}:${Account}:detector/${DetectorId}/threatintelset/${ThreatIntelSetId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "threatintelset"
      },
      {
        "arn": "arn:${Partition}:guardduty:${Region}:${Account}:detector/${DetectorId}/threatintelset/${PublishingDestinationId}",
        "condition_keys": [],
        "resource": "publishingdestination"
      }
    ],
    "service_name": "Amazon GuardDuty"
  },
  {
    "conditions": [
      {
        "condition": "health:eventTypeCode",
        "description": "The type of event.",
        "type": "String"
      },
      {
        "condition": "health:service",
        "description": "The service of the event.",
        "type": "String"
      }
    ],
    "prefix": "health",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Gets a list of accounts that have been affected by the specified events in organization.",
        "privilege": "DescribeAffectedAccountsForOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "organizations:ListAccounts"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a list of entities that have been affected by the specified events.",
        "privilege": "DescribeAffectedEntities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event*"
          },
          {
            "condition_keys": [
              "health:eventTypeCode",
              "health:service"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a list of entities that have been affected by the specified events and accounts in organization.",
        "privilege": "DescribeAffectedEntitiesForOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "organizations:ListAccounts"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the number of entities that are affected by each of the specified events.",
        "privilege": "DescribeEntityAggregates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the number of events of each event type (issue, scheduled change, and account notification).",
        "privilege": "DescribeEventAggregates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns detailed information about one or more specified events.",
        "privilege": "DescribeEventDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "event*"
          },
          {
            "condition_keys": [
              "health:eventTypeCode",
              "health:service"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns detailed information about one or more specified events for provided accounts in organization.",
        "privilege": "DescribeEventDetailsForOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "organizations:ListAccounts"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the event types that meet the specified filter criteria.",
        "privilege": "DescribeEventTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about events that meet the specified filter criteria.",
        "privilege": "DescribeEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about events that meet the specified filter criteria in organization.",
        "privilege": "DescribeEventsForOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "organizations:ListAccounts"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Returns the status of enabling or disabling the Organizational View feature",
        "privilege": "DescribeHealthServiceStatusForOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "organizations:ListAccounts"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Disables the Organizational View feature.",
        "privilege": "DisableHealthServiceAccessForOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "organizations:DisableAWSServiceAccess",
              "organizations:ListAccounts"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Enables the Organizational View feature.",
        "privilege": "EnableHealthServiceAccessForOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:CreateServiceLinkedRole",
              "organizations:EnableAWSServiceAccess",
              "organizations:ListAccounts"
            ],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:health:*::event/${Service}/${EventTypeCode}/*",
        "condition_keys": [],
        "resource": "event"
      }
    ],
    "service_name": "AWS Health APIs and Notifications"
  },
  {
    "conditions": [
      {
        "condition": "iam:AWSServiceName",
        "description": "Filters access by the AWS service to which this role is attached",
        "type": "String"
      },
      {
        "condition": "iam:AssociatedResourceArn",
        "description": "Filters by the resource that the role will be used on behalf of",
        "type": "ARN"
      },
      {
        "condition": "iam:OrganizationsPolicyId",
        "description": "Filters access by the ID of an AWS Organizations policy",
        "type": "String"
      },
      {
        "condition": "iam:PassedToService",
        "description": "Filters access by the AWS service to which this role is passed",
        "type": "String"
      },
      {
        "condition": "iam:PermissionsBoundary",
        "description": "Filters access if the specified policy is set as the permissions boundary on the IAM entity (user or role)",
        "type": "String"
      },
      {
        "condition": "iam:PolicyARN",
        "description": "Filters access by the ARN of an IAM policy",
        "type": "ARN"
      },
      {
        "condition": "iam:ResourceTag/${TagKey}",
        "description": "Filters access by the tags attached to an IAM entity (user or role).",
        "type": "String"
      }
    ],
    "prefix": "iam",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to add a new client ID (audience) to the list of registered IDs for the specified IAM OpenID Connect (OIDC) provider resource",
        "privilege": "AddClientIDToOpenIDConnectProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "oidc-provider*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add an IAM role to the specified instance profile",
        "privilege": "AddRoleToInstanceProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance-profile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add an IAM user to the specified IAM group",
        "privilege": "AddUserToGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to attach a managed policy to the specified IAM group",
        "privilege": "AttachGroupPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          },
          {
            "condition_keys": [
              "iam:PolicyARN"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to attach a managed policy to the specified IAM role",
        "privilege": "AttachRolePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          },
          {
            "condition_keys": [
              "iam:PolicyARN",
              "iam:PermissionsBoundary"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to attach a managed policy to the specified IAM user",
        "privilege": "AttachUserPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          },
          {
            "condition_keys": [
              "iam:PolicyARN",
              "iam:PermissionsBoundary"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission for an IAM user to to change their own password",
        "privilege": "ChangePassword",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create access key and secret access key for the specified IAM user",
        "privilege": "CreateAccessKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an alias for your AWS account",
        "privilege": "CreateAccountAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new group",
        "privilege": "CreateGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new instance profile",
        "privilege": "CreateInstanceProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance-profile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a password for the specified IAM user",
        "privilege": "CreateLoginProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an IAM resource that describes an identity provider (IdP) that supports OpenID Connect (OIDC)",
        "privilege": "CreateOpenIDConnectProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "oidc-provider*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to create a new managed policy",
        "privilege": "CreatePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to create a new version of the specified managed policy",
        "privilege": "CreatePolicyVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new role",
        "privilege": "CreateRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          },
          {
            "condition_keys": [
              "iam:PermissionsBoundary"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an IAM resource that describes an identity provider (IdP) that supports SAML 2.0",
        "privilege": "CreateSAMLProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "saml-provider*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an IAM role that allows an AWS service to perform actions on your behalf",
        "privilege": "CreateServiceLinkedRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          },
          {
            "condition_keys": [
              "iam:AWSServiceName"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new service-specific credential for an IAM user",
        "privilege": "CreateServiceSpecificCredential",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new IAM user",
        "privilege": "CreateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          },
          {
            "condition_keys": [
              "iam:PermissionsBoundary"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new virtual MFA device",
        "privilege": "CreateVirtualMFADevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mfa*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to deactivate the specified MFA device and remove its association with the IAM user for which it was originally enabled",
        "privilege": "DeactivateMFADevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the access key pair that is associated with the specified IAM user",
        "privilege": "DeleteAccessKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified AWS account alias",
        "privilege": "DeleteAccountAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to delete the password policy for the AWS account",
        "privilege": "DeleteAccountPasswordPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified IAM group",
        "privilege": "DeleteGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to delete the specified inline policy from its group",
        "privilege": "DeleteGroupPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified instance profile",
        "privilege": "DeleteInstanceProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance-profile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the password for the specified IAM user",
        "privilege": "DeleteLoginProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an OpenID Connect identity provider (IdP) resource object in IAM",
        "privilege": "DeleteOpenIDConnectProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "oidc-provider*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to delete the specified managed policy and remove it from any IAM entities (users, groups, or roles) to which it is attached",
        "privilege": "DeletePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to delete a version from the specified managed policy",
        "privilege": "DeletePolicyVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified role",
        "privilege": "DeleteRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to remove the permissions boundary from a role",
        "privilege": "DeleteRolePermissionsBoundary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          },
          {
            "condition_keys": [
              "iam:PermissionsBoundary"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to delete the specified inline policy from the specified role",
        "privilege": "DeleteRolePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          },
          {
            "condition_keys": [
              "iam:PermissionsBoundary"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a SAML provider resource in IAM",
        "privilege": "DeleteSAMLProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "saml-provider*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified SSH public key",
        "privilege": "DeleteSSHPublicKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified server certificate",
        "privilege": "DeleteServerCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "server-certificate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an IAM role that is linked to a specific AWS service, if the service is no longer using it",
        "privilege": "DeleteServiceLinkedRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified service-specific credential for an IAM user",
        "privilege": "DeleteServiceSpecificCredential",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a signing certificate that is associated with the specified IAM user",
        "privilege": "DeleteSigningCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified IAM user",
        "privilege": "DeleteUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to remove the permissions boundary from the specified IAM user",
        "privilege": "DeleteUserPermissionsBoundary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          },
          {
            "condition_keys": [
              "iam:PermissionsBoundary"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to delete the specified inline policy from an IAM user",
        "privilege": "DeleteUserPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          },
          {
            "condition_keys": [
              "iam:PermissionsBoundary"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a virtual MFA device",
        "privilege": "DeleteVirtualMFADevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mfa"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sms-mfa"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to detach a managed policy from the specified IAM group",
        "privilege": "DetachGroupPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          },
          {
            "condition_keys": [
              "iam:PolicyARN"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to detach a managed policy from the specified role",
        "privilege": "DetachRolePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          },
          {
            "condition_keys": [
              "iam:PolicyARN",
              "iam:PermissionsBoundary"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to detach a managed policy from the specified IAM user",
        "privilege": "DetachUserPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          },
          {
            "condition_keys": [
              "iam:PolicyARN",
              "iam:PermissionsBoundary"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable an MFA device and associate it with the specified IAM user",
        "privilege": "EnableMFADevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to generate a credential report for the AWS account",
        "privilege": "GenerateCredentialReport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to generate an access report for an AWS Organizations entity",
        "privilege": "GenerateOrganizationsAccessReport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "organizations:DescribePolicy",
              "organizations:ListChildren",
              "organizations:ListParents",
              "organizations:ListPoliciesForTarget",
              "organizations:ListRoots",
              "organizations:ListTargetsForPolicy"
            ],
            "resource_type": "access-report*"
          },
          {
            "condition_keys": [
              "iam:OrganizationsPolicyId"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to generate a service last accessed data report for an IAM resource",
        "privilege": "GenerateServiceLastAccessedDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about when the specified access key was last used",
        "privilege": "GetAccessKeyLastUsed",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about all IAM users, groups, roles, and policies in your AWS account, including their relationships to one another",
        "privilege": "GetAccountAuthorizationDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the password policy for the AWS account",
        "privilege": "GetAccountPasswordPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve information about IAM entity usage and IAM quotas in the AWS account",
        "privilege": "GetAccountSummary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of all of the context keys that are referenced in the specified policy",
        "privilege": "GetContextKeysForCustomPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of all context keys that are referenced in all IAM policies that are attached to the specified IAM identity (user, group, or role)",
        "privilege": "GetContextKeysForPrincipalPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a credential report for the AWS account",
        "privilege": "GetCredentialReport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of IAM users in the specified IAM group",
        "privilege": "GetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve an inline policy document that is embedded in the specified IAM group",
        "privilege": "GetGroupPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about the specified instance profile, including the instance profile's path, GUID, ARN, and role",
        "privilege": "GetInstanceProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance-profile*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve the user name and password creation date for the specified IAM user",
        "privilege": "GetLoginProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about the specified OpenID Connect (OIDC) provider resource in IAM",
        "privilege": "GetOpenIDConnectProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "oidc-provider*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve an AWS Organizations access report",
        "privilege": "GetOrganizationsAccessReport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about the specified managed policy, including the policy's default version and the total number of identities to which the policy is attached",
        "privilege": "GetPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about a version of the specified managed policy, including the policy document",
        "privilege": "GetPolicyVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about the specified role, including the role's path, GUID, ARN, and the role's trust policy",
        "privilege": "GetRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve an inline policy document that is embedded with the specified IAM role",
        "privilege": "GetRolePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the SAML provider metadocument that was uploaded when the IAM SAML provider resource was created or updated",
        "privilege": "GetSAMLProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "saml-provider*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the specified SSH public key, including metadata about the key",
        "privilege": "GetSSHPublicKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about the specified server certificate stored in IAM",
        "privilege": "GetServerCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "server-certificate*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about the service last accessed data report",
        "privilege": "GetServiceLastAccessedDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about the entities from the service last accessed data report",
        "privilege": "GetServiceLastAccessedDetailsWithEntities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve an IAM service-linked role deletion status",
        "privilege": "GetServiceLinkedRoleDeletionStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about the specified IAM user, including the user's creation date, path, unique ID, and ARN",
        "privilege": "GetUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve an inline policy document that is embedded in the specified IAM user",
        "privilege": "GetUserPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list information about the access key IDs that are associated with the specified IAM user",
        "privilege": "ListAccessKeys",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the account alias that is associated with the AWS account",
        "privilege": "ListAccountAliases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all managed policies that are attached to the specified IAM group",
        "privilege": "ListAttachedGroupPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all managed policies that are attached to the specified IAM role",
        "privilege": "ListAttachedRolePolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all managed policies that are attached to the specified IAM user",
        "privilege": "ListAttachedUserPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all IAM identities to which the specified managed policy is attached",
        "privilege": "ListEntitiesForPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the names of the inline policies that are embedded in the specified IAM group",
        "privilege": "ListGroupPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the IAM groups that have the specified path prefix",
        "privilege": "ListGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the IAM groups that the specified IAM user belongs to",
        "privilege": "ListGroupsForUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the instance profiles that have the specified path prefix",
        "privilege": "ListInstanceProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance-profile*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the instance profiles that have the specified associated IAM role",
        "privilege": "ListInstanceProfilesForRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the MFA devices for an IAM user",
        "privilege": "ListMFADevices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list information about the IAM OpenID Connect (OIDC) provider resource objects that are defined in the AWS account",
        "privilege": "ListOpenIDConnectProviders",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all managed policies",
        "privilege": "ListPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list information about the policies that grant an entity access to a specific service",
        "privilege": "ListPoliciesGrantingServiceAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list information about the versions of the specified managed policy, including the version that is currently set as the policy's default version",
        "privilege": "ListPolicyVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the names of the inline policies that are embedded in the specified IAM role",
        "privilege": "ListRolePolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the tags that are attached to the specified IAM role.",
        "privilege": "ListRoleTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the IAM roles that have the specified path prefix",
        "privilege": "ListRoles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the SAML provider resources in IAM",
        "privilege": "ListSAMLProviders",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list information about the SSH public keys that are associated with the specified IAM user",
        "privilege": "ListSSHPublicKeys",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the server certificates that have the specified path prefix",
        "privilege": "ListServerCertificates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the service-specific credentials that are associated with the specified IAM user",
        "privilege": "ListServiceSpecificCredentials",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list information about the signing certificates that are associated with the specified IAM user",
        "privilege": "ListSigningCertificates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the names of the inline policies that are embedded in the specified IAM user",
        "privilege": "ListUserPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the tags that are attached to the specified IAM user.",
        "privilege": "ListUserTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the IAM users that have the specified path prefix",
        "privilege": "ListUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list virtual MFA devices by assignment status",
        "privilege": "ListVirtualMFADevices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to pass a role to a service",
        "privilege": "PassRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          },
          {
            "condition_keys": [
              "iam:AssociatedResourceArn",
              "iam:PassedToService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to create or update an inline policy document that is embedded in the specified IAM group",
        "privilege": "PutGroupPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to set a managed policy as a permissions boundary for a role",
        "privilege": "PutRolePermissionsBoundary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          },
          {
            "condition_keys": [
              "iam:PermissionsBoundary"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to create or update an inline policy document that is embedded in the specified IAM role",
        "privilege": "PutRolePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          },
          {
            "condition_keys": [
              "iam:PermissionsBoundary"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to set a managed policy as a permissions boundary for an IAM user",
        "privilege": "PutUserPermissionsBoundary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          },
          {
            "condition_keys": [
              "iam:PermissionsBoundary"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to create or update an inline policy document that is embedded in the specified IAM user",
        "privilege": "PutUserPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          },
          {
            "condition_keys": [
              "iam:PermissionsBoundary"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove the client ID (audience) from the list of client IDs in the specified IAM OpenID Connect (OIDC) provider resource",
        "privilege": "RemoveClientIDFromOpenIDConnectProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "oidc-provider*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove an IAM role from the specified EC2 instance profile",
        "privilege": "RemoveRoleFromInstanceProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance-profile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove an IAM user from the specified group",
        "privilege": "RemoveUserFromGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reset the password for an existing service-specific credential for an IAM user",
        "privilege": "ResetServiceSpecificCredential",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to synchronize the specified MFA device with its IAM entity (user or role)",
        "privilege": "ResyncMFADevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to set the version of the specified policy as the policy's default version",
        "privilege": "SetDefaultPolicyVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to set the STS global endpoint token version",
        "privilege": "SetSecurityTokenServicePreferences",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to simulate whether an identity-based policy or resource-based policy provides permissions for specific API operations and resources",
        "privilege": "SimulateCustomPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to simulate whether an identity-based policy that is attached to a specified IAM entity (user or role) provides permissions for specific API operations and resources",
        "privilege": "SimulatePrincipalPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add tags to an IAM role.",
        "privilege": "TagRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add tags to an IAM user.",
        "privilege": "TagUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove the specified tags from the role.",
        "privilege": "UntagRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove the specified tags from the user.",
        "privilege": "UntagUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the status of the specified access key as Active or Inactive",
        "privilege": "UpdateAccessKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the password policy settings for the AWS account",
        "privilege": "UpdateAccountPasswordPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to update the policy that grants an IAM entity permission to assume a role",
        "privilege": "UpdateAssumeRolePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the name or path of the specified IAM group",
        "privilege": "UpdateGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change the password for the specified IAM user",
        "privilege": "UpdateLoginProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the entire list of server certificate thumbprints that are associated with an OpenID Connect (OIDC) provider resource",
        "privilege": "UpdateOpenIDConnectProviderThumbprint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "oidc-provider*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the description or maximum session duration setting of a role",
        "privilege": "UpdateRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update only the description of a role",
        "privilege": "UpdateRoleDescription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the metadata document for an existing SAML provider resource",
        "privilege": "UpdateSAMLProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "saml-provider*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the status of an IAM user's SSH public key to active or inactive",
        "privilege": "UpdateSSHPublicKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the name or the path of the specified server certificate stored in IAM",
        "privilege": "UpdateServerCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "server-certificate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the status of a service-specific credential to active or inactive for an IAM user",
        "privilege": "UpdateServiceSpecificCredential",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the status of the specified user signing certificate to active or disabled",
        "privilege": "UpdateSigningCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the name or the path of the specified IAM user",
        "privilege": "UpdateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to upload an SSH public key and associate it with the specified IAM user",
        "privilege": "UploadSSHPublicKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to upload a server certificate entity for the AWS account",
        "privilege": "UploadServerCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "server-certificate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to upload an X.509 signing certificate and associate it with the specified IAM user",
        "privilege": "UploadSigningCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:iam::${Account}:access-report/${EntityPath}",
        "condition_keys": [],
        "resource": "access-report"
      },
      {
        "arn": "arn:${Partition}:iam::${Account}:assumed-role/${RoleName}/${RoleSessionName}",
        "condition_keys": [],
        "resource": "assumed-role"
      },
      {
        "arn": "arn:${Partition}:iam::${Account}:federated-user/${UserName}",
        "condition_keys": [],
        "resource": "federated-user"
      },
      {
        "arn": "arn:${Partition}:iam::${Account}:group/${GroupNameWithPath}",
        "condition_keys": [],
        "resource": "group"
      },
      {
        "arn": "arn:${Partition}:iam::${Account}:instance-profile/${InstanceProfileNameWithPath}",
        "condition_keys": [],
        "resource": "instance-profile"
      },
      {
        "arn": "arn:${Partition}:iam::${Account}:mfa/${Path}/${MfaTokenId}",
        "condition_keys": [],
        "resource": "mfa"
      },
      {
        "arn": "arn:${Partition}:iam::${Account}:oidc-provider/${OidcProviderName}",
        "condition_keys": [],
        "resource": "oidc-provider"
      },
      {
        "arn": "arn:${Partition}:iam::${Account}:policy/${PolicyNameWithPath}",
        "condition_keys": [],
        "resource": "policy"
      },
      {
        "arn": "arn:${Partition}:iam::${Account}:role/${RoleNameWithPath}",
        "condition_keys": [
          "iam:ResourceTag/${TagKey}"
        ],
        "resource": "role"
      },
      {
        "arn": "arn:${Partition}:iam::${Account}:saml-provider/${SamlProviderName}",
        "condition_keys": [],
        "resource": "saml-provider"
      },
      {
        "arn": "arn:${Partition}:iam::${Account}:server-certificate/${CertificateNameWithPath}",
        "condition_keys": [],
        "resource": "server-certificate"
      },
      {
        "arn": "arn:${Partition}:iam::${Account}:sms-mfa/${MfaTokenIdWithPath}",
        "condition_keys": [],
        "resource": "sms-mfa"
      },
      {
        "arn": "arn:${Partition}:iam::${Account}:user/${UserNameWithPath}",
        "condition_keys": [
          "iam:ResourceTag/${TagKey}"
        ],
        "resource": "user"
      }
    ],
    "service_name": "Identity And Access Management"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions by the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions by tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions by the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "imagebuilder",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Cancel an image creation",
        "privilege": "CancelImageCreation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new component",
        "privilege": "CreateComponent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "component*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "kmsKey"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new distribution configuration",
        "privilege": "CreateDistributionConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distributionConfiguration*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new image",
        "privilege": "CreateImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "imagebuilder:GetImageRecipe",
              "imagebuilder:GetInfrastructureConfiguration"
            ],
            "resource_type": "image*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new image pipeline",
        "privilege": "CreateImagePipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "imagebuilder:GetImageRecipe"
            ],
            "resource_type": "imagePipeline*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new Image Recipe",
        "privilege": "CreateImageRecipe",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "imagebuilder:GetComponent"
            ],
            "resource_type": "imageRecipe*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new infrastructure configuration",
        "privilege": "CreateInfrastructureConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "infrastructureConfiguration*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a component",
        "privilege": "DeleteComponent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "component*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a distribution configuration",
        "privilege": "DeleteDistributionConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distributionConfiguration*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an image",
        "privilege": "DeleteImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an image pipeline",
        "privilege": "DeleteImagePipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "imagePipeline*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an image recipe",
        "privilege": "DeleteImageRecipe",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "imageRecipe*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an infrastructure configuration",
        "privilege": "DeleteInfrastructureConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "infrastructureConfiguration*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "View details about a component",
        "privilege": "GetComponent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "component*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "View the resource policy associated with a component",
        "privilege": "GetComponentPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "component*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "View details about a distribution configuration",
        "privilege": "GetDistributionConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distributionConfiguration*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "View details about an image",
        "privilege": "GetImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "View details about an image pipeline",
        "privilege": "GetImagePipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "imagePipeline*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "View the resource policy associated with an image",
        "privilege": "GetImagePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "View details about an image recipe",
        "privilege": "GetImageRecipe",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "imageRecipe*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "View the resource policy associated with an image recipe",
        "privilege": "GetImageRecipePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "imageRecipe*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "View details about an infrastructure configuration",
        "privilege": "GetInfrastructureConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "infrastructureConfiguration*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the component build versions in your account",
        "privilege": "ListComponentBuildVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "componentVersion*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the component versions owned by or shared with your account",
        "privilege": "ListComponents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the distribution configurations in your account",
        "privilege": "ListDistributionConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the image build versions in your account",
        "privilege": "ListImageBuildVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "imageVersion*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the image pipelines in your account",
        "privilege": "ListImagePipelines",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the image recipes owned by or shared with your account",
        "privilege": "ListImageRecipes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the image versions owned by or shared with your account",
        "privilege": "ListImages",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the infrastructure configurations in your account",
        "privilege": "ListInfrastructureConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "List tag for an Image Builder resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "component"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distributionConfiguration"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "imagePipeline"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "imageRecipe"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "infrastructureConfiguration"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Set the resource policy associated with a component",
        "privilege": "PutComponentPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "component*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Set the resource policy associated with an image",
        "privilege": "PutImagePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Set the resource policy associated with an image recipe",
        "privilege": "PutImageRecipePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "imageRecipe*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new image from a pipeline",
        "privilege": "StartImagePipelineExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "imagebuilder:GetImagePipeline"
            ],
            "resource_type": "imagePipeline*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Tag an Image Builder resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "component"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distributionConfiguration"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "imagePipeline"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "imageRecipe"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "infrastructureConfiguration"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Untag an Image Builder resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "component"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distributionConfiguration"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "image"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "imagePipeline"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "imageRecipe"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "infrastructureConfiguration"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update an existing distribution configuration",
        "privilege": "UpdateDistributionConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "distributionConfiguration*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update an existing image pipeline",
        "privilege": "UpdateImagePipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "imagePipeline*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update an existing infrastructure configuration",
        "privilege": "UpdateInfrastructureConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "infrastructureConfiguration*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:component/${ComponentName}/${ComponentVersion}/${ComponentBuildVersion}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "component"
      },
      {
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:component/${ComponentName}/${ComponentVersion}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "componentVersion"
      },
      {
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:distribution-configuration/${DistributionConfigurationName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "distributionConfiguration"
      },
      {
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:image/${ImageName}/${ImageVersion}/${ImageBuildVersion}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "image"
      },
      {
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:image/${ImageName}/${ImageVersion}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "imageVersion"
      },
      {
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:image-recipe/${ImageRecipeName}/${ImageRecipeVersion}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "imageRecipe"
      },
      {
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:image-pipeline/${ImagePipelineName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "imagePipeline"
      },
      {
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:infrastructure-configuration/${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "infrastructureConfiguration"
      },
      {
        "arn": "arn:${Partition}:kms:${Region}:${Account}:key/${KeyId}",
        "condition_keys": [],
        "resource": "kmsKey"
      }
    ],
    "service_name": "Amazon EC2 Image Builder"
  },
  {
    "conditions": [],
    "prefix": "importexport",
    "privileges": [
      {
        "access_level": "Write",
        "description": "This action cancels a specified job. Only the job owner can cancel it. The action fails if the job has already started or is complete.",
        "privilege": "CancelJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action initiates the process of scheduling an upload or download of your data.",
        "privilege": "CreateJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This action generates a pre-paid shipping label that you will use to ship your device to AWS for processing.",
        "privilege": "GetShippingLabel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This action returns information about a job, including where the job is in the processing pipeline, the status of the results, and the signature value associated with the job.",
        "privilege": "GetStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "This action returns the jobs associated with the requester.",
        "privilege": "ListJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "You use this action to change the parameters specified in the original manifest file by supplying a new manifest file.",
        "privilege": "UpdateJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Import Export Disk Service"
  },
  {
    "conditions": [],
    "prefix": "inspector",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Assigns attributes (key and value pairs) to the findings that are specified by the ARNs of the findings.",
        "privilege": "AddAttributesToFindings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new assessment target using the ARN of the resource group that is generated by CreateResourceGroup.",
        "privilege": "CreateAssessmentTarget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an assessment template for the assessment target that is specified by the ARN of the assessment target.",
        "privilege": "CreateAssessmentTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a resource group using the specified set of tags (key and value pairs) that are used to select the EC2 instances to be included in an Amazon Inspector assessment target.",
        "privilege": "CreateResourceGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the assessment run that is specified by the ARN of the assessment run.",
        "privilege": "DeleteAssessmentRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the assessment target that is specified by the ARN of the assessment target.",
        "privilege": "DeleteAssessmentTarget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the assessment template that is specified by the ARN of the assessment template.",
        "privilege": "DeleteAssessmentTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the assessment runs that are specified by the ARNs of the assessment runs.",
        "privilege": "DescribeAssessmentRuns",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the assessment targets that are specified by the ARNs of the assessment targets.",
        "privilege": "DescribeAssessmentTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the assessment templates that are specified by the ARNs of the assessment templates.",
        "privilege": "DescribeAssessmentTemplates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the IAM role that enables Amazon Inspector to access your AWS account.",
        "privilege": "DescribeCrossAccountAccessRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the findings that are specified by the ARNs of the findings.",
        "privilege": "DescribeFindings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the resource groups that are specified by the ARNs of the resource groups.",
        "privilege": "DescribeResourceGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the rules packages that are specified by the ARNs of the rules packages.",
        "privilege": "DescribeRulesPackages",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Information about the data that is collected for the specified assessment run.",
        "privilege": "GetTelemetryMetadata",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the agents of the assessment runs that are specified by the ARNs of the assessment runs.",
        "privilege": "ListAssessmentRunAgents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the assessment runs that correspond to the assessment templates that are specified by the ARNs of the assessment templates.",
        "privilege": "ListAssessmentRuns",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the ARNs of the assessment targets within this AWS account.",
        "privilege": "ListAssessmentTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the assessment templates that correspond to the assessment targets that are specified by the ARNs of the assessment targets.",
        "privilege": "ListAssessmentTemplates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the event subscriptions for the assessment template that is specified by the ARN of the assessment template.",
        "privilege": "ListEventSubscriptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists findings that are generated by the assessment runs that are specified by the ARNs of the assessment runs.",
        "privilege": "ListFindings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all available Amazon Inspector rules packages.",
        "privilege": "ListRulesPackages",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all tags associated with an assessment template.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Previews the agents installed on the EC2 instances that are part of the specified assessment target.",
        "privilege": "PreviewAgents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers the IAM role that Amazon Inspector uses to list your EC2 instances at the start of the assessment run or when you call the PreviewAgents action.",
        "privilege": "RegisterCrossAccountAccessRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes entire attributes (key and value pairs) from the findings that are specified by the ARNs of the findings where an attribute with the specified key exists.",
        "privilege": "RemoveAttributesFromFindings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Sets tags (key and value pairs) to the assessment template that is specified by the ARN of the assessment template.",
        "privilege": "SetTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts the assessment run specified by the ARN of the assessment template.",
        "privilege": "StartAssessmentRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops the assessment run that is specified by the ARN of the assessment run.",
        "privilege": "StopAssessmentRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a specified SNS topic.",
        "privilege": "SubscribeToEvent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a specified SNS topic.",
        "privilege": "UnsubscribeFromEvent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the assessment target that is specified by the ARN of the assessment target.",
        "privilege": "UpdateAssessmentTarget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon Inspector"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "A tag key that is present in the request that the user makes to IoT.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "The tag key component of a tag attached to an IoT resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "The list of all the tag key names associated with the resource in the request.",
        "type": "String"
      },
      {
        "condition": "iot:Delete",
        "description": "The flag indicating whether or not to also delete an IoT Tunnel immediately",
        "type": "Bool"
      },
      {
        "condition": "iot:ThingGroupArn",
        "description": "The list of all IoT Thing Group ARNs that the destination IoT Thing belongs to for an IoT Tunnel",
        "type": "String"
      },
      {
        "condition": "iot:TunnelDestinationService",
        "description": "The list of all destination services for an IoT Tunnel",
        "type": "String"
      }
    ],
    "prefix": "iot",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Accepts a pending certificate transfer.",
        "privilege": "AcceptCertificateTransfer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds a thing to the specified billing group.",
        "privilege": "AddThingToBillingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "billinggroup*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds a thing to the specified thing group.",
        "privilege": "AddThingToThingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates a group with a continuous job.",
        "privilege": "AssociateTargetsWithJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Attaches a policy to the specified target.",
        "privilege": "AttachPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cert"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Attaches the specified policy to the specified principal (certificate or other credential).",
        "privilege": "AttachPrincipalPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cert"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates a Device Defender security profile with a thing group or with this account.",
        "privilege": "AttachSecurityProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securityprofile*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Attaches the specified principal to the specified thing.",
        "privilege": "AttachThingPrincipal",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancels an audit that is in progress. The audit can be either scheduled or on-demand.",
        "privilege": "CancelAuditTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancels a pending transfer for the specified certificate.",
        "privilege": "CancelCertificateTransfer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancels a job.",
        "privilege": "CancelJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancels a job execution on a particular device.",
        "privilege": "CancelJobExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Clears the default authorizer.",
        "privilege": "ClearDefaultAuthorizer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Closes a tunnel.",
        "privilege": "CloseTunnel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "tunnel*"
          },
          {
            "condition_keys": [
              "iot:Delete"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Connect as the specified client",
        "privilege": "Connect",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "client*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an authorizer.",
        "privilege": "CreateAuthorizer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "authorizer*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a billing group.",
        "privilege": "CreateBillingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "billinggroup*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an X.509 certificate using the specified certificate signing request.",
        "privilege": "CreateCertificateFromCsr",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a Dynamic Thing Group",
        "privilege": "CreateDynamicThingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dynamicthinggroup*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a job.",
        "privilege": "CreateJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a 2048 bit RSA key pair and issues an X.509 certificate using the issued public key.",
        "privilege": "CreateKeysAndCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an OTA update job.",
        "privilege": "CreateOTAUpdate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "otaupdate*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an AWS IoT policy.",
        "privilege": "CreatePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new version of the specified AWS IoT policy.",
        "privilege": "CreatePolicyVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a provisioning claim.",
        "privilege": "CreateProvisioningClaim",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "provisioningtemplate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a fleet provisioning template.",
        "privilege": "CreateProvisioningTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "provisioningtemplate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new version of a fleet provisioning template.",
        "privilege": "CreateProvisioningTemplateVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "provisioningtemplate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a role alias.",
        "privilege": "CreateRoleAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rolealias*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a scheduled audit that is run at a specified time interval.",
        "privilege": "CreateScheduledAudit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "scheduledaudit*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a Device Defender security profile.",
        "privilege": "CreateSecurityProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securityprofile*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new AWS IoT stream",
        "privilege": "CreateStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a thing in the thing registry.",
        "privilege": "CreateThing",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "billinggroup"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a thing group.",
        "privilege": "CreateThingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a new thing type.",
        "privilege": "CreateThingType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thingtype*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a rule.",
        "privilege": "CreateTopicRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the audit configuration associated with the account.",
        "privilege": "DeleteAccountAuditConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified authorizer.",
        "privilege": "DeleteAuthorizer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "authorizer*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Deletes the specified billing group.",
        "privilege": "DeleteBillingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "billinggroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a registered CA certificate.",
        "privilege": "DeleteCACertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cacert*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified certificate.",
        "privilege": "DeleteCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cert*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Deletes the specified Dynamic Thing Group",
        "privilege": "DeleteDynamicThingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dynamicthinggroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a job and its related job executions.",
        "privilege": "DeleteJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a job execution.",
        "privilege": "DeleteJobExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an OTA update job.",
        "privilege": "DeleteOTAUpdate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "otaupdate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified policy.",
        "privilege": "DeletePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified version of the specified policy.",
        "privilege": "DeletePolicyVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a fleet provisioning template.",
        "privilege": "DeleteProvisioningTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "provisioningtemplate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a fleet provisioning template version.",
        "privilege": "DeleteProvisioningTemplateVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "provisioningtemplate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a CA certificate registration code.",
        "privilege": "DeleteRegistrationCode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified role alias.",
        "privilege": "DeleteRoleAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rolealias*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a scheduled audit.",
        "privilege": "DeleteScheduledAudit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "scheduledaudit*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a Device Defender security profile.",
        "privilege": "DeleteSecurityProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securityprofile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specified stream.",
        "privilege": "DeleteStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified thing.",
        "privilege": "DeleteThing",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Deletes the specified thing group.",
        "privilege": "DeleteThingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified thing shadow.",
        "privilege": "DeleteThingShadow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Deletes the specified thing type.",
        "privilege": "DeleteThingType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thingtype*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified rule.",
        "privilege": "DeleteTopicRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified v2 logging level.",
        "privilege": "DeleteV2LoggingLevel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deprecates the specified thing type.",
        "privilege": "DeprecateThingType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thingtype*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about audit configurations for the account.",
        "privilege": "DescribeAccountAuditConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about a Device Defender audit.",
        "privilege": "DescribeAuditTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an authorizer.",
        "privilege": "DescribeAuthorizer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "authorizer*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about the specified billing group.",
        "privilege": "DescribeBillingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "billinggroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a registered CA certificate.",
        "privilege": "DescribeCACertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cacert*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about the specified certificate.",
        "privilege": "DescribeCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cert*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the default authorizer.",
        "privilege": "DescribeDefaultAuthorizer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a unique endpoint specific to the AWS account making the call.",
        "privilege": "DescribeEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns account event configurations.",
        "privilege": "DescribeEventConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about the specified index.",
        "privilege": "DescribeIndex",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a job.",
        "privilege": "DescribeJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a job execution.",
        "privilege": "DescribeJobExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a fleet provisioning template.",
        "privilege": "DescribeProvisioningTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "provisioningtemplate*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a fleet provisioning template version.",
        "privilege": "DescribeProvisioningTemplateVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "provisioningtemplate*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a role alias.",
        "privilege": "DescribeRoleAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rolealias*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about a scheduled audit.",
        "privilege": "DescribeScheduledAudit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "scheduledaudit*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about a Device Defender security profile.",
        "privilege": "DescribeSecurityProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securityprofile*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about the specified stream.",
        "privilege": "DescribeStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about the specified thing.",
        "privilege": "DescribeThing",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about the specified thing group.",
        "privilege": "DescribeThingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about the bulk thing registration task.",
        "privilege": "DescribeThingRegistrationTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about the specified thing type.",
        "privilege": "DescribeThingType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thingtype*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a tunnel.",
        "privilege": "DescribeTunnel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "tunnel*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Detaches a policy from the specified target.",
        "privilege": "DetachPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cert"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Removes the specified policy from the specified certificate.",
        "privilege": "DetachPrincipalPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cert"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates a Device Defender security profile from a thing group or from this account.",
        "privilege": "DetachSecurityProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securityprofile*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Detaches the specified principal from the specified thing.",
        "privilege": "DetachThingPrincipal",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disables the specified rule.",
        "privilege": "DisableTopicRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the specified rule.",
        "privilege": "EnableTopicRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get cardinality for IoT fleet index",
        "privilege": "GetCardinality",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets effective policies.",
        "privilege": "GetEffectivePolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cert"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets current fleet indexing configuration",
        "privilege": "GetIndexingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a job document.",
        "privilege": "GetJobDocument",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the logging options.",
        "privilege": "GetLoggingOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the information about the OTA update job.",
        "privilege": "GetOTAUpdate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "otaupdate*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the list of all jobs for a thing that are not in a terminal state.",
        "privilege": "GetPendingJobExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get percentiles for IoT fleet index",
        "privilege": "GetPercentiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about the specified policy with the policy document of the default version.",
        "privilege": "GetPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about the specified policy version.",
        "privilege": "GetPolicyVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a registration code used to register a CA certificate with AWS IoT.",
        "privilege": "GetRegistrationCode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get statistics for IoT fleet index",
        "privilege": "GetStatistics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the thing shadow.",
        "privilege": "GetThingShadow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about the specified rule.",
        "privilege": "GetTopicRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets v2 logging options.",
        "privilege": "GetV2LoggingOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the active violations for a given Device Defender security profile or Thing.",
        "privilege": "ListActiveViolations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securityprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the policies attached to the specified thing group.",
        "privilege": "ListAttachedPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the findings (results) of a Device Defender audit or of the audits performed during a specified time period.",
        "privilege": "ListAuditFindings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the Device Defender audits that have been performed during a given time period.",
        "privilege": "ListAuditTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the authorizers registered in your account.",
        "privilege": "ListAuthorizers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all billing groups.",
        "privilege": "ListBillingGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the CA certificates registered for your AWS account.",
        "privilege": "ListCACertificates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists your certificates.",
        "privilege": "ListCertificates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the device certificates signed by the specified CA certificate.",
        "privilege": "ListCertificatesByCA",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all indices for fleet index",
        "privilege": "ListIndices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the job executions for a job.",
        "privilege": "ListJobExecutionsForJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the job executions for the specified thing.",
        "privilege": "ListJobExecutionsForThing",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists jobs.",
        "privilege": "ListJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists OTA update jobs in the account.",
        "privilege": "ListOTAUpdates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists certificates that are being transfered but not yet accepted.",
        "privilege": "ListOutgoingCertificates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists your policies.",
        "privilege": "ListPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the principals associated with the specified policy.",
        "privilege": "ListPolicyPrincipals",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the versions of the specified policy, and identifies the default version.",
        "privilege": "ListPolicyVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the policies attached to the specified principal. If you use an Amazon Cognito identity, the ID needs to be in Amazon Cognito Identity format.",
        "privilege": "ListPrincipalPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the things associated with the specified principal.",
        "privilege": "ListPrincipalThings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "A list of fleet provisioning template versions.",
        "privilege": "ListProvisioningTemplateVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "provisioningtemplate*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the fleet provisioning templates in your AWS account.",
        "privilege": "ListProvisioningTemplates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists role aliases.",
        "privilege": "ListRoleAliases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all of your scheduled audits.",
        "privilege": "ListScheduledAudits",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the Device Defender security profiles you have created.",
        "privilege": "ListSecurityProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the Device Defender security profiles attached to a target.",
        "privilege": "ListSecurityProfilesForTarget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the streams in your account.",
        "privilege": "ListStreams",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all tags for a given resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "billinggroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dynamicthinggroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "otaupdate"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "scheduledaudit"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securityprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thingtype"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List targets for the specified policy.",
        "privilege": "ListTargetsForPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the targets associated with a given Device Defender security profile.",
        "privilege": "ListTargetsForSecurityProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securityprofile*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all thing groups.",
        "privilege": "ListThingGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List thing groups to which the specified thing belongs.",
        "privilege": "ListThingGroupsForThing",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the principals associated with the specified thing.",
        "privilege": "ListThingPrincipals",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists information about bulk thing registration tasks.",
        "privilege": "ListThingRegistrationTaskReports",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists bulk thing registration tasks.",
        "privilege": "ListThingRegistrationTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all thing types.",
        "privilege": "ListThingTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all things.",
        "privilege": "ListThings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all things in the specified billing group.",
        "privilege": "ListThingsInBillingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "billinggroup*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all things in the specified thing group.",
        "privilege": "ListThingsInThingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the rules for the specific topic.",
        "privilege": "ListTopicRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists tunnels.",
        "privilege": "ListTunnels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the v2 logging levels.",
        "privilege": "ListV2LoggingLevels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the Device Defender security profile violations discovered during the given time period.",
        "privilege": "ListViolationEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securityprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Opens a tunnel.",
        "privilege": "OpenTunnel",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "iot:ThingGroupArn",
              "iot:TunnelDestinationService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Publish to the specified topic.",
        "privilege": "Publish",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "topic*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Receive from the specified topic.",
        "privilege": "Receive",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "topic*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers a CA certificate with AWS IoT.",
        "privilege": "RegisterCACertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers a device certificate with AWS IoT.",
        "privilege": "RegisterCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers a device certificate with AWS IoT without a registered CA (certificate authority).",
        "privilege": "RegisterCertificateWithoutCA",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers your thing.",
        "privilege": "RegisterThing",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Rejects a pending certificate transfer.",
        "privilege": "RejectCertificateTransfer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cert*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes thing from the specified billing group.",
        "privilege": "RemoveThingFromBillingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "billinggroup*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes thing from the specified thing group.",
        "privilege": "RemoveThingFromThingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Replaces the specified rule.",
        "privilege": "ReplaceTopicRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Search IoT fleet index",
        "privilege": "SearchIndex",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Sets the default authorizer. This will be used if a websocket connection is made without specifying an authorizer.",
        "privilege": "SetDefaultAuthorizer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "authorizer*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Sets the specified version of the specified policy as the policy's default (operative) version.",
        "privilege": "SetDefaultPolicyVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the logging options.",
        "privilege": "SetLoggingOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the v2 logging level.",
        "privilege": "SetV2LoggingLevel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the v2 logging options.",
        "privilege": "SetV2LoggingOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Gets and starts the next pending job execution for a thing.",
        "privilege": "StartNextPendingJobExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts an on-demand Device Defender audit.",
        "privilege": "StartOnDemandAuditTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a bulk thing registration task.",
        "privilege": "StartThingRegistrationTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a bulk thing registration task.",
        "privilege": "StopThingRegistrationTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Subscribe to the specified TopicFilter.",
        "privilege": "Subscribe",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "topicfilter*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Tag a specified resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "billinggroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dynamicthinggroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "otaupdate"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "scheduledaudit"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securityprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thingtype"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Test the policies evaluation for group policies",
        "privilege": "TestAuthorization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cert"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Invoke the specified custom authorizer for testing purposes.",
        "privilege": "TestInvokeAuthorizer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "authorizer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Transfers the specified certificate to the specified AWS account.",
        "privilege": "TransferCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cert*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Untag a specified resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "billinggroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dynamicthinggroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "otaupdate"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "scheduledaudit"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securityprofile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thingtype"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Configures or reconfigures the Device Defender audit settings for this account.",
        "privilege": "UpdateAccountAuditConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an authorizer",
        "privilege": "UpdateAuthorizer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "authorizer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates information associated with the specified billing group.",
        "privilege": "UpdateBillingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "billinggroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a registered CA certificate.",
        "privilege": "UpdateCACertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cacert*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the status of the specified certificate. This operation is idempotent.",
        "privilege": "UpdateCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cert*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a Dynamic Thing Group",
        "privilege": "UpdateDynamicThingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dynamicthinggroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates event configurations.",
        "privilege": "UpdateEventConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates fleet indexing configuration",
        "privilege": "UpdateIndexingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a job.",
        "privilege": "UpdateJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a job execution.",
        "privilege": "UpdateJobExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a fleet provisioning template.",
        "privilege": "UpdateProvisioningTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "provisioningtemplate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the role alias",
        "privilege": "UpdateRoleAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rolealias*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a scheduled audit, including what checks are performed and how often the audit takes place.",
        "privilege": "UpdateScheduledAudit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "scheduledaudit*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a Device Defender security profile.",
        "privilege": "UpdateSecurityProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securityprofile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the data for a stream.",
        "privilege": "UpdateStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates information associated with the specified thing.",
        "privilege": "UpdateThing",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates information associated with the specified thing group.",
        "privilege": "UpdateThingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the thing groups to which the thing belongs.",
        "privilege": "UpdateThingGroupsForThing",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thinggroup"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the thing shadow.",
        "privilege": "UpdateThingShadow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "thing*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Validates a Device Defender security profile behaviors specification.",
        "privilege": "ValidateSecurityProfileBehaviors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:client/${ClientId}",
        "condition_keys": [],
        "resource": "client"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:index/${IndexName}",
        "condition_keys": [],
        "resource": "index"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:job/${JobId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "job"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:tunnel/${TunnelId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "tunnel"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:thing/${ThingName}",
        "condition_keys": [],
        "resource": "thing"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:thinggroup/${ThingGroupName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "thinggroup"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:billinggroup/${BillingGroupName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "billinggroup"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:thinggroup/${ThingGroupName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "dynamicthinggroup"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:thingtype/${ThingTypeName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "thingtype"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:topic/${TopicName}",
        "condition_keys": [],
        "resource": "topic"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:topicfilter/${TopicFilter}",
        "condition_keys": [],
        "resource": "topicfilter"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:rolealias/${RoleAlias}",
        "condition_keys": [],
        "resource": "rolealias"
      },
      {
        "arn": "arn:${Partition}:iam::${Account}:role/${Role}",
        "condition_keys": [],
        "resource": "role"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:authorizer/${AuthorizerName}",
        "condition_keys": [],
        "resource": "authorizer"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:policy/${PolicyName}",
        "condition_keys": [],
        "resource": "policy"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:cert/${Certificate}",
        "condition_keys": [],
        "resource": "cert"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:cacert/${CACertificate}",
        "condition_keys": [],
        "resource": "cacert"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:stream/${streamId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "stream"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:otaupdate/${otaUpdateId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "otaupdate"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:scheduledaudit/${ScheduleName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "scheduledaudit"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:securityprofile/${SecurityProfileName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "securityprofile"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:rule/${ruleName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "rule"
      },
      {
        "arn": "arn:${Partition}:iot:${Region}:${Account}:provisioningtemplate/${provisioningTemplate}",
        "condition_keys": [],
        "resource": "provisioningtemplate"
      }
    ],
    "service_name": "AWS IoT"
  },
  {
    "conditions": [],
    "prefix": "iot-device-tester",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Grants permission for IoT Device Tester to check if a given set of product, test suite and device tester version are compatible",
        "privilege": "CheckVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission for IoT Device Tester to download compatible test suite versions",
        "privilege": "DownloadTestSuite",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission for IoT Device Tester to get information on latest version of device tester available",
        "privilege": "LatestIdt",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permissions for IoT Device Tester to send usage metrics on your behalf",
        "privilege": "SendMetrics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission for IoT Device Tester to get list of supported products and test suite versions",
        "privilege": "SupportedVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS IoT Device Tester"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "A tag key that is present in the request that the user makes to IoT 1-Click.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "The preface string for a tag key and value pair attached to an IoT 1-Click resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "The list of all the tag key names associated with the IoT 1-Click resource in the request.",
        "type": "String"
      }
    ],
    "prefix": "iot1click",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Associate a device to a placement",
        "privilege": "AssociateDeviceWithPlacement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Claim a batch of devices with a claim code.",
        "privilege": "ClaimDevicesByClaimCode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new placement in a project",
        "privilege": "CreatePlacement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new project",
        "privilege": "CreateProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a placement from a project",
        "privilege": "DeletePlacement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a project",
        "privilege": "DeleteProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe a device",
        "privilege": "DescribeDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe a placement",
        "privilege": "DescribePlacement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe a project",
        "privilege": "DescribeProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociate a device from a placement",
        "privilege": "DisassociateDeviceFromPlacement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Finalize a device claim",
        "privilege": "FinalizeDeviceClaim",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get available methods of a device",
        "privilege": "GetDeviceMethods",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get devices associated to a placement",
        "privilege": "GetDevicesInPlacement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Initialize a device claim",
        "privilege": "InitiateDeviceClaim",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Invoke a device method",
        "privilege": "InvokeDeviceMethod",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "List past events published by a device",
        "privilege": "ListDeviceEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all devices",
        "privilege": "ListDevices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "List placements in a project",
        "privilege": "ListPlacements",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all projects",
        "privilege": "ListProjects",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the tags (metadata) which you have assigned to the resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds to or modifies the tags of the given resource. Tags are metadata which can be used to manage a resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Unclaim a device",
        "privilege": "UnclaimDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes the given tags (metadata) from the resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update device state",
        "privilege": "UpdateDeviceState",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update a placement",
        "privilege": "UpdatePlacement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update a project",
        "privilege": "UpdateProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:iot1click:${Region}:${Account}:devices/${DeviceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "device"
      },
      {
        "arn": "arn:${Partition}:iot1click:${Region}:${Account}:projects/${ProjectName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "project"
      }
    ],
    "service_name": "AWS IoT 1-Click"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "A tag key that is present in the request that the user makes to IoT Analytics.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "The list of all the tag key names associated with the IoT Analytics resource in the request.",
        "type": "String"
      },
      {
        "condition": "iotanalytics:ResourceTag/${TagKey}",
        "description": "The preface string for a tag key and value pair attached to an IoT Analytics resource.",
        "type": "String"
      }
    ],
    "prefix": "iotanalytics",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Puts a batch of messages into the specified channel.",
        "privilege": "BatchPutMessage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancels reprocessing for the specified pipeline.",
        "privilege": "CancelPipelineReprocessing",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a channel.",
        "privilege": "CreateChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a dataset.",
        "privilege": "CreateDataset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Generates content of the specified dataset (by executing the dataset actions).",
        "privilege": "CreateDatasetContent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a datastore.",
        "privilege": "CreateDatastore",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datastore*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a pipeline.",
        "privilege": "CreatePipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified channel.",
        "privilege": "DeleteChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified dataset.",
        "privilege": "DeleteDataset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the content of the specified dataset.",
        "privilege": "DeleteDatasetContent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified datastore.",
        "privilege": "DeleteDatastore",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datastore*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified pipeline.",
        "privilege": "DeletePipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified channel.",
        "privilege": "DescribeChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified dataset.",
        "privilege": "DescribeDataset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified datastore.",
        "privilege": "DescribeDatastore",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datastore*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes logging options for the the account.",
        "privilege": "DescribeLoggingOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified pipeline.",
        "privilege": "DescribePipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the content of the specified dataset.",
        "privilege": "GetDatasetContent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the channels for the account.",
        "privilege": "ListChannels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the datasets for the account.",
        "privilege": "ListDatasets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the datastores for the account.",
        "privilege": "ListDatastores",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the pipelines for the account.",
        "privilege": "ListPipelines",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the tags (metadata) which you have assigned to the resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datastore"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Puts logging options for the the account.",
        "privilege": "PutLoggingOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Runs the specified pipeline activity.",
        "privilege": "RunPipelineActivity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Samples the specified channel's data.",
        "privilege": "SampleChannelData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts reprocessing for the specified pipeline.",
        "privilege": "StartPipelineReprocessing",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds to or modifies the tags of the given resource. Tags are metadata which can be used to manage a resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datastore"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes the given tags (metadata) from the resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datastore"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified channel.",
        "privilege": "UpdateChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified dataset.",
        "privilege": "UpdateDataset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified datastore.",
        "privilege": "UpdateDatastore",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datastore*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified pipeline.",
        "privilege": "UpdatePipeline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pipeline*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:iotanalytics:${Region}:${Account}:channel/${ChannelName}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "iotanalytics:ResourceTag/${TagKey}"
        ],
        "resource": "channel"
      },
      {
        "arn": "arn:${Partition}:iotanalytics:${Region}:${Account}:dataset/${DatasetName}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "iotanalytics:ResourceTag/${TagKey}"
        ],
        "resource": "dataset"
      },
      {
        "arn": "arn:${Partition}:iotanalytics:${Region}:${Account}:datastore/${DatastoreName}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "iotanalytics:ResourceTag/${TagKey}"
        ],
        "resource": "datastore"
      },
      {
        "arn": "arn:${Partition}:iotanalytics:${Region}:${Account}:pipeline/${PipelineName}",
        "condition_keys": [
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "iotanalytics:ResourceTag/${TagKey}"
        ],
        "resource": "pipeline"
      }
    ],
    "service_name": "AWS IoT Analytics"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "A tag key that is present in the request that the user makes to IoT Events.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "The tag key by which a tag value is attached to an IoT Events resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "The list of all the tag key names associated with the IoT Events resource in the request.",
        "type": "String"
      }
    ],
    "prefix": "iotevents",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Sends a set of messages to the AWS IoT Events system.",
        "privilege": "BatchPutMessage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update an detector within the AWS IoT Events system.",
        "privilege": "BatchUpdateDetector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a detector model.",
        "privilege": "CreateDetectorModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detectorModel*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an input.",
        "privilege": "CreateInput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a detector model.",
        "privilege": "DeleteDetectorModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detectorModel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an input.",
        "privilege": "DeleteInput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the specified detector (instance).",
        "privilege": "DescribeDetector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detectorModel*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a detector model.",
        "privilege": "DescribeDetectorModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detectorModel*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an input.",
        "privilege": "DescribeInput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the current settings of the AWS IoT Events logging options.",
        "privilege": "DescribeLoggingOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the versions of a detector model. Only the metadata associated with each detector model version is returned.",
        "privilege": "ListDetectorModelVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detectorModel*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the detector models you have created. Only the metadata associated with each detector model is returned.",
        "privilege": "ListDetectorModels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists detectors (the instances of a detector model).",
        "privilege": "ListDetectors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detectorModel*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the inputs you have created.",
        "privilege": "ListInputs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the tags (metadata) which you have assigned to the resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detectorModel"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets or updates the AWS IoT Events logging options.",
        "privilege": "PutLoggingOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds to or modifies the tags of the given resource. Tags are metadata which can be used to manage a resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detectorModel"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes the given tags (metadata) from the resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detectorModel"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a detector model.",
        "privilege": "UpdateDetectorModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "detectorModel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an input.",
        "privilege": "UpdateInput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates input routing.",
        "privilege": "UpdateInputRouting",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:iotevents:${Region}:${Account}:detectorModel/${DetectorModelName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "detectorModel"
      },
      {
        "arn": "arn:${Partition}:iotevents:${Region}:${Account}:input/${inputName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "input"
      }
    ],
    "service_name": "AWS IoT Events"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on the tags associated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the tag keys that are passed in the request",
        "type": "String"
      },
      {
        "condition": "iotsitewise:assetHierarchyPath",
        "description": "String of asset IDs in the asset hierarchy separated by forward slash.",
        "type": "String"
      },
      {
        "condition": "iotsitewise:childAssetId",
        "description": "ID of an asset being associated as a child to another asset.",
        "type": "String"
      },
      {
        "condition": "iotsitewise:group",
        "description": "Group ID.",
        "type": "String"
      },
      {
        "condition": "iotsitewise:portal",
        "description": "Portal ID.",
        "type": "String"
      },
      {
        "condition": "iotsitewise:project",
        "description": "Project ID.",
        "type": "String"
      },
      {
        "condition": "iotsitewise:propertyId",
        "description": "Property ID.",
        "type": "String"
      },
      {
        "condition": "iotsitewise:user",
        "description": "User ID.",
        "type": "String"
      }
    ],
    "prefix": "iotsitewise",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Associate child assets to the parent via specified model hiearchy.",
        "privilege": "AssociateAssets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate assets to a specified project.",
        "privilege": "BatchAssociateProjectAssets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate assets from a specified project.",
        "privilege": "BatchDisassociateProjectAssets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Puts batch of property values for the specified properties.",
        "privilege": "BatchPutAssetPropertyValue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to create access policy for a specified portal or a project.",
        "privilege": "CreateAccessPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "portal"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an asset.",
        "privilege": "CreateAsset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset-model*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an asset model.",
        "privilege": "CreateAssetModel",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a dashboard within a specified project.",
        "privilege": "CreateDashboard",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a gateway.",
        "privilege": "CreateGateway",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a portal.",
        "privilege": "CreatePortal",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [
              "sso:CreateManagedApplicationInstance",
              "sso:DescribeRegisteredRegions"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a project within a specified portal.",
        "privilege": "CreateProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "portal*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to delete a specified access policy.",
        "privilege": "DeleteAccessPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "access-policy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified asset.",
        "privilege": "DeleteAsset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified asset model.",
        "privilege": "DeleteAssetModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset-model*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a specified dashboard.",
        "privilege": "DeleteDashboard",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified gateway.",
        "privilege": "DeleteGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a specified portal.",
        "privilege": "DeletePortal",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "sso:DeleteManagedApplicationInstance"
            ],
            "resource_type": "portal*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a specified project.",
        "privilege": "DeleteProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to describe a specified access policy.",
        "privilege": "DescribeAccessPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "access-policy*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified asset.",
        "privilege": "DescribeAsset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified asset model.",
        "privilege": "DescribeAssetModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset-model*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified asset property.",
        "privilege": "DescribeAssetProperty",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe a specified dashboard.",
        "privilege": "DescribeDashboard",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the gateway for the account.",
        "privilege": "DescribeGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified gateway capability configuration.",
        "privilege": "DescribeGatewayCapabilityConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the logging options for the account.",
        "privilege": "DescribeLoggingOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe a specified portal.",
        "privilege": "DescribePortal",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "portal*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe a specified project.",
        "privilege": "DescribeProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociate child assets from the parent for specified model hiearchy.",
        "privilege": "DisassociateAssets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Fetches the aggregated property values for the specified property.",
        "privilege": "GetAssetPropertyAggregates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Fetches the latest property value for the specified property.",
        "privilege": "GetAssetPropertyValue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Fetches the property value history for the specified property.",
        "privilege": "GetAssetPropertyValueHistory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to list access policies for a specified portal or a project.",
        "privilege": "ListAccessPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "portal"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the asset models for the account.",
        "privilege": "ListAssetModels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the assets for the account.",
        "privilege": "ListAssets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset-model"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the assets associated to the parent via specified model hiearchy.",
        "privilege": "ListAssociatedAssets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list dashboards within a specified project.",
        "privilege": "ListDashboards",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the gateways for the account.",
        "privilege": "ListGateways",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list portals in the account.",
        "privilege": "ListPortals",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list assets associated with a specified project.",
        "privilege": "ListProjectAssets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list projects within a specified portal.",
        "privilege": "ListProjects",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "portal*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to lists tag for a resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "access-policy"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset-model"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "portal"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the logging options.",
        "privilege": "PutLoggingOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to tag a resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "access-policy"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset-model"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "portal"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to untag a resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "access-policy"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset-model"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "portal"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to update a specified access policy.",
        "privilege": "UpdateAccessPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "access-policy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified asset.",
        "privilege": "UpdateAsset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified asset model.",
        "privilege": "UpdateAssetModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset-model*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified asset property.",
        "privilege": "UpdateAssetProperty",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "asset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a specified dashboard.",
        "privilege": "UpdateDashboard",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified gateway.",
        "privilege": "UpdateGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified gateway capability configuration.",
        "privilege": "UpdateGatewayCapabilityConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a specified portal.",
        "privilege": "UpdatePortal",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "portal*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a specified project.",
        "privilege": "UpdateProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "asset"
      },
      {
        "arn": "arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "asset-model"
      },
      {
        "arn": "arn:${Partition}:iotsitewise:${Region}:${Account}:gateway/${GatewayId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "gateway"
      },
      {
        "arn": "arn:${Partition}:iotsitewise:${Region}:${Account}:portal/${PortalId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "portal"
      },
      {
        "arn": "arn:${Partition}:iotsitewise:${Region}:${Account}:project/${ProjectId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "project"
      },
      {
        "arn": "arn:${Partition}:iotsitewise:${Region}:${Account}:dashboard/${DashboardId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "dashboard"
      },
      {
        "arn": "arn:${Partition}:iotsitewise:${Region}:${Account}:access-policy/${AccessPolicyId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "access-policy"
      }
    ],
    "service_name": "AWS IoT SiteWise"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters access by a key that is present in the request the user makes to the thingsgraph service.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters access by a tag key and value pair.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters access by the list of all the tag key names present in the request the user makes to the thingsgraph service.",
        "type": "String"
      }
    ],
    "prefix": "iotthingsgraph",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Associates a device with a concrete thing that is in the user's registry. A thing can be associated with only one device at a time. If you associate a thing with a new device id, its previous association will be removed.",
        "privilege": "AssociateEntityToThing",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iot:DescribeThing",
              "iot:DescribeThingGroup"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a workflow template. Workflows can be created only in the user's namespace. (The public namespace contains only entities.) The workflow can contain only entities in the specified namespace. The workflow is validated against the entities in the latest version of the user's namespace unless another namespace version is specified in the request.",
        "privilege": "CreateFlowTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates an instance of a system with specified configurations and Things.",
        "privilege": "CreateSystemInstance",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a system. The system is validated against the entities in the latest version of the user's namespace unless another namespace version is specified in the request.",
        "privilege": "CreateSystemTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a workflow. Any new system or system instance that contains this workflow will fail to update or deploy. Existing system instances that contain the workflow will continue to run (since they use a snapshot of the workflow taken at the time of deploying the system instance).",
        "privilege": "DeleteFlowTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Workflow*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified namespace. This action deletes all of the entities in the namespace. Delete the systems and flows in the namespace before performing this action.",
        "privilege": "DeleteNamespace",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a system instance. Only instances that have never been deployed, or that have been undeployed from the target can be deleted. Users can create a new system instance that has the same ID as a deleted system instance.",
        "privilege": "DeleteSystemInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "SystemInstance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a system. New system instances can't contain the system after its deletion. Existing system instances that contain the system will continue to work because they use a snapshot of the system that is taken when it is deployed.",
        "privilege": "DeleteSystemTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "System*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deploys the system instance to the target specified in CreateSystemInstance.",
        "privilege": "DeploySystemInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "SystemInstance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deprecates the specified workflow. This action marks the workflow for deletion. Deprecated flows can't be deployed, but existing system instances that use the flow will continue to run.",
        "privilege": "DeprecateFlowTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Workflow*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deprecates the specified system.",
        "privilege": "DeprecateSystemTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "System*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the latest version of the user's namespace and the public version that it is tracking.",
        "privilege": "DescribeNamespace",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Dissociates a device entity from a concrete thing. The action takes only the type of the entity that you need to dissociate because only one entity of a particular type can be associated with a thing.",
        "privilege": "DissociateEntityFromThing",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iot:DescribeThing",
              "iot:DescribeThingGroup"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets descriptions of the specified entities. Uses the latest version of the user's namespace by default.",
        "privilege": "GetEntities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the latest version of the DefinitionDocument and FlowTemplateSummary for the specified workflow.",
        "privilege": "GetFlowTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Workflow*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets revisions of the specified workflow. Only the last 100 revisions are stored. If the workflow has been deprecated, this action will return revisions that occurred before the deprecation. This action won't work for workflows that have been deleted.",
        "privilege": "GetFlowTemplateRevisions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Workflow*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the status of a namespace deletion task.",
        "privilege": "GetNamespaceDeletionStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a system instance.",
        "privilege": "GetSystemInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "SystemInstance*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a system.",
        "privilege": "GetSystemTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "System*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets revisions made to the specified system template. Only the previous 100 revisions are stored. If the system has been deprecated, this action will return the revisions that occurred before its deprecation. This action won't work with systems that have been deleted.",
        "privilege": "GetSystemTemplateRevisions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "System*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the status of the specified upload.",
        "privilege": "GetUploadStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists details of a single workflow execution",
        "privilege": "ListFlowExecutionMessages",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all tags for a given resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "SystemInstance"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Searches for entities of the specified type. You can search for entities in your namespace and the public namespace that you're tracking.",
        "privilege": "SearchEntities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Searches for workflow executions of a system instance",
        "privilege": "SearchFlowExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "SystemInstance*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Searches for summary information about workflows.",
        "privilege": "SearchFlowTemplates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Searches for system instances in the user's account.",
        "privilege": "SearchSystemInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Searches for summary information about systems in the user's account. You can filter by the ID of a workflow to return only systems that use the specified workflow.",
        "privilege": "SearchSystemTemplates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Searches for things associated with the specified entity. You can search by both device and device model.",
        "privilege": "SearchThings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Tag a specified resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "SystemInstance"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes the system instance and associated triggers from the target.",
        "privilege": "UndeploySystemInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "SystemInstance*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Untag a specified resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "SystemInstance"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified workflow. All deployed systems and system instances that use the workflow will see the changes in the flow when it is redeployed. The workflow can contain only entities in the specified namespace.",
        "privilege": "UpdateFlowTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Workflow*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified system. You don't need to run this action after updating a workflow. Any system instance that uses the system will see the changes in the system when it is redeployed.",
        "privilege": "UpdateSystemTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "System*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Asynchronously uploads one or more entity definitions to the user's namespace.",
        "privilege": "UploadEntityDefinitions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:iotthingsgraph:${Region}:${Account}:Workflow/${NamespacePath}",
        "condition_keys": [],
        "resource": "Workflow"
      },
      {
        "arn": "arn:${Partition}:iotthingsgraph:${Region}:${Account}:System/${NamespacePath}",
        "condition_keys": [],
        "resource": "System"
      },
      {
        "arn": "arn:${Partition}:iotthingsgraph:${Region}:${Account}:Deployment/${NamespacePath}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "SystemInstance"
      }
    ],
    "service_name": "AWS IoT Things Graph"
  },
  {
    "conditions": [],
    "prefix": "iq",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to submit new project requests",
        "privilege": "CreateProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS IQ"
  },
  {
    "conditions": [],
    "prefix": "iq-permission",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to approve an access grant",
        "privilege": "ApproveAccessGrant",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS IQ Permissions"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filter requests based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filter actions based on tag-value associated with a MSK resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filter requests based on the presence of mandatory tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "kafka",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to create a cluster.",
        "privilege": "CreateCluster",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [
              "ec2:DescribeSecurityGroups",
              "ec2:DescribeSubnets",
              "ec2:DescribeVpcs",
              "iam:AttachRolePolicy",
              "iam:CreateServiceLinkedRole",
              "iam:PutRolePolicy",
              "kms:CreateGrant",
              "kms:DescribeKey"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a configuration.",
        "privilege": "CreateConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a cluster.",
        "privilege": "DeleteCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe a cluster.",
        "privilege": "DescribeCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a description of the cluster operation specified by the ARN.",
        "privilege": "DescribeClusterOperation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe a configuration.",
        "privilege": "DescribeConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe a configuration revision.",
        "privilege": "DescribeConfigurationRevision",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get connection details for the broker nodes in a cluster.",
        "privilege": "GetBootstrapBrokers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of all the operations that have been performed on the specified MSK cluster.",
        "privilege": "ListClusterOperations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to return a list of all clusters in the current account.",
        "privilege": "ListClusters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to return a list of all configurations in the current account.",
        "privilege": "ListConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to return a list of nodes in a cluster.",
        "privilege": "ListNodes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list tags of a MSK resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to tag a MSK resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove tags from a MSK resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the number of broker nodes of the cluster.",
        "privilege": "UpdateBrokerCount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the storage size of the broker nodes of the cluster",
        "privilege": "UpdateBrokerStorage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update Kafka configuration running on a cluster.",
        "privilege": "UpdateClusterConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the monitoring settings for the cluster.",
        "privilege": "UpdateMonitoring",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:kafka:${Region}:${Account}:cluster/${ClusterName}/${UUID}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "cluster"
      }
    ],
    "service_name": "Amazon Managed Streaming for Kafka"
  },
  {
    "conditions": [],
    "prefix": "kendra",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Batch Delete document",
        "privilege": "BatchDeleteDocument",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Batch put document",
        "privilege": "BatchPutDocument",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a data source",
        "privilege": "CreateDataSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create an Faq",
        "privilege": "CreateFaq",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create an Index",
        "privilege": "CreateIndex",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an Faq",
        "privilege": "DeleteFaq",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "faq*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an Index",
        "privilege": "DeleteIndex",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe a data source",
        "privilege": "DescribeDataSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "data-source*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe an Faq",
        "privilege": "DescribeFaq",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "faq*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe an Index",
        "privilege": "DescribeIndex",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get Data Source sync job history",
        "privilege": "ListDataSourceSyncJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "data-source*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the data sources",
        "privilege": "ListDataSources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the Faqs",
        "privilege": "ListFaqs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the indexes",
        "privilege": "ListIndices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Query documents and Faqs",
        "privilege": "Query",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Start Data Source sync job",
        "privilege": "StartDataSourceSyncJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "data-source*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stop Data Source sync job",
        "privilege": "StopDataSourceSyncJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "data-source*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Send feedback about a query results",
        "privilege": "SubmitFeedback",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update a data source",
        "privilege": "UpdateDataSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "data-source*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update an Index",
        "privilege": "UpdateIndex",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "index*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:kendra:${Region}:${Account}:index/${IndexId}",
        "condition_keys": [],
        "resource": "index"
      },
      {
        "arn": "arn:${Partition}:kendra:${Region}:${Account}:index/${IndexId}/data-source/${DataSourceId}",
        "condition_keys": [],
        "resource": "data-source"
      },
      {
        "arn": "arn:${Partition}:kendra:${Region}:${Account}:index/${IndexId}/faq/${FaqId}",
        "condition_keys": [],
        "resource": "faq"
      }
    ],
    "service_name": "Amazon Kendra"
  },
  {
    "conditions": [],
    "prefix": "kinesis",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "Adds or updates tags for the specified Amazon Kinesis stream. Each stream can have up to 10 tags.",
        "privilege": "AddTagsToStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a Amazon Kinesis stream.",
        "privilege": "CreateStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Decreases the stream's retention period, which is the length of time data records are accessible after they are added to the stream.",
        "privilege": "DecreaseStreamRetentionPeriod",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a stream and all its shards and data.",
        "privilege": "DeleteStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deregisters a stream consumer with a Kinesis data stream.",
        "privilege": "DeregisterStreamConsumer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "consumer*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the shard limits and usage for the account.",
        "privilege": "DescribeLimits",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified stream.",
        "privilege": "DescribeStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the description of a registered stream consumer.",
        "privilege": "DescribeStreamConsumer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "consumer*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Provides a summarized description of the specified Kinesis data stream without the shard list.",
        "privilege": "DescribeStreamSummary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disables enhanced monitoring.",
        "privilege": "DisableEnhancedMonitoring",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "API_EnableEnhancedMonitoring.html",
        "privilege": "EnableEnhancedMonitoring",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets data records from a shard.",
        "privilege": "GetRecords",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a shard iterator. A shard iterator expires five minutes after it is returned to the requester.",
        "privilege": "GetShardIterator",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Increases the stream's retention period, which is the length of time data records are accessible after they are added to the stream.",
        "privilege": "IncreaseStreamRetentionPeriod",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the shards in a stream and provides information about each shard.",
        "privilege": "ListShards",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the stream consumers registered to receive data from a Kinesis stream using enhanced fan-out, and provides information about each consumer.",
        "privilege": "ListStreamConsumers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists your streams.",
        "privilege": "ListStreams",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the tags for the specified Amazon Kinesis stream.",
        "privilege": "ListTagsForStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Merges two adjacent shards in a stream and combines them into a single shard to reduce the stream's capacity to ingest and transport data.",
        "privilege": "MergeShards",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Writes a single data record from a producer into an Amazon Kinesis stream.",
        "privilege": "PutRecord",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Writes multiple data records from a producer into an Amazon Kinesis stream in a single call (also referred to as a PutRecords request).",
        "privilege": "PutRecords",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers a stream consumer with a Kinesis data stream.",
        "privilege": "RegisterStreamConsumer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "consumer*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Description for SplitShard",
        "privilege": "RemoveTagsFromStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Description for SplitShard",
        "privilege": "SplitShard",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Listening to a specific shard with enhanced fan-out.",
        "privilege": "SubscribeToShard",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "consumer*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the shard count of the specified stream to the specified number of shards.",
        "privilege": "UpdateShardCount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:kinesis:${Region}:${Account}:stream/${StreamName}",
        "condition_keys": [],
        "resource": "stream"
      },
      {
        "arn": "arn:${Partition}:kinesis:${Region}:${Account}:${StreamType}/${StreamName}/consumer/${ConsumerName}:${ConsumerCreationTimpstamp}",
        "condition_keys": [],
        "resource": "consumer"
      }
    ],
    "service_name": "Amazon Kinesis"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value assoicated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of mandatory tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "kinesisanalytics",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Adds input to the application.",
        "privilege": "AddApplicationInput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds output to the application.",
        "privilege": "AddApplicationOutput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds reference data source to the application.",
        "privilege": "AddApplicationReferenceDataSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an application.",
        "privilege": "CreateApplication",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the application.",
        "privilege": "DeleteApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified output of the application.",
        "privilege": "DeleteApplicationOutput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified reference data source of the application.",
        "privilege": "DeleteApplicationReferenceDataSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified application.",
        "privilege": "DescribeApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Discovers the input schema for the application.",
        "privilege": "DiscoverInputSchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grant permission to Kinesis Data Analytics console to display stream results for Kinesis Data Analytics SQL runtime applications.",
        "privilege": "GetApplicationState",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List applications for the account",
        "privilege": "ListApplications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Fetch the tags associated with the application.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts the application.",
        "privilege": "StartApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops the application.",
        "privilege": "StopApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Add tags to the application.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Remove the specified tags from the application.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the application.",
        "privilege": "UpdateApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:kinesisanalytics:${Region}:${Account}:application/${ApplicationName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "application"
      }
    ],
    "service_name": "Amazon Kinesis Analytics"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value assoicated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of mandatory tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "kinesisanalytics",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Adds cloudwatch logging option to the application.",
        "privilege": "AddApplicationCloudWatchLoggingOption",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds input to the application.",
        "privilege": "AddApplicationInput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds input processing configuration to the application.",
        "privilege": "AddApplicationInputProcessingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds output to the application.",
        "privilege": "AddApplicationOutput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds reference data source to the application.",
        "privilege": "AddApplicationReferenceDataSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds VPC configuration to the application.",
        "privilege": "AddApplicationVpcConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an application.",
        "privilege": "CreateApplication",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a snapshot for an application.",
        "privilege": "CreateApplicationSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the application.",
        "privilege": "DeleteApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified cloudwatch logging option of the application.",
        "privilege": "DeleteApplicationCloudWatchLoggingOption",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified input processing configuration of the application.",
        "privilege": "DeleteApplicationInputProcessingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified output of the application.",
        "privilege": "DeleteApplicationOutput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified reference data source of the application.",
        "privilege": "DeleteApplicationReferenceDataSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a snapshot for an application.",
        "privilege": "DeleteApplicationSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified VPC configuration of the application.",
        "privilege": "DeleteApplicationVpcConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified application.",
        "privilege": "DescribeApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an application snapshot.",
        "privilege": "DescribeApplicationSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Discovers the input schema for the application.",
        "privilege": "DiscoverInputSchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the snapshots for an application.",
        "privilege": "ListApplicationSnapshots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List applications for the account",
        "privilege": "ListApplications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Fetch the tags associated with the application.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts the application.",
        "privilege": "StartApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops the application.",
        "privilege": "StopApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Add tags to the application.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Remove the specified tags from the application.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the application.",
        "privilege": "UpdateApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "application*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:kinesisanalytics:${Region}:${Account}:application/${ApplicationName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "application"
      }
    ],
    "service_name": "Amazon Kinesis Analytics V2"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters requests based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value assoicated with the stream.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters requests based on the presence of mandatory tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "kinesisvideo",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to connect as a master to the signaling channel specified by the endpoint",
        "privilege": "ConnectAsMaster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to connect as a viewer to the signaling channel specified by the endpoint",
        "privilege": "ConnectAsViewer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a signaling channel",
        "privilege": "CreateSignalingChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a Kinesis video stream",
        "privilege": "CreateStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an existing signaling channel",
        "privilege": "DeleteSignalingChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an existing Kinesis video stream",
        "privilege": "DeleteStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the specified signaling channel",
        "privilege": "DescribeSignalingChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the specified Kinesis video stream",
        "privilege": "DescribeStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get a media clip from a video stream",
        "privilege": "GetClip",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to create a URL for MPEG-DASH video streaming",
        "privilege": "GetDASHStreamingSessionURL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get an endpoint for a specified stream for either reading or writing media data to Kinesis Video Streams",
        "privilege": "GetDataEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to create a URL for HLS video streaming",
        "privilege": "GetHLSStreamingSessionURL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get the ICE server configuration",
        "privilege": "GetIceServerConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return media content of a Kinesis video stream",
        "privilege": "GetMedia",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to read and return media data only from persisted storage",
        "privilege": "GetMediaForFragmentList",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get endpoints for a specified combination of protocol and role for a signaling channel",
        "privilege": "GetSignalingChannelEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the fragments from archival storage based on the pagination token or selector type with range specified",
        "privilege": "ListFragments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list your signaling channels",
        "privilege": "ListSignalingChannels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list your Kinesis video streams",
        "privilege": "ListStreams",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to fetch the tags associated with your resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to fetch the tags associated with Kinesis video stream",
        "privilege": "ListTagsForStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to send media data to a Kinesis video stream",
        "privilege": "PutMedia",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to send the Alexa SDP offer to the master",
        "privilege": "SendAlexaOfferToMaster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to attach set of tags to your resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to attach set of tags to your Kinesis video streams",
        "privilege": "TagStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove one or more tags from your resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove one or more tags from your Kinesis video streams",
        "privilege": "UntagStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the data retention period of your Kinesis video stream",
        "privilege": "UpdateDataRetention",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an existing signaling channel",
        "privilege": "UpdateSignalingChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an existing Kinesis video stream",
        "privilege": "UpdateStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stream*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:kinesisvideo:${Region}:${Account}:stream/${StreamName}/${CreationTime}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "stream"
      },
      {
        "arn": "arn:${Partition}:kinesisvideo:${Region}:${Account}:channel/${ChannelName}/${CreationTime}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "channel"
      }
    ],
    "service_name": "Amazon Kinesis Video Streams"
  },
  {
    "conditions": [
      {
        "condition": "kms:BypassPolicyLockoutSafetyCheck",
        "description": "Controls access to the CreateKey and PutKeyPolicy operations based on the value of the BypassPolicyLockoutSafetyCheck parameter in the request.",
        "type": "Bool"
      },
      {
        "condition": "kms:CallerAccount",
        "description": "Controls access to specified AWS KMS operations based on the AWS account ID of the caller. You can use this condition key to allow or deny access to all IAM users and roles in an AWS account in a single policy statement.",
        "type": "String"
      },
      {
        "condition": "kms:CustomerMasterKeySpec",
        "description": "Controls access to an API operation based on the CustomerMasterKeySpec property of the CMK that is created by or used in the operation. Use it to qualify authorization of the CreateKey operation or any operation that is authorized for a CMK resource.",
        "type": "String"
      },
      {
        "condition": "kms:CustomerMasterKeyUsage",
        "description": "Controls access to an API operation based on the KeyUsage property of the CMK created by or used in the operation. Use it to qualify authorization of the CreateKey operation or any operation that is authorized for a CMK resource.",
        "type": "String"
      },
      {
        "condition": "kms:DataKeyPairSpec",
        "description": "Controls access to GenerateDataKeyPair and GenerateDataKeyPairWithoutPlaintext operations based on the value of the DataKeyPairSpec parameter in the request.",
        "type": "String"
      },
      {
        "condition": "kms:EncryptionAlgorithm",
        "description": "Controls access to encryption operations based on the value of the encryption algorithm in the request.",
        "type": "String"
      },
      {
        "condition": "kms:EncryptionContextKeys",
        "description": "Controls access based on the presence of specified keys in the encryption context. The encryption context is an optional element in a cryptographic operation.",
        "type": "String"
      },
      {
        "condition": "kms:ExpirationModel",
        "description": "Controls access to the ImportKeyMaterial operation based on the value of the ExpirationModel parameter in the request.",
        "type": "String"
      },
      {
        "condition": "kms:GrantConstraintType",
        "description": "Controls access to the CreateGrant operation based on the grant constraint in the request.",
        "type": "String"
      },
      {
        "condition": "kms:GrantIsForAWSResource",
        "description": "Controls access to the CreateGrant operation when the request comes from a specified AWS service.",
        "type": "Bool"
      },
      {
        "condition": "kms:GrantOperations",
        "description": "Controls access to the CreateGrant operation based on the operations in the grant.",
        "type": "String"
      },
      {
        "condition": "kms:GranteePrincipal",
        "description": "Controls access to the CreateGrant operation based on the grantee principal in the grant.",
        "type": "String"
      },
      {
        "condition": "kms:KeyOrigin",
        "description": "Controls access to an API operation based on the Origin property of the CMK created by or used in the operation. Use it to qualify authorization of the CreateKey operation or any operation that is authorized for a CMK resource.",
        "type": "String"
      },
      {
        "condition": "kms:MessageType",
        "description": "Controls access to the Sign and Verify operations based on the value of the MessageType parameter in the request.",
        "type": "String"
      },
      {
        "condition": "kms:ReEncryptOnSameKey",
        "description": "Controls access to the ReEncrypt operation when it uses the same customer master key that was used for the Encrypt operation.",
        "type": "Bool"
      },
      {
        "condition": "kms:RetiringPrincipal",
        "description": "Controls access to the CreateGrant operation based on the retiring principal in the grant.",
        "type": "String"
      },
      {
        "condition": "kms:SigningAlgorithm",
        "description": "Controls access to the Sign and Verify operations based on the signing algorithm in the request.",
        "type": "String"
      },
      {
        "condition": "kms:ValidTo",
        "description": "Controls access to the ImportKeyMaterial operation based on the value of the ValidTo parameter in the request. You can use this condition key to allow users to import key material only when it expires by the specified date.",
        "type": "Numeric"
      },
      {
        "condition": "kms:ViaService",
        "description": "Controls access when a request made on the principal's behalf comes from a specified AWS service.",
        "type": "String"
      },
      {
        "condition": "kms:WrappingAlgorithm",
        "description": "Controls access to the GetParametersForImport operation based on the value of the WrappingAlgorithm parameter in the request.",
        "type": "String"
      },
      {
        "condition": "kms:WrappingKeySpec",
        "description": "Controls access to the GetParametersForImport operation based on the value of the WrappingKeySpec parameter in the request.",
        "type": "String"
      }
    ],
    "prefix": "kms",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Controls permission to cancel the scheduled deletion of a customer master key.",
        "privilege": "CancelKeyDeletion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to connect or reconnect a custom key store to its associated AWS CloudHSM cluster.",
        "privilege": "ConnectCustomKeyStore",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to create an alias for a customer master key (CMK). Aliases are optional friendly names that you can associate with customer master keys.",
        "privilege": "CreateAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alias*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to create a custom key store that is associated with an AWS CloudHSM cluster that you own and manage.",
        "privilege": "CreateCustomKeyStore",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "cloudhsm:DescribeClusters"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Controls permission to add a grant to a customer master key. You can use grants to add permissions without changing the key policy or IAM policy.",
        "privilege": "CreateGrant",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:GrantConstraintType",
              "kms:GrantIsForAWSResource",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to create a customer master key that can be used to protect data keys and other sensitive information.",
        "privilege": "CreateKey",
        "resource_types": [
          {
            "condition_keys": [
              "kms:BypassPolicyLockoutSafetyCheck",
              "kms:CustomerMasterKeySpec",
              "kms:CustomerMasterKeyUsage",
              "kms:KeyOrigin"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to decrypt ciphertext that was encrypted under a customer master key.",
        "privilege": "Decrypt",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:EncryptionAlgorithm",
              "kms:EncryptionContextKeys",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to delete an alias. Aliases are optional friendly names that you can associate with customer master keys.",
        "privilege": "DeleteAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alias*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to delete a custom key store.",
        "privilege": "DeleteCustomKeyStore",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to delete cryptographic material that you imported into a customer master key. This action makes the key unusable.",
        "privilege": "DeleteImportedKeyMaterial",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Controls permission to view detailed information about custom key stores in the account and region.",
        "privilege": "DescribeCustomKeyStores",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Controls permission to view detailed information about a customer master key.",
        "privilege": "DescribeKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to disable a customer master key, which prevents it from being used in cryptographic operations.",
        "privilege": "DisableKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to disable automatic rotation of a customer managed customer master key.",
        "privilege": "DisableKeyRotation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to disconnect the custom key store from its associated AWS CloudHSM cluster.",
        "privilege": "DisconnectCustomKeyStore",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to change the state of a customer master key (CMK) to enabled. This allows the CMK to be used in cryptographic operations.",
        "privilege": "EnableKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to enable automatic rotation of the cryptographic material in a customer master key.",
        "privilege": "EnableKeyRotation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to use the specified customer master key to encrypt data and data keys.",
        "privilege": "Encrypt",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:EncryptionAlgorithm",
              "kms:EncryptionContextKeys",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to use the customer master key to generate data keys. You can use the data keys to encrypt data outside of AWS KMS.",
        "privilege": "GenerateDataKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:EncryptionAlgorithm",
              "kms:EncryptionContextKeys",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to use the customer master key to generate data key pairs.",
        "privilege": "GenerateDataKeyPair",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:DataKeyPairSpec",
              "kms:EncryptionAlgorithm",
              "kms:EncryptionContextKeys",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to use the customer master key to generate data key pairs. Unlike the GenerateDataKeyPair operation, this operation returns an encrypted private key without a plaintext copy.",
        "privilege": "GenerateDataKeyPairWithoutPlaintext",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:DataKeyPairSpec",
              "kms:EncryptionAlgorithm",
              "kms:EncryptionContextKeys",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to use the customer master key to generate a data key. Unlike the GenerateDataKey operation, this operation returns an encrypted data key without a plaintext version of the data key.",
        "privilege": "GenerateDataKeyWithoutPlaintext",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:EncryptionAlgorithm",
              "kms:EncryptionContextKeys",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to get a cryptographically secure random byte string from AWS KMS.",
        "privilege": "GenerateRandom",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Controls permission to view the key policy for the specified customer master key.",
        "privilege": "GetKeyPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Controls permission to determine whether automatic key rotation is enabled on the customer master key.",
        "privilege": "GetKeyRotationStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Controls permission to get data that is required to import cryptographic material into a customer managed key, including a public key and import token.",
        "privilege": "GetParametersForImport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService",
              "kms:WrappingAlgorithm",
              "kms:WrappingKeySpec"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Controls permission to download the public key of an asymmetric customer master key.",
        "privilege": "GetPublicKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to import cryptographic material into a customer master key.",
        "privilege": "ImportKeyMaterial",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ExpirationModel",
              "kms:ValidTo",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Controls permission to view the aliases that are defined in the account. Aliases are optional friendly names that you can associate with customer master keys.",
        "privilege": "ListAliases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Controls permission to view all grants for a customer master key.",
        "privilege": "ListGrants",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:GrantIsForAWSResource",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Controls permission to view the names of key policies for a customer master key.",
        "privilege": "ListKeyPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Controls permission to view the key ID and Amazon Resource Name (ARN) of all customer master keys in the account.",
        "privilege": "ListKeys",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Controls permission to view all tags that are attached to a customer master key.",
        "privilege": "ListResourceTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Controls permission to view grants in which the specified principal is the retiring principal. Other principals might be able to retire the grant and this principal might be able to retire other grants.",
        "privilege": "ListRetirableGrants",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Controls permission to replace the key policy for the specified customer master key.",
        "privilege": "PutKeyPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:BypassPolicyLockoutSafetyCheck",
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to decrypt data as part of the process that decrypts and reencrypts the data within AWS KMS.",
        "privilege": "ReEncryptFrom",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:EncryptionAlgorithm",
              "kms:EncryptionContextKeys",
              "kms:ReEncryptOnSameKey",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to encrypt data as part of the process that decrypts and reencrypts the data within AWS KMS.",
        "privilege": "ReEncryptTo",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:EncryptionAlgorithm",
              "kms:EncryptionContextKeys",
              "kms:ReEncryptOnSameKey",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Controls permission to retire a grant. The RetireGrant operation is typically called by the grant user after they complete the tasks that the grant allowed them to perform.",
        "privilege": "RetireGrant",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Controls permission to revoke a grant, which denies permission for all operations that depend on the grant.",
        "privilege": "RevokeGrant",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:GrantIsForAWSResource",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to schedule deletion of a customer master key.",
        "privilege": "ScheduleKeyDeletion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to produce a digital signature for a message.",
        "privilege": "Sign",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:MessageType",
              "kms:SigningAlgorithm",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Controls permission to create or update tags that are attached to a customer master key.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Controls permission to delete tags that are attached to a customer master key.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to associate an alias with a different customer master key. An alias is an optional friendly name that you can associate with a customer master key.",
        "privilege": "UpdateAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "alias*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to change the properties of a custom key store.",
        "privilege": "UpdateCustomKeyStore",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to delete or change the description of a customer master key.",
        "privilege": "UpdateKeyDescription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Controls permission to use the specified customer master key to verify digital signatures.",
        "privilege": "Verify",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "key*"
          },
          {
            "condition_keys": [
              "kms:CallerAccount",
              "kms:MessageType",
              "kms:SigningAlgorithm",
              "kms:ViaService"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:kms:${Region}:${Account}:alias/${Alias}",
        "condition_keys": [],
        "resource": "alias"
      },
      {
        "arn": "arn:${Partition}:kms:${Region}:${Account}:key/${KeyId}",
        "condition_keys": [],
        "resource": "key"
      }
    ],
    "service_name": "AWS Key Management Service"
  },
  {
    "conditions": [],
    "prefix": "lakeformation",
    "privileges": [
      {
        "access_level": "Permissions management",
        "description": "Grants data lake permissions to one or more principals in a batch.",
        "privilege": "BatchGrantPermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Revokes data lake permissions from one or more principals in a batch.",
        "privilege": "BatchRevokePermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deregisters a registered location.",
        "privilege": "DeregisterResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a registered location.",
        "privilege": "DescribeResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants virtual data lake access permissions.",
        "privilege": "GetDataAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves data lake settings such as the list of data lake administrators and database and table default permissions.",
        "privilege": "GetDataLakeSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves permissions attached to resources in the given path.",
        "privilege": "GetEffectivePermissionsForPath",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants data lake permissions to a principal.",
        "privilege": "GrantPermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists permissions filtered by principal or resource.",
        "privilege": "ListPermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists registered locations.",
        "privilege": "ListResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Overwrites data lake settings such as the list of data lake administrators and database and table default permissions.",
        "privilege": "PutDataLakeSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers a new location to be managed by Lake Formation.",
        "privilege": "RegisterResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Revokes data lake permissions from a principal.",
        "privilege": "RevokePermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a registered location.",
        "privilege": "UpdateResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Lake Formation"
  },
  {
    "conditions": [
      {
        "condition": "lambda:FunctionArn",
        "description": "Filters access by the ARN of an AWS Lambda function",
        "type": "ARN"
      },
      {
        "condition": "lambda:Layer",
        "description": "Filters access by the ARN of an AWS Lambda layer",
        "type": "String"
      },
      {
        "condition": "lambda:Principal",
        "description": "Filters access by restricting the AWS service or account that can invoke a function",
        "type": "String"
      }
    ],
    "prefix": "lambda",
    "privileges": [
      {
        "access_level": "Permissions management",
        "description": "Grants permission to add permissions to the resource-based policy of a version of an AWS Lambda layer",
        "privilege": "AddLayerVersionPermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "layerVersion*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to give an AWS service or another account permission to use an AWS Lambda function",
        "privilege": "AddPermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          },
          {
            "condition_keys": [
              "lambda:Principal"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an alias for a Lambda function version",
        "privilege": "CreateAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a mapping between an event source and an AWS Lambda function",
        "privilege": "CreateEventSourceMapping",
        "resource_types": [
          {
            "condition_keys": [
              "lambda:FunctionArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an AWS Lambda function",
        "privilege": "CreateFunction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          },
          {
            "condition_keys": [
              "lambda:Layer"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an AWS Lambda function alias",
        "privilege": "DeleteAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an AWS Lambda event source mapping",
        "privilege": "DeleteEventSourceMapping",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "eventSourceMapping*"
          },
          {
            "condition_keys": [
              "lambda:FunctionArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an AWS Lambda function",
        "privilege": "DeleteFunction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove a concurrent execution limit from an AWS Lambda function",
        "privilege": "DeleteFunctionConcurrency",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the configuration for asynchronous invocation for an AWS Lambda function, version, or alias",
        "privilege": "DeleteFunctionEventInvokeConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a version of an AWS Lambda layer",
        "privilege": "DeleteLayerVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "layerVersion*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the provisioned concurrency configuration for an AWS Lambda function",
        "privilege": "DeleteProvisionedConcurrencyConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function alias"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function version"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to disable replication for a Lambda@Edge function",
        "privilege": "DisableReplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to enable replication for a Lambda@Edge function",
        "privilege": "EnableReplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about an account's limits and usage in an AWS Region",
        "privilege": "GetAccountSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about an AWS Lambda function alias",
        "privilege": "GetAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about an AWS Lambda event source mapping",
        "privilege": "GetEventSourceMapping",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "eventSourceMapping*"
          },
          {
            "condition_keys": [
              "lambda:FunctionArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about an AWS Lambda function",
        "privilege": "GetFunction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about the reserved concurrency configuration for a function",
        "privilege": "GetFunctionConcurrency",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about the version-specific settings of an AWS Lambda function or version",
        "privilege": "GetFunctionConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the configuration for asynchronous invocation for a function, version, or alias",
        "privilege": "GetFunctionEventInvokeConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about a version of an AWS Lambda layer",
        "privilege": "GetLayerVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "layerVersion*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about a version of an AWS Lambda layer",
        "privilege": "GetLayerVersionByArn",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "layerVersion*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the resource-based policy for a version of an AWS Lambda layer",
        "privilege": "GetLayerVersionPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "layerVersion*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the resource-based policy for an AWS Lambda function, version, or alias",
        "privilege": "GetPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the provisioned concurrency configuration for an AWS Lambda function's alias or version",
        "privilege": "GetProvisionedConcurrencyConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function alias"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function version"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "(Deprecated) Grants permission to invoke a function asynchronously",
        "privilege": "InvokeAsync",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to invoke an AWS Lambda function",
        "privilege": "InvokeFunction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of aliases for an AWS Lambda function",
        "privilege": "ListAliases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of AWS Lambda event source mappings",
        "privilege": "ListEventSourceMappings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of configurations for asynchronous invocation for a function",
        "privilege": "ListFunctionEventInvokeConfigs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of AWS Lambda functions, with the version-specific configuration of each function",
        "privilege": "ListFunctions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of versions of an AWS Lambda layer",
        "privilege": "ListLayerVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of AWS Lambda layers, with details about the latest version of each layer",
        "privilege": "ListLayers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of provisioned concurrency configurations for an AWS Lambda function",
        "privilege": "ListProvisionedConcurrencyConfigs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of tags for an AWS Lambda function",
        "privilege": "ListTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of versions for an AWS Lambda function",
        "privilege": "ListVersionsByFunction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an AWS Lambda layer",
        "privilege": "PublishLayerVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "layer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an AWS Lambda function version",
        "privilege": "PublishVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to configure reserved concurrency for an AWS Lambda function",
        "privilege": "PutFunctionConcurrency",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to configures options for asynchronous invocation on an AWS Lambda function, version, or alias",
        "privilege": "PutFunctionEventInvokeConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to configure provisioned concurrency for an AWS Lambda function's alias or version",
        "privilege": "PutProvisionedConcurrencyConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function alias"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function version"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to remove a statement from the permissions policy for a version of an AWS Lambda layer",
        "privilege": "RemoveLayerVersionPermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "layerVersion*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to revoke function-use permission from an AWS service or another account",
        "privilege": "RemovePermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          },
          {
            "condition_keys": [
              "lambda:Principal"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add tags to an AWS Lambda function",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove tags from an AWS Lambda function",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the configuration of an AWS Lambda function's alias",
        "privilege": "UpdateAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the configuration of an AWS Lambda event source mapping",
        "privilege": "UpdateEventSourceMapping",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "eventSourceMapping*"
          },
          {
            "condition_keys": [
              "lambda:FunctionArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the code of an AWS Lambda function",
        "privilege": "UpdateFunctionCode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the version-specific settings of an AWS Lambda function",
        "privilege": "UpdateFunctionConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          },
          {
            "condition_keys": [
              "lambda:Layer"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the configuration for asynchronous invocation for an AWS Lambda function, version, or alias",
        "privilege": "UpdateFunctionEventInvokeConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "function*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:lambda:${Region}:${Account}:function:${FunctionName}",
        "condition_keys": [],
        "resource": "function"
      },
      {
        "arn": "arn:${Partition}:lambda:${Region}:${Account}:function:${FunctionName}:${Version}",
        "condition_keys": [],
        "resource": "function version"
      },
      {
        "arn": "arn:${Partition}:lambda:${Region}:${Account}:function:${FunctionName}:${Alias}",
        "condition_keys": [],
        "resource": "function alias"
      },
      {
        "arn": "arn:${Partition}:lambda:${Region}:${Account}:layer:${LayerName}",
        "condition_keys": [],
        "resource": "layer"
      },
      {
        "arn": "arn:${Partition}:lambda:${Region}:${Account}:layer:${LayerName}:${LayerVersion}",
        "condition_keys": [],
        "resource": "layerVersion"
      },
      {
        "arn": "arn:${Partition}:lambda:${Region}:${Account}:event-source-mapping:${UUID}",
        "condition_keys": [],
        "resource": "eventSourceMapping"
      }
    ],
    "service_name": "AWS Lambda"
  },
  {
    "conditions": [],
    "prefix": "launchwizard",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Delete an application",
        "privilege": "DeleteApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe provisioning applications",
        "privilege": "DescribeProvisionedApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe provisioning events",
        "privilege": "DescribeProvisioningEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get infrastructure suggestion",
        "privilege": "GetInfrastructureSuggestion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get customer's ip address",
        "privilege": "GetIpAddress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get resource cost estimate",
        "privilege": "GetResourceCostEstimate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List provisioning applications",
        "privilege": "ListProvisionedApps",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Start a provisioning",
        "privilege": "StartProvisioning",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Launch Wizard"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters access based on the tags in the request.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters access by the tags attached to a Lex resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters access based on the set of tag keys in the request.",
        "type": "String"
      },
      {
        "condition": "lex:associatedIntents",
        "description": "Enables you to control access based on the intents included in the request.",
        "type": "String"
      },
      {
        "condition": "lex:associatedSlotTypes",
        "description": "Enables you to control access based on the slot types included in the request.",
        "type": "String"
      },
      {
        "condition": "lex:channelType",
        "description": "Enables you to control access based on the channel type included in the request.",
        "type": "String"
      }
    ],
    "prefix": "lex",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a new version based on the $LATEST version of the specified bot.",
        "privilege": "CreateBotVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot version*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new version based on the $LATEST version of the specified intent.",
        "privilege": "CreateIntentVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "intent version*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new version based on the $LATEST version of the specified slot type.",
        "privilege": "CreateSlotTypeVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "slottype version*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes all versions of a bot.",
        "privilege": "DeleteBot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot version*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an alias for a specific bot.",
        "privilege": "DeleteBotAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot alias*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the association between a Amazon Lex bot alias and a messaging platform.",
        "privilege": "DeleteBotChannelAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specific version of a bot.",
        "privilege": "DeleteBotVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot version*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes all versions of an intent.",
        "privilege": "DeleteIntent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "intent version*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specific version of an intent.",
        "privilege": "DeleteIntentVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "intent version*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes session information for a specified bot, alias, and user ID.",
        "privilege": "DeleteSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot alias"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot version"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes all versions of a slot type.",
        "privilege": "DeleteSlotType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "slottype version*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specific version of a slot type.",
        "privilege": "DeleteSlotTypeVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "slottype version*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the information Amazon Lex maintains for utterances on a specific bot and userId.",
        "privilege": "DeleteUtterances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot version*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information for a specific bot. In addition to the bot name, the bot version or alias is required.",
        "privilege": "GetBot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot alias"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot version"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a Amazon Lex bot alias.",
        "privilege": "GetBotAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot alias*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of aliases for a given Amazon Lex bot.",
        "privilege": "GetBotAliases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the association between a Amazon Lex bot and a messaging platform.",
        "privilege": "GetBotChannelAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of all of the channels associated with a single bot.",
        "privilege": "GetBotChannelAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information for all versions of a specific bot.",
        "privilege": "GetBotVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot version*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information for the $LATEST version of all bots, subject to filters provided by the client.",
        "privilege": "GetBots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a built-in intent.",
        "privilege": "GetBuiltinIntent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a list of built-in intents that meet the specified criteria.",
        "privilege": "GetBuiltinIntents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a list of built-in slot types that meet the specified criteria.",
        "privilege": "GetBuiltinSlotTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Exports Amazon Lex Resource in a requested format.",
        "privilege": "GetExport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot version*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about an import job started with StartImport.",
        "privilege": "GetImport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information for a specific intent. In addition to the intent name, you must also specify the intent version.",
        "privilege": "GetIntent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "intent version*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information for all versions of a specific intent.",
        "privilege": "GetIntentVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "intent version*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information for the $LATEST version of all intents, subject to filters provided by the client.",
        "privilege": "GetIntents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns session information for a specified bot, alias, and user ID.",
        "privilege": "GetSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot alias"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot version"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a specific version of a slot type. In addition to specifying the slot type name, you must also specify the slot type version.",
        "privilege": "GetSlotType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "slottype version*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information for all versions of a specific slot type.",
        "privilege": "GetSlotTypeVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "slottype version*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information for the $LATEST version of all slot types, subject to filters provided by the client.",
        "privilege": "GetSlotTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a view of aggregate utterance data for versions of a bot for a recent time period.",
        "privilege": "GetUtterancesView",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot version*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists tags for a Lex resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot alias"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sends user input (text or speech) to Amazon Lex.",
        "privilege": "PostContent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot alias"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot version"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sends user input (text-only) to Amazon Lex.",
        "privilege": "PostText",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot alias"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot version"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates the $LATEST version of a Amazon Lex conversational bot.",
        "privilege": "PutBot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot version*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates an alias for the specific bot.",
        "privilege": "PutBotAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot alias*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates the $LATEST version of an intent.",
        "privilege": "PutIntent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "intent version*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new session or modifies an existing session with an Amazon Lex bot.",
        "privilege": "PutSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot alias"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot version"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates the $LATEST version of a slot type.",
        "privilege": "PutSlotType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "slottype version*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a job to import a resource to Amazon Lex.",
        "privilege": "StartImport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds or overwrites tags to a Lex resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot alias"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes tags from a Lex resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bot alias"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:lex:${Region}:${Account}:bot:${BotName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "bot"
      },
      {
        "arn": "arn:${Partition}:lex:${Region}:${Account}:bot:${BotName}:${BotVersion}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "bot version"
      },
      {
        "arn": "arn:${Partition}:lex:${Region}:${Account}:bot:${BotName}:${BotAlias}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "bot alias"
      },
      {
        "arn": "arn:${Partition}:lex:${Region}:${Account}:bot-channel:${BotName}:${BotAlias}:${ChannelName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "channel"
      },
      {
        "arn": "arn:${Partition}:lex:${Region}:${Account}:intent:${IntentName}:${IntentVersion}",
        "condition_keys": [],
        "resource": "intent version"
      },
      {
        "arn": "arn:${Partition}:lex:${Region}:${Account}:slottype:${SlotName}:${SlotVersion}",
        "condition_keys": [],
        "resource": "slottype version"
      }
    ],
    "service_name": "Amazon Lex"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters create requests based on allowed set of values for each of the mandatory tags",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Enforce tag keys that are used in the request",
        "type": "String"
      },
      {
        "condition": "license-manager:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value associated with the resource.",
        "type": "String"
      }
    ],
    "prefix": "license-manager",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "Creates a new license configuration",
        "privilege": "CreateLicenseConfiguration",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes a license configuration",
        "privilege": "DeleteLicenseConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "license-configuration*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets a license configuration",
        "privilege": "GetLicenseConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "license-configuration*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets service settings",
        "privilege": "GetServiceSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists associations for a selected license configuration",
        "privilege": "ListAssociationsForLicenseConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "license-configuration*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists license configurations",
        "privilege": "ListLicenseConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists license specifications associated with a selected resource",
        "privilege": "ListLicenseSpecificationsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists resource inventory",
        "privilege": "ListResourceInventory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists tags for a selected resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "license-configuration*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists usage records for selected license configuration",
        "privilege": "ListUsageForLicenseConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "license-configuration*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Tags a selected resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "license-configuration*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Untags a selected resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "license-configuration*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing license configuration",
        "privilege": "UpdateLicenseConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "license-configuration*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates license specifications for a selected resource",
        "privilege": "UpdateLicenseSpecificationsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "license-configuration*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Updates service settings",
        "privilege": "UpdateServiceSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:license-manager:${Region}:${Account}:license-configuration/${LicenseConfigurationId}",
        "condition_keys": [
          "license-manager:ResourceTag/${TagKey}"
        ],
        "resource": "license-configuration"
      }
    ],
    "service_name": "AWS License Manager"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "lightsail",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a static IP address that can be attached to an instance.",
        "privilege": "AllocateStaticIp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "StaticIp*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Attaches a disk to an instance.",
        "privilege": "AttachDisk",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Disk*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Attaches one or more instances to a load balancer.",
        "privilege": "AttachInstancesToLoadBalancer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "LoadBalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Attaches a TLS certificate to a load balancer.",
        "privilege": "AttachLoadBalancerTlsCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "LoadBalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Attaches a static IP address to an instance.",
        "privilege": "AttachStaticIp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "StaticIp*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Closes a public port of an instance.",
        "privilege": "CloseInstancePublicPorts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Copies a snapshot from one AWS Region to another in Amazon Lightsail.",
        "privilege": "CopySnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new Amazon EC2 instance from an exported Amazon Lightsail snapshot.",
        "privilege": "CreateCloudFormationStack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ExportSnapshotRecord*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a disk.",
        "privilege": "CreateDisk",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Disk*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a disk from snapshot.",
        "privilege": "CreateDiskFromSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Disk*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a disk snapshot.",
        "privilege": "CreateDiskSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Disk*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a domain resource for the specified domain name.",
        "privilege": "CreateDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Domain*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates one or more DNS record entries for a domain resource: Address (A), canonical name (CNAME), mail exchanger (MX), name server (NS), start of authority (SOA), service locator (SRV), or text (TXT).",
        "privilege": "CreateDomainEntry",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an instance snapshot.",
        "privilege": "CreateInstanceSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "InstanceSnapshot*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates one or more instances.",
        "privilege": "CreateInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "KeyPair*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates one or more instances based on an instance snapshot.",
        "privilege": "CreateInstancesFromSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "InstanceSnapshot*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a key pair used to authenticate and connect to an instance.",
        "privilege": "CreateKeyPair",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "KeyPair*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a load balancer.",
        "privilege": "CreateLoadBalancer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "LoadBalancer*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a load balancer TLS certificate.",
        "privilege": "CreateLoadBalancerTlsCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "LoadBalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new relational database.",
        "privilege": "CreateRelationalDatabase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabase*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new relational database from a snapshot.",
        "privilege": "CreateRelationalDatabaseFromSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabase*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a relational database snapshot.",
        "privilege": "CreateRelationalDatabaseSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabaseSnapshot*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a disk.",
        "privilege": "DeleteDisk",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Disk*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a disk snapshot.",
        "privilege": "DeleteDiskSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Disk*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a domain resource and all of its DNS records.",
        "privilege": "DeleteDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a DNS record entry for a domain resource.",
        "privilege": "DeleteDomainEntry",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an instance.",
        "privilege": "DeleteInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an instance snapshot.",
        "privilege": "DeleteInstanceSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "InstanceSnapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a key pair used to authenticate and connect to an instance.",
        "privilege": "DeleteKeyPair",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "KeyPair*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the known host key or certificate used by the Amazon Lightsail browser-based SSH or RDP clients to authenticate an instance.",
        "privilege": "DeleteKnownHostKeys",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a load balancer.",
        "privilege": "DeleteLoadBalancer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "LoadBalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a load balancer TLS certificate.",
        "privilege": "DeleteLoadBalancerTlsCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "LoadBalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a relational database.",
        "privilege": "DeleteRelationalDatabase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabase*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes relational database snapshot.",
        "privilege": "DeleteRelationalDatabaseSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabaseSnapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Detaches a disk from an instance.",
        "privilege": "DetachDisk",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Disk*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Detaches one or more instances from a load balancer.",
        "privilege": "DetachInstancesFromLoadBalancer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "LoadBalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Detaches a static IP from an instance to which it is attached.",
        "privilege": "DetachStaticIp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "StaticIp*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Downloads the default key pair used to authenticate and connect to instances in a specific AWS Region.",
        "privilege": "DownloadDefaultKeyPair",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "KeyPair*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Exports an Amazon Lightsail snapshot to Amazon EC2.",
        "privilege": "ExportSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the names of all active (not deleted) resources.",
        "privilege": "GetActiveNames",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of instance images, or blueprints. You can use a blueprint to create a new instance already running a specific operating system, as well as a pre-installed application or development stack. The software that runs on your instance depends on the blueprint you define when creating the instance.",
        "privilege": "GetBlueprints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of instance bundles. You can use a bundle to create a new instance with a set of performance specifications, such as CPU count, disk size, RAM size, and network transfer allowance. The cost of your instance depends on the bundle you define when creating the instance.",
        "privilege": "GetBundles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about all CloudFormation stacks used to create Amazon EC2 resources from exported Amazon Lightsail snapshots.",
        "privilege": "GetCloudFormationStackRecords",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "CloudFormationStackRecord*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a disk.",
        "privilege": "GetDisk",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Disk*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a disk snapshot.",
        "privilege": "GetDiskSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Disk*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about all disk snapshots.",
        "privilege": "GetDiskSnapshots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Disk*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about all disks.",
        "privilege": "GetDisks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns DNS records for a domain resource.",
        "privilege": "GetDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns DNS records for all domain resources.",
        "privilege": "GetDomains",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Domain*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about all records to export Amazon Lightsail snapshots to Amazon EC2.",
        "privilege": "GetExportSnapshotRecords",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ExportSnapshotRecord*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about an instance.",
        "privilege": "GetInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Returns temporary keys you can use to authenticate and connect to an instance.",
        "privilege": "GetInstanceAccessDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the data points for the specified metric of an instance.",
        "privilege": "GetInstanceMetricData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the port states of an instance.",
        "privilege": "GetInstancePortStates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about an instance snapshot.",
        "privilege": "GetInstanceSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "InstanceSnapshot*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about all instance snapshots.",
        "privilege": "GetInstanceSnapshots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "InstanceSnapshot*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the state of an instance.",
        "privilege": "GetInstanceState",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about all instances.",
        "privilege": "GetInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about a key pair.",
        "privilege": "GetKeyPair",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "KeyPair*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about all key pairs.",
        "privilege": "GetKeyPairs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "KeyPair*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a load balancer.",
        "privilege": "GetLoadBalancer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "LoadBalancer*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the data points for the specified metric of a load balancer.",
        "privilege": "GetLoadBalancerMetricData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "LoadBalancer*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a load balancer TLS certificate.",
        "privilege": "GetLoadBalancerTlsCertificates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "LoadBalancer*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about load balancers.",
        "privilege": "GetLoadBalancers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "LoadBalancer*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about an operation. Operations include events such as when you create an instance, allocate a static IP, attach a static IP, and so on.",
        "privilege": "GetOperation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about all operations. Operations include events such as when you create an instance, allocate a static IP, attach a static IP, and so on.",
        "privilege": "GetOperations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns operations for a resource.",
        "privilege": "GetOperationsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Domain"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "InstanceSnapshot"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "KeyPair"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "StaticIp"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of all valid AWS Regions for Amazon Lightsail.",
        "privilege": "GetRegions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about a relational database.",
        "privilege": "GetRelationalDatabase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabase*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of relational database images, or blueprints. You can use a blueprint to create a new database running a specific database engine. The database engine that runs on your database depends on the blueprint you define when creating the relational database.",
        "privilege": "GetRelationalDatabaseBlueprints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of relational database bundles. You can use a bundle to create a new database with a set of performance specifications, such as CPU count, disk size, RAM size, network transfer allowance, and standard of high availability. The cost of your database depends on the bundle you define when creating the relational database.",
        "privilege": "GetRelationalDatabaseBundles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns events for a relational database.",
        "privilege": "GetRelationalDatabaseEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns events for the specified log stream of a relational database.",
        "privilege": "GetRelationalDatabaseLogEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the log streams available for a relational database.",
        "privilege": "GetRelationalDatabaseLogStreams",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Returns the master user password of a relational database.",
        "privilege": "GetRelationalDatabaseMasterUserPassword",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the data points for the specified metric of a relational database.",
        "privilege": "GetRelationalDatabaseMetricData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the parameters of a relational database.",
        "privilege": "GetRelationalDatabaseParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about a relational database snapshot.",
        "privilege": "GetRelationalDatabaseSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabase*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about all relational database snapshots.",
        "privilege": "GetRelationalDatabaseSnapshots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabase*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return information about all relational databases.",
        "privilege": "GetRelationalDatabases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabase*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a static IP.",
        "privilege": "GetStaticIp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "StaticIp*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about all static IPs.",
        "privilege": "GetStaticIps",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "StaticIp*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Imports a public key from a key pair.",
        "privilege": "ImportKeyPair",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "KeyPair*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a boolean value indicating whether the Amazon Lightsail virtual private cloud (VPC) is peered.",
        "privilege": "IsVpcPeered",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds, or opens a public port of an instance.",
        "privilege": "OpenInstancePublicPorts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Tries to peer the Amazon Lightsail virtual private cloud (VPC) with the default VPC.",
        "privilege": "PeerVpc",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the specified open ports for an instance, and closes all ports for every protocol not included in the request.",
        "privilege": "PutInstancePublicPorts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Reboots an instance that is in a running state.",
        "privilege": "RebootInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Reboots a relational database that is in a running state.",
        "privilege": "RebootRelationalDatabase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabase*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a static IP.",
        "privilege": "ReleaseStaticIp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "StaticIp*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts an instance that is in a stopped state.",
        "privilege": "StartInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a relational database that is in a stopped state.",
        "privilege": "StartRelationalDatabase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabase*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops an instance that is in a running state.",
        "privilege": "StopInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a relational database that is in a running state.",
        "privilege": "StopRelationalDatabase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabase*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Tags a resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Disk"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "DiskSnapshot"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Domain"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "InstanceSnapshot"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "KeyPair"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "LoadBalancer"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabase"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabaseSnapshot"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "StaticIp"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Attempts to unpeer the Amazon Lightsail virtual private cloud (VPC) from the default VPC.",
        "privilege": "UnpeerVpc",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Untags a resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Disk"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "DiskSnapshot"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Domain"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Instance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "InstanceSnapshot"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "KeyPair"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "LoadBalancer"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabase"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabaseSnapshot"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "StaticIp"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a domain recordset after it is created.",
        "privilege": "UpdateDomainEntry",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a load balancer attribute, such as the health check path and session stickiness.",
        "privilege": "UpdateLoadBalancerAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "LoadBalancer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a relational database.",
        "privilege": "UpdateRelationalDatabase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RelationalDatabase*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the parameters of a relational database.",
        "privilege": "UpdateRelationalDatabaseParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:Domain/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "Domain"
      },
      {
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:Instance/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "Instance"
      },
      {
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:InstanceSnapshot/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "InstanceSnapshot"
      },
      {
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:KeyPair/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "KeyPair"
      },
      {
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:StaticIp/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "StaticIp"
      },
      {
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:Disk/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "Disk"
      },
      {
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:DiskSnapshot/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "DiskSnapshot"
      },
      {
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:LoadBalancer/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "LoadBalancer"
      },
      {
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:PeeredVpc/${Id}",
        "condition_keys": [],
        "resource": "PeeredVpc"
      },
      {
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:LoadBalancerTlsCertificate/${Id}",
        "condition_keys": [],
        "resource": "LoadBalancerTlsCertificate"
      },
      {
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:ExportSnapshotRecord/${Id}",
        "condition_keys": [],
        "resource": "ExportSnapshotRecord"
      },
      {
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:CloudFormationStackRecord/${Id}",
        "condition_keys": [],
        "resource": "CloudFormationStackRecord"
      },
      {
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:RelationalDatabase/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "RelationalDatabase"
      },
      {
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:RelationalDatabaseSnapshot/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "RelationalDatabaseSnapshot"
      }
    ],
    "service_name": "Amazon Lightsail"
  },
  {
    "conditions": [],
    "prefix": "logs",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Associates the specified AWS Key Management Service (AWS KMS) customer master key (CMK) with the specified log group.",
        "privilege": "AssociateKmsKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancels an export task if it is in PENDING or RUNNING state",
        "privilege": "CancelExportTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an ExportTask which allows you to efficiently export data from a Log Group to your Amazon S3 bucket",
        "privilege": "CreateExportTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates the log delivery",
        "privilege": "CreateLogDelivery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new log group with the specified name",
        "privilege": "CreateLogGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new log stream with the specified name",
        "privilege": "CreateLogStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the destination with the specified name and eventually disables all the subscription filters that publish to it",
        "privilege": "DeleteDestination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the log delivery information for specified log delivery",
        "privilege": "DeleteLogDelivery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the log group with the specified name and permanently deletes all the archived log events associated with it",
        "privilege": "DeleteLogGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a log stream and permanently deletes all the archived log events associated with it",
        "privilege": "DeleteLogStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a metric filter associated with the specified log group",
        "privilege": "DeleteMetricFilter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a resource policy from this account",
        "privilege": "DeleteResourcePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the retention policy of the specified log group",
        "privilege": "DeleteRetentionPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a subscription filter associated with the specified log group",
        "privilege": "DeleteSubscriptionFilter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns all the destinations that are associated with the AWS account making the request",
        "privilege": "DescribeDestinations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns all the export tasks that are associated with the AWS account making the request",
        "privilege": "DescribeExportTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns all the log groups that are associated with the AWS account making the request",
        "privilege": "DescribeLogGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns all the log streams that are associated with the specified log group",
        "privilege": "DescribeLogStreams",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns all the metrics filters associated with the specified log group",
        "privilege": "DescribeMetricFilters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of CloudWatch Logs Insights queries that are scheduled, executing, or have been executed recently in this account. You can request all queries, or limit it to queries of a specific log group or queries with a certain status.",
        "privilege": "DescribeQueries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Return all the resource policies in this account.",
        "privilege": "DescribeResourcePolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns all the subscription filters associated with the specified log group",
        "privilege": "DescribeSubscriptionFilters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates the associated AWS Key Management Service (AWS KMS) customer master key (CMK) from the specified log group",
        "privilege": "DisassociateKmsKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves log events, optionally filtered by a filter pattern from the specified log group",
        "privilege": "FilterLogEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the log delivery information for specified log delivery",
        "privilege": "GetLogDelivery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves log events from the specified log stream",
        "privilege": "GetLogEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-stream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of the fields that are included in log events in the specified log group, along with the percentage of log events that contain each field. The search is limited to a time period that you specify.",
        "privilege": "GetLogGroupFields",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves all the fields and values of a single log event. All fields are retrieved, even if the original query that produced the logRecordPointer retrieved only a subset of fields. Fields are returned as field name/field value pairs.",
        "privilege": "GetLogRecord",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the results from the specified query. If the query is in progress, partial results of that current execution are returned. Only the fields requested in the query are returned.",
        "privilege": "GetQueryResults",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the log deliveries for specified account and/or log source",
        "privilege": "ListLogDeliveries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the tags for the specified log group",
        "privilege": "ListTagsLogGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates a Destination",
        "privilege": "PutDestination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates an access policy associated with an existing Destination",
        "privilege": "PutDestinationPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Uploads a batch of log events to the specified log stream",
        "privilege": "PutLogEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-stream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates a metric filter and associates it with the specified log group",
        "privilege": "PutMetricFilter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates a resource policy allowing other AWS services to put log events to this account",
        "privilege": "PutResourcePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the retention of the specified log group",
        "privilege": "PutRetentionPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates a subscription filter and associates it with the specified log group",
        "privilege": "PutSubscriptionFilter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Schedules a query of a log group using CloudWatch Logs Insights. You specify the log group and time range to query, and the query string to use.",
        "privilege": "StartQuery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Stops a CloudWatch Logs Insights query that is in progress. If the query has already ended, the operation returns an error indicating that the specified query is not running.",
        "privilege": "StopQuery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds or updates the specified tags for the specified log group",
        "privilege": "TagLogGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Tests the filter pattern of a metric filter against a sample of log event messages",
        "privilege": "TestMetricFilter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes the specified tags from the specified log group",
        "privilege": "UntagLogGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "log-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the log delivery information for specified log delivery",
        "privilege": "UpdateLogDelivery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}",
        "condition_keys": [],
        "resource": "log-group"
      },
      {
        "arn": "arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName}",
        "condition_keys": [],
        "resource": "log-stream"
      }
    ],
    "service_name": "Amazon CloudWatch Logs"
  },
  {
    "conditions": [],
    "prefix": "machinelearning",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "Adds one or more tags to an object, up to a limit of 10. Each tag consists of a key and an optional value",
        "privilege": "AddTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "batchprediction"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasource"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "evaluation"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlmodel"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Generates predictions for a group of observations",
        "privilege": "CreateBatchPrediction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "batchprediction*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasource*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlmodel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a DataSource object from an Amazon RDS",
        "privilege": "CreateDataSourceFromRDS",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasource*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a DataSource from a database hosted on an Amazon Redshift cluster",
        "privilege": "CreateDataSourceFromRedshift",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasource*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a DataSource object from S3",
        "privilege": "CreateDataSourceFromS3",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasource*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new Evaluation of an MLModel",
        "privilege": "CreateEvaluation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasource*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "evaluation*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlmodel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new MLModel",
        "privilege": "CreateMLModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasource*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlmodel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a real-time endpoint for the MLModel",
        "privilege": "CreateRealtimeEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlmodel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Assigns the DELETED status to a BatchPrediction, rendering it unusable",
        "privilege": "DeleteBatchPrediction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "batchprediction*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Assigns the DELETED status to a DataSource, rendering it unusable",
        "privilege": "DeleteDataSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasource*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Assigns the DELETED status to an Evaluation, rendering it unusable",
        "privilege": "DeleteEvaluation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "evaluation*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Assigns the DELETED status to an MLModel, rendering it unusable",
        "privilege": "DeleteMLModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlmodel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a real time endpoint of an MLModel",
        "privilege": "DeleteRealtimeEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlmodel*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Deletes the specified tags associated with an ML object. After this operation is complete, you can't recover deleted tags",
        "privilege": "DeleteTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "batchprediction"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasource"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "evaluation"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlmodel"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of BatchPrediction operations that match the search criteria in the request",
        "privilege": "DescribeBatchPredictions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of DataSource that match the search criteria in the request",
        "privilege": "DescribeDataSources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of DescribeEvaluations that match the search criteria in the request",
        "privilege": "DescribeEvaluations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of MLModel that match the search criteria in the request",
        "privilege": "DescribeMLModels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes one or more of the tags for your Amazon ML object",
        "privilege": "DescribeTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "batchprediction"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasource"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "evaluation"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlmodel"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a BatchPrediction that includes detailed metadata, status, and data file information",
        "privilege": "GetBatchPrediction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "batchprediction*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a DataSource that includes metadata and data file information, as well as the current status of the DataSource",
        "privilege": "GetDataSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasource*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns an Evaluation that includes metadata as well as the current status of the Evaluation",
        "privilege": "GetEvaluation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasource*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns an MLModel that includes detailed metadata, and data source information as well as the current status of the MLModel",
        "privilege": "GetMLModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlmodel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Generates a prediction for the observation using the specified ML Model",
        "privilege": "Predict",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlmodel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the BatchPredictionName of a BatchPrediction",
        "privilege": "UpdateBatchPrediction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "batchprediction*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the DataSourceName of a DataSource",
        "privilege": "UpdateDataSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasource*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the EvaluationName of an Evaluation",
        "privilege": "UpdateEvaluation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "evaluation*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the MLModelName and the ScoreThreshold of an MLModel",
        "privilege": "UpdateMLModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "mlmodel*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:machinelearning:${Region}:${Account}:batchprediction/${BatchPredictionId}",
        "condition_keys": [],
        "resource": "batchprediction"
      },
      {
        "arn": "arn:${Partition}:machinelearning:${Region}:${Account}:datasource/${DatasourceId}",
        "condition_keys": [],
        "resource": "datasource"
      },
      {
        "arn": "arn:${Partition}:machinelearning:${Region}:${Account}:evaluation/${EvaluationId}",
        "condition_keys": [],
        "resource": "evaluation"
      },
      {
        "arn": "arn:${Partition}:machinelearning:${Region}:${Account}:mlmodel/${MlModelId}",
        "condition_keys": [],
        "resource": "mlmodel"
      }
    ],
    "service_name": "Amazon Machine Learning"
  },
  {
    "conditions": [
      {
        "condition": "aws:SourceArn",
        "description": "Allow access to the specified actions only when the request operates on the specified aws resource",
        "type": "Arn"
      }
    ],
    "prefix": "macie",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Enables the user to associate a specified AWS account with Amazon Macie as a member account.",
        "privilege": "AssociateMemberAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to associate specified S3 resources with Amazon Macie for monitoring and data classification.",
        "privilege": "AssociateS3Resources",
        "resource_types": [
          {
            "condition_keys": [
              "aws:SourceArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to remove the specified member account from Amazon Macie.",
        "privilege": "DisassociateMemberAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to remove specified S3 resources from being monitored by Amazon Macie.",
        "privilege": "DisassociateS3Resources",
        "resource_types": [
          {
            "condition_keys": [
              "aws:SourceArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Enables the user to list all Amazon Macie member accounts for the current Macie master account.",
        "privilege": "ListMemberAccounts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Enables the user to list all the S3 resources associated with Amazon Macie.",
        "privilege": "ListS3Resources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to update the classification types for the specified S3 resources.",
        "privilege": "UpdateS3Resources",
        "resource_types": [
          {
            "condition_keys": [
              "aws:SourceArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon Macie"
  },
  {
    "conditions": [],
    "prefix": "managedblockchain",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to create a member of an Amazon Managed Blockchain network.",
        "privilege": "CreateMember",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "network*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an Amazon Managed Blockchain network.",
        "privilege": "CreateNetwork",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a node within a member of an Amazon Managed Blockchain network.",
        "privilege": "CreateNode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "member*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a proposal that other blockchain network members can vote on to add or remove a member in an Amazon Managed Blockchain network.",
        "privilege": "CreateProposal",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "network*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a member and all associated resources from an Amazon Managed Blockchain network.",
        "privilege": "DeleteMember",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "member*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a node from a member of an Amazon Managed Blockchain network.",
        "privilege": "DeleteNode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "node*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return detailed information about a member of an Amazon Managed Blockchain network.",
        "privilege": "GetMember",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "member*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return detailed information about an Amazon Managed Blockchain network.",
        "privilege": "GetNetwork",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "network*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return detailed information about a node within a member of an Amazon Managed Blockchain network.",
        "privilege": "GetNode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "node*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return detailed information about a proposal of an Amazon Managed Blockchain network.",
        "privilege": "GetProposal",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "proposal*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the invitations extended to the active AWS account from any Managed Blockchain network.",
        "privilege": "ListInvitations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the members of an Amazon Managed Blockchain network and the properties of their memberships.",
        "privilege": "ListMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "network*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to return information about the Amazon Managed Blockchain networks in which the current AWS account has members.",
        "privilege": "ListNetworks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the nodes within a member of an Amazon Managed Blockchain network.",
        "privilege": "ListNodes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "member*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all votes for a proposal, including the value of the vote and the unique identifier of the member that cast the vote for the given Amazon Managed Blockchain network.",
        "privilege": "ListProposalVotes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "proposal*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list proposals for the given Amazon Managed Blockchain network.",
        "privilege": "ListProposals",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "network*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reject the invitation to join the blockchain network.",
        "privilege": "RejectInvitation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "invitation*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a member of an Amazon Managed Blockchain network.",
        "privilege": "UpdateMember",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:CreateServiceLinkedRole"
            ],
            "resource_type": "member*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a node from a member of an Amazon Managed Blockchain network.",
        "privilege": "UpdateNode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:CreateServiceLinkedRole"
            ],
            "resource_type": "node*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to cast a vote for a proposal on behalf of the blockchain network member specified.",
        "privilege": "VoteOnProposal",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "proposal*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:managedblockchain:${Region}::networks/${NetworkId}",
        "condition_keys": [],
        "resource": "network"
      },
      {
        "arn": "arn:${Partition}:managedblockchain:${Region}:${Account}:members/${MemberId}",
        "condition_keys": [],
        "resource": "member"
      },
      {
        "arn": "arn:${Partition}:managedblockchain:${Region}:${Account}:nodes/${NodeId}",
        "condition_keys": [],
        "resource": "node"
      },
      {
        "arn": "arn:${Partition}:managedblockchain:${Region}::proposals/${ProposalId}",
        "condition_keys": [],
        "resource": "proposal"
      },
      {
        "arn": "arn:${Partition}:managedblockchain:${Region}:${Account}:invitations/${InvitationId}",
        "condition_keys": [],
        "resource": "invitation"
      }
    ],
    "service_name": "Amazon Managed Blockchain"
  },
  {
    "conditions": [],
    "prefix": "mechanicalturk",
    "privileges": [
      {
        "access_level": "Write",
        "description": "The AcceptQualificationRequest operation grants a Worker's request for a Qualification",
        "privilege": "AcceptQualificationRequest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The ApproveAssignment operation approves the results of a completed assignment",
        "privilege": "ApproveAssignment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The AssociateQualificationWithWorker operation gives a Worker a Qualification",
        "privilege": "AssociateQualificationWithWorker",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateAdditionalAssignmentsForHIT operation increases the maximum number of assignments of an existing HIT",
        "privilege": "CreateAdditionalAssignmentsForHIT",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateHIT operation creates a new HIT (Human Intelligence Task)",
        "privilege": "CreateHIT",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateHITType operation creates a new HIT type",
        "privilege": "CreateHITType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateHITWithHITType operation creates a new Human Intelligence Task (HIT) using an existing HITTypeID generated by the CreateHITType operation",
        "privilege": "CreateHITWithHITType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateQualificationType operation creates a new Qualification type, which is represented by a QualificationType data structure",
        "privilege": "CreateQualificationType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateWorkerBlock operation allows you to prevent a Worker from working on your HITs",
        "privilege": "CreateWorkerBlock",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteHIT operation disposes of a HIT that is no longer needed",
        "privilege": "DeleteHIT",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteQualificationType disposes a Qualification type and disposes any HIT types that are associated with the Qualification type",
        "privilege": "DeleteQualificationType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteWorkerBlock operation allows you to reinstate a blocked Worker to work on your HITs",
        "privilege": "DeleteWorkerBlock",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DisassociateQualificationFromWorker revokes a previously granted Qualification from a user",
        "privilege": "DisassociateQualificationFromWorker",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "The GetAccountBalance operation retrieves the amount of money in your Amazon Mechanical Turk account",
        "privilege": "GetAccountBalance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "The GetAssignment retrieves an assignment with an AssignmentStatus value of Submitted, Approved, or Rejected, using the assignment's ID",
        "privilege": "GetAssignment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "The GetFileUploadURL operation generates and returns a temporary URL",
        "privilege": "GetFileUploadURL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "The GetHIT operation retrieves the details of the specified HIT",
        "privilege": "GetHIT",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "The GetQualificationScore operation returns the value of a Worker's Qualification for a given Qualification type",
        "privilege": "GetQualificationScore",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "The GetQualificationType operation retrieves information about a Qualification type using its ID",
        "privilege": "GetQualificationType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The ListAssignmentsForHIT operation retrieves completed assignments for a HIT",
        "privilege": "ListAssignmentsForHIT",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The ListBonusPayments operation retrieves the amounts of bonuses you have paid to Workers for a given HIT or assignment",
        "privilege": "ListBonusPayments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The ListHITs operation returns all of a Requester's HITs",
        "privilege": "ListHITs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The ListHITsForQualificationType operation returns the HITs that use the given QualififcationType for a QualificationRequirement",
        "privilege": "ListHITsForQualificationType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The ListQualificationRequests operation retrieves requests for Qualifications of a particular Qualification type",
        "privilege": "ListQualificationRequests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The ListQualificationTypes operation searches for Qualification types using the specified search query, and returns a list of Qualification types",
        "privilege": "ListQualificationTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The ListReviewPolicyResultsForHIT operation retrieves the computed results and the actions taken in the course of executing your Review Policies during a CreateHIT operation",
        "privilege": "ListReviewPolicyResultsForHIT",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The ListReviewableHITs operation returns all of a Requester's HITs that have not been approved or rejected",
        "privilege": "ListReviewableHITs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The ListWorkersBlocks operation retrieves a list of Workers who are blocked from working on your HITs",
        "privilege": "ListWorkerBlocks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "The ListWorkersWithQualificationType operation returns all of the Workers with a given Qualification type",
        "privilege": "ListWorkersWithQualificationType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The NotifyWorkers operation sends an email to one or more Workers that you specify with the Worker ID",
        "privilege": "NotifyWorkers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The RejectAssignment operation rejects the results of a completed assignment",
        "privilege": "RejectAssignment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The RejectQualificationRequest operation rejects a user's request for a Qualification",
        "privilege": "RejectQualificationRequest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The SendBonus operation issues a payment of money from your account to a Worker",
        "privilege": "SendBonus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The SendTestEventNotification operation causes Amazon Mechanical Turk to send a notification message as if a HIT event occurred, according to the provided notification specification",
        "privilege": "SendTestEventNotification",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The UpdateExpirationForHIT operation allows you extend the expiration time of a HIT beyond is current expiration or expire a HIT immediately",
        "privilege": "UpdateExpirationForHIT",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The UpdateHITReviewStatus operation toggles the status of a HIT",
        "privilege": "UpdateHITReviewStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The UpdateHITTypeOfHIT operation allows you to change the HITType properties of a HIT",
        "privilege": "UpdateHITTypeOfHIT",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The UpdateNotificationSettings operation creates, updates, disables or re-enables notifications for a HIT type",
        "privilege": "UpdateNotificationSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The UpdateQualificationType operation modifies the attributes of an existing Qualification type, which is represented by a QualificationType data structure",
        "privilege": "UpdateQualificationType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon Mechanical Turk"
  },
  {
    "conditions": [],
    "prefix": "mediaconnect",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to add outputs to any flow.",
        "privilege": "AddFlowOutputs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create flows.",
        "privilege": "CreateFlow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete flows.",
        "privilege": "DeleteFlow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to display the details of a flow including the flow ARN, name, and Availability Zone, as well as details about the source, outputs, and entitlements.",
        "privilege": "DescribeFlow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to grant entitlements on any flow.",
        "privilege": "GrantFlowEntitlements",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to display a list of all entitlements that have been granted to the account.",
        "privilege": "ListEntitlements",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to display a list of flows that are associated with this account.",
        "privilege": "ListFlows",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove outputs from any flow.",
        "privilege": "RemoveFlowOutput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to revoke entitlements on any flow.",
        "privilege": "RevokeFlowEntitlement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start flows.",
        "privilege": "StartFlow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop flows.",
        "privilege": "StopFlow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update entitlements on any flow.",
        "privilege": "UpdateFlowEntitlement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update outputs on any flow.",
        "privilege": "UpdateFlowOutput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the source of any flow.",
        "privilege": "UpdateFlowSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:mediaconnect:${Region}:${Account}:entitlement:${FlowId}:${EntitlementName}",
        "condition_keys": [],
        "resource": "Entitlement"
      },
      {
        "arn": "arn:${Partition}:mediaconnect:${Region}:${Account}:flow:${FlowId}:${FlowName}",
        "condition_keys": [],
        "resource": "Flow"
      },
      {
        "arn": "arn:${Partition}:mediaconnect:${Region}:${Account}:output:${OutputId}:${OutputName}",
        "condition_keys": [],
        "resource": "Output"
      },
      {
        "arn": "arn:${Partition}:mediaconnect:${Region}:${Account}:source:${SourceId}:${SourceName}",
        "condition_keys": [],
        "resource": "Source"
      }
    ],
    "service_name": "AWS Elemental MediaConnect"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "mediaconvert",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to associate an AWS Certificate Manager (ACM) Amazon Resource Name (ARN) with AWS Elemental MediaConvert.",
        "privilege": "AssociateCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to cancel an AWS Elemental MediaConvert job that is waiting in queue",
        "privilege": "CancelJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create and submit an AWS Elemental MediaConvert job",
        "privilege": "CreateJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "JobTemplate"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Preset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Queue"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an AWS Elemental MediaConvert custom job template",
        "privilege": "CreateJobTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Preset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Queue"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an AWS Elemental MediaConvert custom output preset",
        "privilege": "CreatePreset",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an AWS Elemental MediaConvert job queue",
        "privilege": "CreateQueue",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an AWS Elemental MediaConvert custom job template",
        "privilege": "DeleteJobTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "JobTemplate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an AWS Elemental MediaConvert custom output preset",
        "privilege": "DeletePreset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Preset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an AWS Elemental MediaConvert job queue",
        "privilege": "DeleteQueue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Queue*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to subscribe to the AWS Elemental MediaConvert service, by sending a request for an account-specific endpoint. All transcoding requests must be sent to the endpoint that the service returns.",
        "privilege": "DescribeEndpoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove an association between the Amazon Resource Name (ARN) of an AWS Certificate Manager (ACM) certificate and an AWS Elemental MediaConvert resource.",
        "privilege": "DisassociateCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get an AWS Elemental MediaConvert job",
        "privilege": "GetJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Job*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get an AWS Elemental MediaConvert job template",
        "privilege": "GetJobTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "JobTemplate*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get an AWS Elemental MediaConvert output preset",
        "privilege": "GetPreset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Preset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get an AWS Elemental MediaConvert job queue",
        "privilege": "GetQueue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Queue*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list AWS Elemental MediaConvert job templates",
        "privilege": "ListJobTemplates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list AWS Elemental MediaConvert jobs",
        "privilege": "ListJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Queue"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list AWS Elemental MediaConvert output presets",
        "privilege": "ListPresets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list AWS Elemental MediaConvert job queues",
        "privilege": "ListQueues",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the tags for a MediaConvert queue, preset, or job template",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "JobTemplate"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Preset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Queue"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add tags to a MediaConvert queue, preset, or job template",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "JobTemplate"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Preset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Queue"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove tags from a MediaConvert queue, preset, or job template",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "JobTemplate"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Preset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Queue"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an AWS Elemental MediaConvert custom job template",
        "privilege": "UpdateJobTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "JobTemplate*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Preset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Queue"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an AWS Elemental MediaConvert custom output preset",
        "privilege": "UpdatePreset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Preset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an AWS Elemental MediaConvert job queue",
        "privilege": "UpdateQueue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Queue*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:mediaconvert:${Region}:${Account}:jobs/${JobId}",
        "condition_keys": [],
        "resource": "Job"
      },
      {
        "arn": "arn:${Partition}:mediaconvert:${Region}:${Account}:queues/${QueueName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "Queue"
      },
      {
        "arn": "arn:${Partition}:mediaconvert:${Region}:${Account}:presets/${PresetName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "Preset"
      },
      {
        "arn": "arn:${Partition}:mediaconvert:${Region}:${Account}:jobTemplates/${JobTemplateName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "JobTemplate"
      },
      {
        "arn": "arn:${Partition}:mediaconvert:${Region}:${Account}:certificates/${CertificateArn}",
        "condition_keys": [],
        "resource": "CertificateAssociation"
      }
    ],
    "service_name": "AWS Elemental MediaConvert"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "The tag for a MediaLive request.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "The tag for a MediaLive resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "The tag keys for a MediaLive resource or request.",
        "type": "String"
      }
    ],
    "prefix": "medialive",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to add and remove actions from a channel's schedule.",
        "privilege": "BatchUpdateSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to create a channel",
        "privilege": "CreateChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to create an input",
        "privilege": "CreateInput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input-security-group*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to create an input security group",
        "privilege": "CreateInputSecurityGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input-security-group*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to create a multiplex",
        "privilege": "CreateMultiplex",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "multiplex*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to create tags for channels, inputs, input security groups, multiplexes, and reservations.",
        "privilege": "CreateTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input-security-group"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "multiplex"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "reservation"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a channel",
        "privilege": "DeleteChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an input",
        "privilege": "DeleteInput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an input security group",
        "privilege": "DeleteInputSecurityGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input-security-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a multiplex",
        "privilege": "DeleteMultiplex",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "multiplex*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an expired reservation",
        "privilege": "DeleteReservation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "reservation*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to delete tags from channels, inputs, input security groups, multiplexes, and reservations.",
        "privilege": "DeleteTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input-security-group"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "multiplex"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "reservation"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details about a channel",
        "privilege": "DescribeChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe an input",
        "privilege": "DescribeInput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe an input security group",
        "privilege": "DescribeInputSecurityGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input-security-group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe a multiplex",
        "privilege": "DescribeMultiplex",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "multiplex*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details about a reservation offering",
        "privilege": "DescribeOffering",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "offering*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get details about a reservation",
        "privilege": "DescribeReservation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "reservation*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view a list of actions scheduled on a channel.",
        "privilege": "DescribeSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list channels",
        "privilege": "ListChannels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list input security groups",
        "privilege": "ListInputSecurityGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list inputs",
        "privilege": "ListInputs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list multiplexes",
        "privilege": "ListMultiplexes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list reservation offerings",
        "privilege": "ListOfferings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list reservations",
        "privilege": "ListReservations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list tags for channels, inputs, input security groups, multiplexes, and reservations.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input-security-group"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "multiplex"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "reservation"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to purchase a reservation offering",
        "privilege": "PurchaseOffering",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "offering*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "reservation*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start a channel",
        "privilege": "StartChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start a multiplex",
        "privilege": "StartMultiplex",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "multiplex*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop a channel",
        "privilege": "StopChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop a multiplex",
        "privilege": "StopMultiplex",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "multiplex*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a channel",
        "privilege": "UpdateChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the class of a channel",
        "privilege": "UpdateChannelClass",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channel*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an input",
        "privilege": "UpdateInput",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an input security group",
        "privilege": "UpdateInputSecurityGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "input-security-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a multiplex",
        "privilege": "UpdateMultiplex",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "multiplex*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a reservation",
        "privilege": "UpdateReservation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "reservation*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:channel:*",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "channel"
      },
      {
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:input:*",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "input"
      },
      {
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:inputSecurityGroup:*",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "input-security-group"
      },
      {
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:multiplex:*",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "multiplex"
      },
      {
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:reservation:*",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "reservation"
      },
      {
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:offering:*",
        "condition_keys": [],
        "resource": "offering"
      }
    ],
    "service_name": "AWS Elemental MediaLive"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "",
        "type": "String"
      }
    ],
    "prefix": "mediapackage",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to create a channel in AWS Elemental MediaPackage.",
        "privilege": "CreateChannel",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an endpoint in AWS Elemental MediaPackage.",
        "privilege": "CreateOriginEndpoint",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a channel in AWS Elemental MediaPackage.",
        "privilege": "DeleteChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channels*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an endpoint in AWS Elemental MediaPackage.",
        "privilege": "DeleteOriginEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "origin_endpoints*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the details of a channel in AWS Elemental MediaPackage.",
        "privilege": "DescribeChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channels*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the details of an endpoint in AWS Elemental MediaPackage.",
        "privilege": "DescribeOriginEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "origin_endpoints*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view a list of channels in AWS Elemental MediaPackage.",
        "privilege": "ListChannels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view a list of endpoints in AWS Elemental MediaPackage.",
        "privilege": "ListOriginEndpoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list the tags assigned to a Channel or OriginEndpoint.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channels"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "origin_endpoints"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to rotate IngestEndpoint credentials for a Channel in AWS Elemental MediaPackage.",
        "privilege": "RotateIngestEndpointCredentials",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channels*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to assign tags to a Channel or OriginEndpoint.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channels"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "origin_endpoints"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete tags to a Channel or OriginEndpoint.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channels"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "origin_endpoints"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to make changes to a channel in AWS Elemental MediaPackage.",
        "privilege": "UpdateChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "channels*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to make changes to an endpoint in AWS Elemental MediaPackage.",
        "privilege": "UpdateOriginEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "origin_endpoints*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:mediapackage:${Region}:${Account}:channels/${ChannelIdentifier}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "channels"
      },
      {
        "arn": "arn:${Partition}:mediapackage:${Region}:${Account}:origin_endpoints/${OriginEndpointIdentifier}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "origin_endpoints"
      }
    ],
    "service_name": "AWS Elemental MediaPackage"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "mediapackage-vod",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to create an asset in AWS Elemental MediaPackage",
        "privilege": "CreateAsset",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a packaging configuration in AWS Elemental MediaPackage",
        "privilege": "CreatePackagingConfiguration",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a packaging group in AWS Elemental MediaPackage",
        "privilege": "CreatePackagingGroup",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an asset in AWS Elemental MediaPackage",
        "privilege": "DeleteAsset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "assets*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a packaging configuration in AWS Elemental MediaPackage",
        "privilege": "DeletePackagingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "packaging-configurations*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a packaging group in AWS Elemental MediaPackage",
        "privilege": "DeletePackagingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "packaging-groups*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the details of an asset in AWS Elemental MediaPackage",
        "privilege": "DescribeAsset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "assets*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the details of a packaging configuration in AWS Elemental MediaPackage",
        "privilege": "DescribePackagingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "packaging-configurations*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the details of a packaging group in AWS Elemental MediaPackage",
        "privilege": "DescribePackagingGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "packaging-groups*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view a list of assets in AWS Elemental MediaPackage",
        "privilege": "ListAssets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view a list of packaging configurations in AWS Elemental MediaPackage",
        "privilege": "ListPackagingConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view a list of packaging groups in AWS Elemental MediaPackage",
        "privilege": "ListPackagingGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list the tags assigned to a PackagingGroup, PackagingConfiguration, or Asset.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "assets"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "packaging-configurations"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "packaging-groups"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to assign tags to a PackagingGroup, PackagingConfiguration, or Asset.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "assets"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "packaging-configurations"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "packaging-groups"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete tags from a PackagingGroup, PackagingConfiguration, or Asset.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "assets"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "packaging-configurations"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "packaging-groups"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:mediapackage-vod:${Region}:${Account}:assets/${AssetIdentifier}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "assets"
      },
      {
        "arn": "arn:${Partition}:mediapackage-vod:${Region}:${Account}:packaging-configurations/${PackagingConfigurationIdentifier}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "packaging-configurations"
      },
      {
        "arn": "arn:${Partition}:mediapackage-vod:${Region}:${Account}:packaging-groups/${PackagingGroupIdentifier}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "packaging-groups"
      }
    ],
    "service_name": "AWS Elemental MediaPackage VOD"
  },
  {
    "conditions": [],
    "prefix": "mediastore",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to create containers.",
        "privilege": "CreateContainer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete any container in the current account.",
        "privilege": "DeleteContainer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to delete the access policy of any container in the current account.",
        "privilege": "DeleteContainerPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the CORS policy from any container in the current account.",
        "privilege": "DeleteCorsPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the lifecycle policy from any container in the current account.",
        "privilege": "DeleteLifecyclePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the metric policy from any container in the current account.",
        "privilege": "DeleteMetricPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete objects.",
        "privilege": "DeleteObject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve details on any container in the current account.",
        "privilege": "DescribeContainer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve object metadata.",
        "privilege": "DescribeObject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the access policy of any container in the current account.",
        "privilege": "GetContainerPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the CORS policy of any container in the current account.",
        "privilege": "GetCorsPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the lifecycle policy that is assigned to any container in the current account.",
        "privilege": "GetLifecyclePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the metric policy that is assigned to any container in the current account.",
        "privilege": "GetMetricPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve objects.",
        "privilege": "GetObject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of containers in the current account.",
        "privilege": "ListContainers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of objects and folders in the current account.",
        "privilege": "ListItems",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list tags on any container in the current account.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to create or replace the access policy of any container in the current account.",
        "privilege": "PutContainerPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add or modify the CORS policy of any container in the current account.",
        "privilege": "PutCorsPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add or modify the lifecycle policy that is assigned to any container in the current account.",
        "privilege": "PutLifecyclePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add or modify the metric policy that is assigned to any container in the current account.",
        "privilege": "PutMetricPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to upload objects.",
        "privilege": "PutObject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable access logging on any container in the current account.",
        "privilege": "StartAccessLogging",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable access logging on any container in the current account.",
        "privilege": "StopAccessLogging",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add tags to any container in the current account.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove tags from any container in the current account.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}",
        "condition_keys": [],
        "resource": "container"
      }
    ],
    "service_name": "AWS Elemental MediaStore"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "mediatailor",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Deletes the playback configuration for the specified name",
        "privilege": "DeletePlaybackConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "playbackConfiguration*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the configuration for the specified name",
        "privilege": "GetPlaybackConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "playbackConfiguration*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve the list of available configurations",
        "privilege": "ListPlaybackConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of the tags assigned to the specified playback configuration resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add a new configuration",
        "privilege": "PutPlaybackConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "playbackConfiguration*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds tags to the specified playback configuration resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes tags from the specified playback configuration resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:mediatailor:${Region}:${Account}:playbackConfiguration/${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "playbackConfiguration"
      }
    ],
    "service_name": "AWS Elemental MediaTailor"
  },
  {
    "conditions": [],
    "prefix": "mgh",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Associate a given AWS artifact to a MigrationTask",
        "privilege": "AssociateCreatedArtifact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "migrationTask*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associate a given ADS resource to a MigrationTask",
        "privilege": "AssociateDiscoveredResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "migrationTask*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a Migration Hub Home Region Control",
        "privilege": "CreateHomeRegionControl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a ProgressUpdateStream",
        "privilege": "CreateProgressUpdateStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "progressUpdateStream*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a ProgressUpdateStream",
        "privilege": "DeleteProgressUpdateStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "progressUpdateStream*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get an Application Discovery Service Application's state",
        "privilege": "DescribeApplicationState",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List Home Region Controls",
        "privilege": "DescribeHomeRegionControls",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe a MigrationTask",
        "privilege": "DescribeMigrationTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "migrationTask*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociate a given AWS artifact from a MigrationTask",
        "privilege": "DisassociateCreatedArtifact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "migrationTask*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociate a given ADS resource from a MigrationTask",
        "privilege": "DisassociateDiscoveredResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "migrationTask*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the Migration Hub Home Region",
        "privilege": "GetHomeRegion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Import a MigrationTask",
        "privilege": "ImportMigrationTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "migrationTask*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List associated created artifacts for a MigrationTask",
        "privilege": "ListCreatedArtifacts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "migrationTask*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List associated ADS resources from MigrationTask",
        "privilege": "ListDiscoveredResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "migrationTask*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List MigrationTasks",
        "privilege": "ListMigrationTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List ProgressUpdateStreams",
        "privilege": "ListProgressUpdateStreams",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update an Application Discovery Service Application's state",
        "privilege": "NotifyApplicationState",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Notify latest MigrationTask state",
        "privilege": "NotifyMigrationTaskState",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "migrationTask*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Put ResourceAttributes",
        "privilege": "PutResourceAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "migrationTask*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:mgh:${Region}:${Account}:progressUpdateStream/${Stream}",
        "condition_keys": [],
        "resource": "progressUpdateStream"
      },
      {
        "arn": "arn:${Partition}:mgh:${Region}:${Account}:progressUpdateStream/${Stream}/migrationTask/${Task}",
        "condition_keys": [],
        "resource": "migrationTask"
      }
    ],
    "service_name": "AWS Migration Hub"
  },
  {
    "conditions": [],
    "prefix": "mobileanalytics",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Grant access to financial metrics for an app",
        "privilege": "GetFinancialReports",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grant access to standard metrics for an app",
        "privilege": "GetReports",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The PutEvents operation records one or more events",
        "privilege": "PutEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon Mobile Analytics"
  },
  {
    "conditions": [],
    "prefix": "mobilehub",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Create a project",
        "privilege": "CreateProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enable AWS Mobile Hub in the account by creating the required service role",
        "privilege": "CreateServiceRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the specified project",
        "privilege": "DeleteProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a saved snapshot of project configuration",
        "privilege": "DeleteProjectSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deploy changes to the specified stage",
        "privilege": "DeployToStage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe the download bundle",
        "privilege": "DescribeBundle",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Export the download bundle",
        "privilege": "ExportBundle",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Export the project configuration",
        "privilege": "ExportProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Generate project parameters required for code generation",
        "privilege": "GenerateProjectParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get project configuration and resources",
        "privilege": "GetProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Fetch the previously exported project configuration snapshot",
        "privilege": "GetProjectSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new project from the previously exported project configuration",
        "privilege": "ImportProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Install a bundle in the project deployments S3 bucket",
        "privilege": "InstallBundle",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the available SaaS (Software as a Service) connectors",
        "privilege": "ListAvailableConnectors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List available features",
        "privilege": "ListAvailableFeatures",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List available regions for projects",
        "privilege": "ListAvailableRegions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the available download bundles",
        "privilege": "ListBundles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List saved snapshots of project configuration",
        "privilege": "ListProjectSnapshots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List projects",
        "privilege": "ListProjects",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Synchronize state of resources into project",
        "privilege": "SynchronizeProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update project",
        "privilege": "UpdateProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Validate a mobile hub project.",
        "privilege": "ValidateProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Verify AWS Mobile Hub is enabled in the account",
        "privilege": "VerifyServiceRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:mobilehub:${Region}:${Account}:project/${ProjectId}",
        "condition_keys": [],
        "resource": "project"
      }
    ],
    "service_name": "AWS Mobile Hub"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters access by a key that is present in the request the user makes to the pinpoint service.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters access by a tag key and value pair.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters access by the list of all the tag key names present in the request the user makes to the pinpoint service.",
        "type": "String"
      }
    ],
    "prefix": "mobiletargeting",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Create an app.",
        "privilege": "CreateApp",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a campaign for an app.",
        "privilege": "CreateCampaign",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create an email template.",
        "privilege": "CreateEmailTemplate",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create an export job that exports endpoint definitions to Amazon S3.",
        "privilege": "CreateExportJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Import endpoint definitions from to create a segment.",
        "privilege": "CreateImportJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a Journey for an app.",
        "privilege": "CreateJourney",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a push notification template.",
        "privilege": "CreatePushTemplate",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create an Amazon Pinpoint configuration for a recommender model.",
        "privilege": "CreateRecommenderConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a segment that is based on endpoint data reported to Pinpoint by your app. To allow a user to create a segment by importing endpoint data from outside of Pinpoint, allow the mobiletargeting:CreateImportJob action.",
        "privilege": "CreateSegment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create an sms message template.",
        "privilege": "CreateSmsTemplate",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a voice message template.",
        "privilege": "CreateVoiceTemplate",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the ADM channel for an app.",
        "privilege": "DeleteAdmChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the APNs channel for an app.",
        "privilege": "DeleteApnsChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the APNs sandbox channel for an app.",
        "privilege": "DeleteApnsSandboxChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the APNs VoIP channel for an app.",
        "privilege": "DeleteApnsVoipChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the APNs VoIP sandbox channel for an app.",
        "privilege": "DeleteApnsVoipSandboxChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a specific campaign.",
        "privilege": "DeleteApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the Baidu channel for an app.",
        "privilege": "DeleteBaiduChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a specific campaign.",
        "privilege": "DeleteCampaign",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "campaigns*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the email channel for an app.",
        "privilege": "DeleteEmailChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an email template or an email template version.",
        "privilege": "DeleteEmailTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "templates*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an endpoint.",
        "privilege": "DeleteEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the event stream for an app.",
        "privilege": "DeleteEventStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the GCM channel for an app.",
        "privilege": "DeleteGcmChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a specific journey.",
        "privilege": "DeleteJourney",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "journeys*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a push notification template or a push notification template version.",
        "privilege": "DeletePushTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "templates*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an Amazon Pinpoint configuration for a recommender model.",
        "privilege": "DeleteRecommenderConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "recommenders*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a specific segment.",
        "privilege": "DeleteSegment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "segments*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the SMS channel for an app.",
        "privilege": "DeleteSmsChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an sms message template or an sms message template version.",
        "privilege": "DeleteSmsTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "templates*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete all of the endpoints that are associated with a user ID.",
        "privilege": "DeleteUserEndpoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the Voice channel for an app.",
        "privilege": "DeleteVoiceChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a voice message template or a voice message template version.",
        "privilege": "DeleteVoiceTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "templates*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about the Amazon Device Messaging (ADM) channel for an app.",
        "privilege": "GetAdmChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about the APNs channel for an app.",
        "privilege": "GetApnsChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about the APNs sandbox channel for an app.",
        "privilege": "GetApnsSandboxChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about the APNs VoIP channel for an app.",
        "privilege": "GetApnsVoipChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about the APNs VoIP sandbox channel for an app.",
        "privilege": "GetApnsVoipSandboxChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about a specific app in your Amazon Pinpoint account.",
        "privilege": "GetApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieve the default settings for an app.",
        "privilege": "GetApplicationSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieve a list of apps in your Amazon Pinpoint account.",
        "privilege": "GetApps",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about the Baidu channel for an app.",
        "privilege": "GetBaiduChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about a specific campaign.",
        "privilege": "GetCampaign",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "campaigns*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieve information about the activities performed by a campaign.",
        "privilege": "GetCampaignActivities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "campaigns*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about a specific campaign version.",
        "privilege": "GetCampaignVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "campaigns*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieve information about the current and prior versions of a campaign.",
        "privilege": "GetCampaignVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "campaigns*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieve information about all campaigns for an app.",
        "privilege": "GetCampaigns",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get all channels information for your app.",
        "privilege": "GetChannels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Obtain information about the email channel in an app.",
        "privilege": "GetEmailChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about a specific or the active version of an email template.",
        "privilege": "GetEmailTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "templates*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about a specific endpoint.",
        "privilege": "GetEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about the event stream for an app.",
        "privilege": "GetEventStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Obtain information about a specific export job.",
        "privilege": "GetExportJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieve a list of all of the export jobs for an app.",
        "privilege": "GetExportJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about the GCM channel for an app.",
        "privilege": "GetGcmChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about a specific import job.",
        "privilege": "GetImportJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieve information about all import jobs for an app.",
        "privilege": "GetImportJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about a specific journey.",
        "privilege": "GetJourney",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "journeys*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about a specific or the active version of an push notification template.",
        "privilege": "GetPushTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "templates*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about an Amazon Pinpoint configuration for a recommender model.",
        "privilege": "GetRecommenderConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "recommenders*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieve information about all the recommender model configurations that are associated with an Amazon Pinpoint account.",
        "privilege": "GetRecommenderConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about a specific segment.",
        "privilege": "GetSegment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "segments*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieve information about jobs that export endpoint definitions from segments to Amazon S3.",
        "privilege": "GetSegmentExportJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "segments*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieve information about jobs that create segments by importing endpoint definitions from .",
        "privilege": "GetSegmentImportJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "segments*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about a specific segment version.",
        "privilege": "GetSegmentVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "segments*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieve information about the current and prior versions of a segment.",
        "privilege": "GetSegmentVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "segments*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieve information about the segments for an app.",
        "privilege": "GetSegments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Obtain information about the SMS channel in an app.",
        "privilege": "GetSmsChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about a specific or the active version of an sms message template.",
        "privilege": "GetSmsTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "templates*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about the endpoints that are associated with a user ID.",
        "privilege": "GetUserEndpoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Obtain information about the Voice channel in an app.",
        "privilege": "GetVoiceChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about a specific or the active version of a voice message template.",
        "privilege": "GetVoiceTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "templates*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieve information about all journeys for an app.",
        "privilege": "ListJourneys",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List tags for a resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "campaigns"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "segments"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieve all versions about a specific template.",
        "privilege": "ListTemplateVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "templates*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieve metadata about the queried templates.",
        "privilege": "ListTemplates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "templates*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Obtain metadata for a phone number, such as the number type (mobile, landline, or VoIP), location, and provider.",
        "privilege": "PhoneNumberValidate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create or update an event stream for an app.",
        "privilege": "PutEventStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create or update events for an app.",
        "privilege": "PutEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used to remove the attributes for an app.",
        "privilege": "RemoveAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Send an SMS message or push notification to specific endpoints.",
        "privilege": "SendMessages",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Send an SMS message or push notification to all endpoints that are associated with a specific user ID.",
        "privilege": "SendUsersMessages",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds tags to a resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "campaigns"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "segments"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes tags from a resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "campaigns"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "segments"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the Amazon Device Messaging (ADM) channel for an app.",
        "privilege": "UpdateAdmChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the Apple Push Notification service (APNs) channel for an app.",
        "privilege": "UpdateApnsChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the Apple Push Notification service (APNs) sandbox channel for an app.",
        "privilege": "UpdateApnsSandboxChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the Apple Push Notification service (APNs) VoIP channel for an app.",
        "privilege": "UpdateApnsVoipChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the Apple Push Notification service (APNs) VoIP sandbox channel for an app.",
        "privilege": "UpdateApnsVoipSandboxChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the default settings for an app.",
        "privilege": "UpdateApplicationSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the Baidu channel for an app.",
        "privilege": "UpdateBaiduChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update a specific campaign.",
        "privilege": "UpdateCampaign",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "campaigns*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the email channel for an app.",
        "privilege": "UpdateEmailChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update a specific email template under the same version or generate a new version.",
        "privilege": "UpdateEmailTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "templates*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create an endpoint or update the information for an endpoint.",
        "privilege": "UpdateEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create or update endpoints as a batch operation.",
        "privilege": "UpdateEndpointsBatch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the Firebase Cloud Messaging (FCM) or Google Cloud Messaging (GCM) API key that allows to send push notifications to your Android app.",
        "privilege": "UpdateGcmChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update a specific journey.",
        "privilege": "UpdateJourney",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "journeys*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update a specific journey state.",
        "privilege": "UpdateJourneyState",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "journeys*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update a specific push notification template under the same version or generate a new version.",
        "privilege": "UpdatePushTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "templates*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update an Amazon Pinpoint configuration for a recommender model.",
        "privilege": "UpdateRecommenderConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "recommenders*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update a specific segment.",
        "privilege": "UpdateSegment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "segments*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the SMS channel for an app.",
        "privilege": "UpdateSmsChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update a specific sms message template under the same version or generate a new version.",
        "privilege": "UpdateSmsTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "templates*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Upate the active version parameter of a specific template.",
        "privilege": "UpdateTemplateActiveVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "templates*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the Voice channel for an app.",
        "privilege": "UpdateVoiceChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apps*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update a specific voice message template under the same version or generate a new version.",
        "privilege": "UpdateVoiceTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "templates*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "apps"
      },
      {
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/campaigns/${CampaignId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "campaigns"
      },
      {
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/journeys/${JourneyId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "journeys"
      },
      {
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/segments/${SegmentId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "segments"
      },
      {
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:templates/${TemplateName}/${ChannelType}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "templates"
      },
      {
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:recommenders/${RecommenderId}",
        "condition_keys": [],
        "resource": "recommenders"
      }
    ],
    "service_name": "Amazon Pinpoint"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "",
        "type": "String"
      }
    ],
    "prefix": "mq",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to create a broker.",
        "privilege": "CreateBroker",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new configuration for the specified configuration name. Amazon MQ uses the default configuration (the engine type and engine version).",
        "privilege": "CreateConfiguration",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create tags.",
        "privilege": "CreateTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "brokers"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurations"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an ActiveMQ user.",
        "privilege": "CreateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "brokers*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a broker.",
        "privilege": "DeleteBroker",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "brokers*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete tags.",
        "privilege": "DeleteTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "brokers"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurations"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an ActiveMQ user.",
        "privilege": "DeleteUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "brokers*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return information about the specified broker.",
        "privilege": "DescribeBroker",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "brokers*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return information about broker engines.",
        "privilege": "DescribeBrokerEngineTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return information about the broker instance options",
        "privilege": "DescribeBrokerInstanceOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return information about the specified configuration.",
        "privilege": "DescribeConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurations*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return the specified configuration revision for the specified configuration.",
        "privilege": "DescribeConfigurationRevision",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurations*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return information about an ActiveMQ user.",
        "privilege": "DescribeUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "brokers*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to return a list of all brokers.",
        "privilege": "ListBrokers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to return a list of all existing revisions for the specified configuration.",
        "privilege": "ListConfigurationRevisions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurations*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to return a list of all configurations.",
        "privilege": "ListConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to return a list of tags.",
        "privilege": "ListTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "brokers"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurations"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to return a list of all ActiveMQ users.",
        "privilege": "ListUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "brokers*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reboot a broker.",
        "privilege": "RebootBroker",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "brokers*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add a pending configuration change to a broker.",
        "privilege": "UpdateBroker",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "brokers*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the specified configuration.",
        "privilege": "UpdateConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configurations*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the information for an ActiveMQ user.",
        "privilege": "UpdateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "brokers*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:mq:${Region}:${Account}:broker:${broker-id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "brokers"
      },
      {
        "arn": "arn:${Partition}:mq:${Region}:${Account}:configuration:${configuration-id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "configurations"
      }
    ],
    "service_name": "Amazon MQ"
  },
  {
    "conditions": [],
    "prefix": "neptune-db",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Connect to database",
        "privilege": "connect",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "database*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:neptune-db:${Region}:${Account}:${RelativeId}/database",
        "condition_keys": [],
        "resource": "database"
      }
    ],
    "service_name": "Amazon Neptune"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      },
      {
        "condition": "networkmanager:cgwArn",
        "description": "Controls which customer gateways can be associated or disassociated",
        "type": "String"
      },
      {
        "condition": "networkmanager:tgwArn",
        "description": "Controls which transit gateways can be registered or deregistered",
        "type": "String"
      }
    ],
    "prefix": "networkmanager",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to associate a customer gateway to a device",
        "privilege": "AssociateCustomerGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "link"
          },
          {
            "condition_keys": [
              "networkmanager:cgwArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate a link to a device",
        "privilege": "AssociateLink",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "link*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new device",
        "privilege": "CreateDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new global network",
        "privilege": "CreateGlobalNetwork",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [
              "iam:CreateServiceLinkedRole"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new link",
        "privilege": "CreateLink",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "site"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new site",
        "privilege": "CreateSite",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a device",
        "privilege": "DeleteDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a global network",
        "privilege": "DeleteGlobalNetwork",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a link",
        "privilege": "DeleteLink",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "link*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a site",
        "privilege": "DeleteSite",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "site*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to deregister a transit gateway from a global network",
        "privilege": "DeregisterTransitGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [
              "networkmanager:tgwArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe global networks",
        "privilege": "DescribeGlobalNetworks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate a customer gateway from a device",
        "privilege": "DisassociateCustomerGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [
              "networkmanager:cgwArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate a link from a device",
        "privilege": "DisassociateLink",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "link*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe customer gateway associations",
        "privilege": "GetCustomerGatewayAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe devices",
        "privilege": "GetDevices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe link associations",
        "privilege": "GetLinkAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "link"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe links",
        "privilege": "GetLinks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "link"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe global networks",
        "privilege": "GetSites",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "site"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe transit gateway registrations",
        "privilege": "GetTransitGatewayRegistrations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to lists tag for a Network Manager resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "link"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "site"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to register a transit gateway to a global network",
        "privilege": "RegisterTransitGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [
              "networkmanager:tgwArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to tag a Network Manager resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "link"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "site"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to untag a Network Manager resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "link"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "site"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a device",
        "privilege": "UpdateDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a global network",
        "privilege": "UpdateGlobalNetwork",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a link",
        "privilege": "UpdateLink",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "link*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a site",
        "privilege": "UpdateSite",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-network*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "site*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:networkmanager::${Account}:global-network/${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "global-network"
      },
      {
        "arn": "arn:${Partition}:networkmanager::${Account}:site/${GlobalNetworkId}/${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "site"
      },
      {
        "arn": "arn:${Partition}:networkmanager::${Account}:link/${GlobalNetworkId}/${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "link"
      },
      {
        "arn": "arn:${Partition}:networkmanager::${Account}:device/${GlobalNetworkId}/${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "device"
      }
    ],
    "service_name": "Network Manager"
  },
  {
    "conditions": [],
    "prefix": "opsworks",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Assign a registered instance to a layer",
        "privilege": "AssignInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Assigns one of the stack's registered Amazon EBS volumes to a specified instance",
        "privilege": "AssignVolume",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates one of the stack's registered Elastic IP addresses with a specified instance",
        "privilege": "AssociateElasticIp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Attaches an Elastic Load Balancing load balancer to a specified layer",
        "privilege": "AttachElasticLoadBalancer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a clone of a specified stack",
        "privilege": "CloneStack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an app for a specified stack",
        "privilege": "CreateApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Runs deployment or stack commands",
        "privilege": "CreateDeployment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an instance in a specified stack",
        "privilege": "CreateInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a layer",
        "privilege": "CreateLayer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new stack",
        "privilege": "CreateStack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new user profile",
        "privilege": "CreateUserProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specified app",
        "privilege": "DeleteApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specified instance, which terminates the associated Amazon EC2 instance",
        "privilege": "DeleteInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specified layer",
        "privilege": "DeleteLayer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specified stack",
        "privilege": "DeleteStack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a user profile",
        "privilege": "DeleteUserProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a user profile",
        "privilege": "DeregisterEcsCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deregisters a specified Elastic IP address",
        "privilege": "DeregisterElasticIp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deregister a registered Amazon EC2 or on-premises instance",
        "privilege": "DeregisterInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deregisters an Amazon RDS instance",
        "privilege": "DeregisterRdsDbInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deregisters an Amazon EBS volume",
        "privilege": "DeregisterVolume",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the available AWS OpsWorks agent versions",
        "privilege": "DescribeAgentVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Requests a description of a specified set of apps",
        "privilege": "DescribeApps",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the results of specified commands",
        "privilege": "DescribeCommands",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Requests a description of a specified set of deployments",
        "privilege": "DescribeDeployments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes Amazon ECS clusters that are registered with a stack",
        "privilege": "DescribeEcsClusters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes Elastic IP addresses",
        "privilege": "DescribeElasticIps",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes a stack's Elastic Load Balancing instances",
        "privilege": "DescribeElasticLoadBalancers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Requests a description of a set of instances",
        "privilege": "DescribeInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Requests a description of one or more layers in a specified stack",
        "privilege": "DescribeLayers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes load-based auto scaling configurations for specified layers",
        "privilege": "DescribeLoadBasedAutoScaling",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes a user's SSH information",
        "privilege": "DescribeMyUserProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the permissions for a specified stack",
        "privilege": "DescribePermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describe an instance's RAID arrays",
        "privilege": "DescribeRaidArrays",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes Amazon RDS instances",
        "privilege": "DescribeRdsDbInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes AWS OpsWorks service errors",
        "privilege": "DescribeServiceErrors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Requests a description of a stack's provisioning parameters",
        "privilege": "DescribeStackProvisioningParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the number of layers and apps in a specified stack, and the number of instances in each state, such as running_setup or online",
        "privilege": "DescribeStackSummary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Requests a description of one or more stacks",
        "privilege": "DescribeStacks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes time-based auto scaling configurations for specified instances",
        "privilege": "DescribeTimeBasedAutoScaling",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describe specified users",
        "privilege": "DescribeUserProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes an instance's Amazon EBS volumes",
        "privilege": "DescribeVolumes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Detaches a specified Elastic Load Balancing instance from its layer",
        "privilege": "DetachElasticLoadBalancer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates an Elastic IP address from its instance",
        "privilege": "DisassociateElasticIp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a generated host name for the specified layer, based on the current host name theme",
        "privilege": "GetHostnameSuggestion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants RDP access to a Windows instance for a specified time period",
        "privilege": "GrantAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of tags that are applied to the specified stack or layer",
        "privilege": "ListTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Reboots a specified instance",
        "privilege": "RebootInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers a specified Amazon ECS cluster with a stack",
        "privilege": "RegisterEcsCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers an Elastic IP address with a specified stack",
        "privilege": "RegisterElasticIp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers instances with a specified stack that were created outside of AWS OpsWorks",
        "privilege": "RegisterInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers an Amazon RDS instance with a stack",
        "privilege": "RegisterRdsDbInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers an Amazon EBS volume with a specified stack",
        "privilege": "RegisterVolume",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Specify the load-based auto scaling configuration for a specified layer",
        "privilege": "SetLoadBasedAutoScaling",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Specifies a user's permissions",
        "privilege": "SetPermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Specify the time-based auto scaling configuration for a specified instance",
        "privilege": "SetTimeBasedAutoScaling",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a specified instance",
        "privilege": "StartInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a stack's instances",
        "privilege": "StartStack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a specified instance",
        "privilege": "StopInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a specified stack",
        "privilege": "StopStack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Apply tags to a specified stack or layer",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Unassigns a registered instance from all of it's layers",
        "privilege": "UnassignInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Unassigns an assigned Amazon EBS volume",
        "privilege": "UnassignVolume",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes tags from a specified stack or layer",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a specified app",
        "privilege": "UpdateApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a registered Elastic IP address's name",
        "privilege": "UpdateElasticIp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a specified instance",
        "privilege": "UpdateInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a specified layer",
        "privilege": "UpdateLayer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a user's SSH public key",
        "privilege": "UpdateMyUserProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an Amazon RDS instance",
        "privilege": "UpdateRdsDbInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a specified stack",
        "privilege": "UpdateStack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Updates a specified user profile",
        "privilege": "UpdateUserProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an Amazon EBS volume's name or mount point",
        "privilege": "UpdateVolume",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "stack"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:opsworks:${Region}:${Account}:stack/${StackId}/",
        "condition_keys": [],
        "resource": "stack"
      }
    ],
    "service_name": "AWS OpsWorks"
  },
  {
    "conditions": [],
    "prefix": "opsworks-cm",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Associate a node to a configuration management server.",
        "privilege": "AssociateNode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a backup for the specified server.",
        "privilege": "CreateBackup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new server.",
        "privilege": "CreateServer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the specified backup and possibly its S3 bucket.",
        "privilege": "DeleteBackup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified server with his corresponding CF stack and possibly the S3 bucket.",
        "privilege": "DeleteServer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describe the service limits for the user's account.",
        "privilege": "DescribeAccountAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describe a single backup, all backups of a specified server or all backups of the user's account.",
        "privilege": "DescribeBackups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describe all events of the specified server.",
        "privilege": "DescribeEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describe the association status for the specified node token and the specified server.",
        "privilege": "DescribeNodeAssociationStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the specified server or all servers of the user's account.",
        "privilege": "DescribeServers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates a specified node from a server.",
        "privilege": "DisassociateNode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Applies a backup to specified server. Possibly swaps out the ec2-instance if specified.",
        "privilege": "RestoreServer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Start the server maintenance immediately.",
        "privilege": "StartMaintenance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update general server settings.",
        "privilege": "UpdateServer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update server settings specific to the configuration management type.",
        "privilege": "UpdateServerEngineAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS OpsWorks Configuration Management"
  },
  {
    "conditions": [
      {
        "condition": "organizations:PolicyType",
        "description": "Enables you to filter the request to only the specified policy type names.",
        "type": "String"
      },
      {
        "condition": "organizations:ServicePrincipal",
        "description": "Enables you to filter the request to only the specified service principal names.",
        "type": "String"
      }
    ],
    "prefix": "organizations",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to send a response to the originator of a handshake agreeing to the action proposed by the handshake request.",
        "privilege": "AcceptHandshake",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "handshake*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to attach a policy to a root, an organizational unit, or an individual account.",
        "privilege": "AttachPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "account"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organizationalunit"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "root"
          },
          {
            "condition_keys": [
              "organizations:PolicyType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to cancel a handshake.",
        "privilege": "CancelHandshake",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "handshake*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an AWS account that is automatically a member of the organization with the credentials that made the request.",
        "privilege": "CreateAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an AWS GovCloud (US) account.",
        "privilege": "CreateGovCloudAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an organization. The account with the credentials that calls the CreateOrganization operation automatically becomes the master account of the new organization.",
        "privilege": "CreateOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an organizational unit (OU) within a root or parent OU.",
        "privilege": "CreateOrganizationalUnit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organizationalunit"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "root"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a policy that you can attach to a root, an organizational unit (OU), or an individual AWS account.",
        "privilege": "CreatePolicy",
        "resource_types": [
          {
            "condition_keys": [
              "organizations:PolicyType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to decline a handshake request. This sets the handshake state to DECLINED and effectively deactivates the request.",
        "privilege": "DeclineHandshake",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "handshake*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the organization.",
        "privilege": "DeleteOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an organizational unit from a root or another OU.",
        "privilege": "DeleteOrganizationalUnit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organizationalunit*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a policy from your organization.",
        "privilege": "DeletePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          },
          {
            "condition_keys": [
              "organizations:PolicyType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve Organizations-related details about the specified account.",
        "privilege": "DescribeAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "account*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the current status of an asynchronous request to create an account.",
        "privilege": "DescribeCreateAccountStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the effective policy for an account.",
        "privilege": "DescribeEffectivePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "account*"
          },
          {
            "condition_keys": [
              "organizations:PolicyType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve details about a previously requested handshake.",
        "privilege": "DescribeHandshake",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "handshake*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieves details about the organization that the calling credentials belong to.",
        "privilege": "DescribeOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve details about an organizational unit (OU).",
        "privilege": "DescribeOrganizationalUnit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organizationalunit*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieves details about a policy.",
        "privilege": "DescribePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          },
          {
            "condition_keys": [
              "organizations:PolicyType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to detach a policy from a target root, organizational unit, or account.",
        "privilege": "DetachPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "account"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organizationalunit"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "root"
          },
          {
            "condition_keys": [
              "organizations:PolicyType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable integration of an AWS service (the service that is specified by ServicePrincipal) with AWS Organizations.",
        "privilege": "DisableAWSServiceAccess",
        "resource_types": [
          {
            "condition_keys": [
              "organizations:ServicePrincipal"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable an organization policy type in a root.",
        "privilege": "DisablePolicyType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "root*"
          },
          {
            "condition_keys": [
              "organizations:PolicyType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable integration of an AWS service (the service that is specified by ServicePrincipal) with AWS Organizations.",
        "privilege": "EnableAWSServiceAccess",
        "resource_types": [
          {
            "condition_keys": [
              "organizations:ServicePrincipal"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to start the process to enable all features in an organization, upgrading it from supporting only Consolidated Billing features.",
        "privilege": "EnableAllFeatures",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable a policy type in a root.",
        "privilege": "EnablePolicyType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "root*"
          },
          {
            "condition_keys": [
              "organizations:PolicyType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to send an invitation to another AWS account, asking it to join your organization as a member account.",
        "privilege": "InviteAccountToOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "account"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove a member account from its parent organization.",
        "privilege": "LeaveOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve the list of the AWS services for which you enabled integration with your organization.",
        "privilege": "ListAWSServiceAccessForOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all of the the accounts in the organization.",
        "privilege": "ListAccounts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the accounts in an organization that are contained by a root or organizational unit (OU).",
        "privilege": "ListAccountsForParent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organizationalunit"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "root"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all of the OUs or accounts that are contained in a parent OU or root.",
        "privilege": "ListChildren",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organizationalunit"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "root"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the asynchronous account creation requests that are currently being tracked for the organization.",
        "privilege": "ListCreateAccountStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all of the handshakes that are associated with an account.",
        "privilege": "ListHandshakesForAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the handshakes that are associated with the organization.",
        "privilege": "ListHandshakesForOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to lists all of the organizational units (OUs) in a parent organizational unit or root.",
        "privilege": "ListOrganizationalUnitsForParent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organizationalunit"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "root"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the root or organizational units (OUs) that serve as the immediate parent of a child OU or account.",
        "privilege": "ListParents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "account"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organizationalunit"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all of the policies in an organization.",
        "privilege": "ListPolicies",
        "resource_types": [
          {
            "condition_keys": [
              "organizations:PolicyType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all of the policies that are directly attached to a root, organizational unit (OU), or account.",
        "privilege": "ListPoliciesForTarget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "account"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organizationalunit"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "root"
          },
          {
            "condition_keys": [
              "organizations:PolicyType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all of the roots that are defined in the organization.",
        "privilege": "ListRoots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all tags for the specified resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all the roots, OUs, and accounts to which a policy is attached.",
        "privilege": "ListTargetsForPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          },
          {
            "condition_keys": [
              "organizations:PolicyType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to move an account from its current root or OU to another parent root or OU.",
        "privilege": "MoveAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "account*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organizationalunit"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "root"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to removes the specified account from the organization.",
        "privilege": "RemoveAccountFromOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "account*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add one or more tags to the specified resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove one or more tags from the specified resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to rename an organizational unit (OU).",
        "privilege": "UpdateOrganizationalUnit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organizationalunit*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an existing policy with a new name, description, or content.",
        "privilege": "UpdatePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "policy*"
          },
          {
            "condition_keys": [
              "organizations:PolicyType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:organizations::${MasterAccountId}:account/o-${OrganizationId}/${AccountId}",
        "condition_keys": [],
        "resource": "account"
      },
      {
        "arn": "arn:${Partition}:organizations::${MasterAccountId}:handshake/o-${OrganizationId}/${HandshakeType}/h-${HandshakeId}",
        "condition_keys": [],
        "resource": "handshake"
      },
      {
        "arn": "arn:${Partition}:organizations::${MasterAccountId}:organization/o-${OrganizationId}",
        "condition_keys": [],
        "resource": "organization"
      },
      {
        "arn": "arn:${Partition}:organizations::${MasterAccountId}:ou/o-${OrganizationId}/ou-${OrganizationalUnitId}",
        "condition_keys": [],
        "resource": "organizationalunit"
      },
      {
        "arn": "arn:${Partition}:organizations::${MasterAccountId}:policy/o-${OrganizationId}/${PolicyType}/p-${PolicyId}",
        "condition_keys": [],
        "resource": "policy"
      },
      {
        "arn": "arn:${Partition}:organizations::aws:policy/${PolicyType}/p-${PolicyId}",
        "condition_keys": [],
        "resource": "awspolicy"
      },
      {
        "arn": "arn:${Partition}:organizations::${MasterAccountId}:root/o-${OrganizationId}/r-${RootId}",
        "condition_keys": [],
        "resource": "root"
      }
    ],
    "service_name": "AWS Organizations"
  },
  {
    "conditions": [],
    "prefix": "outposts",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates an Outpost",
        "privilege": "CreateOutpost",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about the specified Outpost",
        "privilege": "GetOutpost",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the instance types for the specified Outpost",
        "privilege": "GetOutpostInstanceTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the Outposts for your AWS account",
        "privilege": "ListOutposts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the sites for the specified AWS account",
        "privilege": "ListSites",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:outposts:${Region}:${Account}:outpost/${OutpostId}",
        "condition_keys": [],
        "resource": "Outpost"
      },
      {
        "arn": "arn:${Partition}:outposts:${Region}:${Account}:site/${SiteId}",
        "condition_keys": [],
        "resource": "Site"
      },
      {
        "arn": "arn:${Partition}:outposts:${Region}:${Account}:order/${OrderId}",
        "condition_keys": [],
        "resource": "Order"
      }
    ],
    "service_name": "AWS Outposts"
  },
  {
    "conditions": [],
    "prefix": "personalize",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a campaign",
        "privilege": "CreateCampaign",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "campaign*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a dataset",
        "privilege": "CreateDataset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a dataset group",
        "privilege": "CreateDatasetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasetGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a dataset import job",
        "privilege": "CreateDatasetImportJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasetImportJob*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an event tracker",
        "privilege": "CreateEventTracker",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "eventTracker*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a schema",
        "privilege": "CreateSchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a solution",
        "privilege": "CreateSolution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "solution*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a solution version",
        "privilege": "CreateSolutionVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "solution*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a campaign",
        "privilege": "DeleteCampaign",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "campaign*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a dataset",
        "privilege": "DeleteDataset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a dataset group",
        "privilege": "DeleteDatasetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasetGroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an event tracker",
        "privilege": "DeleteEventTracker",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "eventTracker*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a schema",
        "privilege": "DeleteSchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a solution including all versions of the solution",
        "privilege": "DeleteSolution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "solution*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an algorithm",
        "privilege": "DescribeAlgorithm",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "algorithm*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a campaign",
        "privilege": "DescribeCampaign",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "campaign*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a dataset",
        "privilege": "DescribeDataset",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dataset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a dataset group",
        "privilege": "DescribeDatasetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasetGroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a dataset import job",
        "privilege": "DescribeDatasetImportJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "datasetImportJob*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an event tracker",
        "privilege": "DescribeEventTracker",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "eventTracker*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a feature transformation",
        "privilege": "DescribeFeatureTransformation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "featureTransformation*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a recipe",
        "privilege": "DescribeRecipe",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "recipe*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a schema",
        "privilege": "DescribeSchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a solution",
        "privilege": "DescribeSolution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "solution*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a version of a solution",
        "privilege": "DescribeSolutionVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "solution*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Gets a re-ranked list of recommendations",
        "privilege": "GetPersonalizedRanking",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "campaign*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a list of recommendations from a campaign",
        "privilege": "GetRecommendations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "campaign*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets metrics for a solution version",
        "privilege": "GetSolutionMetrics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "solution*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists campaigns",
        "privilege": "ListCampaigns",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists dataset groups",
        "privilege": "ListDatasetGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists dataset import jobs",
        "privilege": "ListDatasetImportJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists datasets",
        "privilege": "ListDatasets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists event trackers",
        "privilege": "ListEventTrackers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists recipes",
        "privilege": "ListRecipes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists schemas",
        "privilege": "ListSchemas",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists versions of a solution",
        "privilege": "ListSolutionVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists solutions",
        "privilege": "ListSolutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Records real time event data",
        "privilege": "PutEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "eventTracker*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a campaign",
        "privilege": "UpdateCampaign",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "campaign*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:schema/${ResourceId}",
        "condition_keys": [],
        "resource": "schema"
      },
      {
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:feature-transformation/${ResourceId}",
        "condition_keys": [],
        "resource": "featureTransformation"
      },
      {
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:dataset/${ResourceId}",
        "condition_keys": [],
        "resource": "dataset"
      },
      {
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:dataset-group/${ResourceId}",
        "condition_keys": [],
        "resource": "datasetGroup"
      },
      {
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:dataset-import-job/${ResourceId}",
        "condition_keys": [],
        "resource": "datasetImportJob"
      },
      {
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:solution/${ResourceId}",
        "condition_keys": [],
        "resource": "solution"
      },
      {
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:campaign/${ResourceId}",
        "condition_keys": [],
        "resource": "campaign"
      },
      {
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:event-tracker/${ResourceId}",
        "condition_keys": [],
        "resource": "eventTracker"
      },
      {
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:recipe/${ResourceId}",
        "condition_keys": [],
        "resource": "recipe"
      },
      {
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:algorithm/${ResourceId}",
        "condition_keys": [],
        "resource": "algorithm"
      }
    ],
    "service_name": "Amazon Personalize"
  },
  {
    "conditions": [],
    "prefix": "pi",
    "privileges": [
      {
        "access_level": "Read",
        "description": "For a specific time period, retrieve the top N dimension keys for a metric.",
        "privilege": "DescribeDimensionKeys",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "metric-resource*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve PI metrics for a set of data sources, over a time period.",
        "privilege": "GetResourceMetrics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "metric-resource*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:pi:${Region}:${Account}:metrics/${ServiceType}/${Identifier}",
        "condition_keys": [],
        "resource": "metric-resource"
      }
    ],
    "service_name": "AWS Performance Insights"
  },
  {
    "conditions": [],
    "prefix": "polly",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Deletes the specified pronunciation lexicon stored in an AWS Region",
        "privilege": "DeleteLexicon",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "lexicon*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the list of voices that are available for use when requesting speech synthesis.",
        "privilege": "DescribeVoices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the content of the specified pronunciation lexicon stored in an AWS Region.",
        "privilege": "GetLexicon",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "lexicon*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Enables the user to get information about specific speech synthesis task.",
        "privilege": "GetSpeechSynthesisTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of pronunciation lexicons stored in an AWS Region.",
        "privilege": "ListLexicons",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Enables the user to list requested speech synthesis tasks.",
        "privilege": "ListSpeechSynthesisTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stores a pronunciation lexicon in an AWS Region.",
        "privilege": "PutLexicon",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to synthesize long inputs to provided S3 location.",
        "privilege": "StartSpeechSynthesisTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:PutObject"
            ],
            "resource_type": "lexicon"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Synthesizes UTF-8 input, plain text or SSML, to a stream of bytes.",
        "privilege": "SynthesizeSpeech",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "lexicon"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:polly:${Region}:${Account}:lexicon/${LexiconName}",
        "condition_keys": [],
        "resource": "lexicon"
      }
    ],
    "service_name": "Amazon Polly"
  },
  {
    "conditions": [],
    "prefix": "pricing",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Returns the service details for all (paginated) services (if serviceCode is not set) or service detail for a particular service (if given serviceCode).",
        "privilege": "DescribeServices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns all (paginated) possible values for a given attribute.",
        "privilege": "GetAttributeValues",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns all matching products with given search criteria.",
        "privilege": "GetProducts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Price List"
  },
  {
    "conditions": [],
    "prefix": "purchase-orders",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Modify purchase orders and details",
        "privilege": "ModifyPurchaseOrders",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "View purchase orders and details",
        "privilege": "ViewPurchaseOrders",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Purchase Orders Console"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "qldb",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to create a ledger",
        "privilege": "CreateLedger",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a ledger",
        "privilege": "DeleteLedger",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe information about a journal export job",
        "privilege": "DescribeJournalS3Export",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe a ledger",
        "privilege": "DescribeLedger",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to send commands to a ledger via the console",
        "privilege": "ExecuteStatement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to export journal contents to an Amazon S3 bucket",
        "privilege": "ExportJournalToS3",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a block from a ledger for a given BlockAddress",
        "privilege": "GetBlock",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a digest from a ledger for a given BlockAddress",
        "privilege": "GetDigest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a revision for a given document ID and a given BlockAddress",
        "privilege": "GetRevision",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to insert sample application data via the console",
        "privilege": "InsertSampleData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list journal export jobs for all ledgers",
        "privilege": "ListJournalS3Exports",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list journal export jobs for a specified ledger",
        "privilege": "ListJournalS3ExportsForLedger",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list existing ledgers",
        "privilege": "ListLedgers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list tags for a resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to send commands to a ledger",
        "privilege": "SendCommand",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to view a ledger's catalog via the console",
        "privilege": "ShowCatalog",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add one or more tags to a resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove one or more tags to a resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update properties on a ledger",
        "privilege": "UpdateLedger",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ledger*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:qldb:${Region}:${Account}:ledger/${LedgerName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "ledger"
      }
    ],
    "service_name": "Amazon QLDB"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      },
      {
        "condition": "quicksight:IamArn",
        "description": "IAM user ARN or role ARN.",
        "type": "String"
      },
      {
        "condition": "quicksight:SessionName",
        "description": "The session name.",
        "type": "String"
      },
      {
        "condition": "quicksight:UserName",
        "description": "The user name.",
        "type": "String"
      }
    ],
    "prefix": "quicksight",
    "privileges": [
      {
        "access_level": "Write",
        "description": "CreateAdmin enables the user to provision Amazon QuickSight administrators, authors, and readers.",
        "privilege": "CreateAdmin",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a dashboard from a template",
        "privilege": "CreateDashboard",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a QuickSight group.",
        "privilege": "CreateGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Add a QuickSight user to a QuickSight group.",
        "privilege": "CreateGroupMembership",
        "resource_types": [
          {
            "condition_keys": [
              "quicksight:UserName"
            ],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an assignment with one specified IAM Policy ARN that will be assigned to specified groups or users of QuickSight.",
        "privilege": "CreateIAMPolicyAssignment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "assignment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "CreateReader enables the user to provision Amazon QuickSight readers.",
        "privilege": "CreateReader",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a template from an existing QuickSight analysis or template",
        "privilege": "CreateTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "template*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a template alias for a template",
        "privilege": "CreateTemplateAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "template*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "CreateUser enables the user to provision Amazon QuickSight authors and readers.",
        "privilege": "CreateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a dashboard",
        "privilege": "DeleteDashboard",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Remove a user group from QuickSight.",
        "privilege": "DeleteGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Remove a user from a group so that he/she is no longer a member of the group.",
        "privilege": "DeleteGroupMembership",
        "resource_types": [
          {
            "condition_keys": [
              "quicksight:UserName"
            ],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update an existing assignment.",
        "privilege": "DeleteIAMPolicyAssignment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "assignment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a template",
        "privilege": "DeleteTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "template*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the item that the specified template alias points to",
        "privilege": "DeleteTemplateAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "template*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the QuickSight user that is associated with the identity of the IAM user/role making the call. The IAM user is not deleted as a result of this call.",
        "privilege": "DeleteUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a user identified by its principal ID.",
        "privilege": "DeleteUserByPrincipalId",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Provides a summary for a dashboard",
        "privilege": "DescribeDashboard",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes read and write permissions for a dashboard",
        "privilege": "DescribeDashboardPermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return a QuickSight group\u2019s description and ARN.",
        "privilege": "DescribeGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe an existing assignment.",
        "privilege": "DescribeIAMPolicyAssignment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "assignment*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a template's metadata",
        "privilege": "DescribeTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "template*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the template alias for a template",
        "privilege": "DescribeTemplateAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "template*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes read and write permissions on a template",
        "privilege": "DescribeTemplatePermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "template*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return information about a user, given the user name.",
        "privilege": "DescribeUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return an auth code representing a QuickSight user.",
        "privilege": "GetAuthCode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return a QuickSight dashboard embedding URL.",
        "privilege": "GetDashboardEmbedUrl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "GetGroupMapping is used only in Amazon QuickSight Enterprise edition accounts. It enables the user to use Amazon QuickSight to identify and display the Microsoft Active Directory (Microsoft Active Directory) directory groups that are mapped to roles in Amazon QuickSight.",
        "privilege": "GetGroupMapping",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the versions of the dashboards in the QuickSight subscription",
        "privilege": "ListDashboardVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists dashboards in an AWS account",
        "privilege": "ListDashboards",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Return a list of member users in a group.",
        "privilege": "ListGroupMemberships",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get a list of all user groups in QuickSight.",
        "privilege": "ListGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all assignments in the current Amazon QuickSight account.",
        "privilege": "ListIAMPolicyAssignments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "assignment*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all assignments assigned to a user and the groups it belongs",
        "privilege": "ListIAMPolicyAssignmentsForUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "assignment*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List tags of a QuickSight resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "template"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the aliases of a template",
        "privilege": "ListTemplateAliases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "template*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the versions of the templates in the current Amazon QuickSight account",
        "privilege": "ListTemplateVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "template*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the templates in the current Amazon QuickSight account",
        "privilege": "ListTemplates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "template*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Return a list of groups that a given user is a member of.",
        "privilege": "ListUserGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Return a list of all of the QuickSight users belonging to this account.",
        "privilege": "ListUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a QuickSight user, whose identity is associated with the IAM identity/role specified in the request.",
        "privilege": "RegisterUser",
        "resource_types": [
          {
            "condition_keys": [
              "quicksight:IamArn",
              "quicksight:SessionName"
            ],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "SearchDirectoryGroups is used only in Amazon QuickSight Enterprise edition accounts. It enables the user to use Amazon QuickSight to display your Microsoft Active Directory directory groups so that you can choose which ones to map to roles in Amazon QuickSight.",
        "privilege": "SearchDirectoryGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "SearchDirectoryGroups is used only in Amazon QuickSight Enterprise edition accounts. It enables the user to use Amazon QuickSight to display your Microsoft Active Directory directory groups so that you can choose which ones to map to roles in Amazon QuickSight.",
        "privilege": "SetGroupMapping",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Subscribe enables the user to subscribe to Amazon QuickSight. Enabling this action also allows the user to upgrade the subscription to Enterprise edition.",
        "privilege": "Subscribe",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Add tags to a QuickSight resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "template"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Unsubscribe enables the user to unsubscribe from Amazon QuickSight, which permanently deletes all users and their resources from Amazon QuickSight.",
        "privilege": "Unsubscribe",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Remove tags from a QuickSight resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "template"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a dashboard in an AWS account",
        "privilege": "UpdateDashboard",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates read and write permissions on a dashboard",
        "privilege": "UpdateDashboardPermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the published version of a dashboard",
        "privilege": "UpdateDashboardPublishedVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dashboard*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Change group description.",
        "privilege": "UpdateGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update an existing assignment.",
        "privilege": "UpdateIAMPolicyAssignment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "assignment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a template from an existing Amazon QuickSight analysis or another template",
        "privilege": "UpdateTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "template*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the template alias of a template",
        "privilege": "UpdateTemplateAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "template*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the resource permissions for a template",
        "privilege": "UpdateTemplatePermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "template*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an Amazon QuickSight user.",
        "privilege": "UpdateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:user/${ResourceId}",
        "condition_keys": [],
        "resource": "user"
      },
      {
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:group/${ResourceId}",
        "condition_keys": [],
        "resource": "group"
      },
      {
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:dashboard/${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "dashboard"
      },
      {
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:template/${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "template"
      },
      {
        "arn": "arn:${Partition}:quicksight::${Account}:assignment/${ResourceId}",
        "condition_keys": [],
        "resource": "assignment"
      }
    ],
    "service_name": "Amazon QuickSight"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Specifies a tag key and value pair that must be used when creating or tagging a resource share. If users don't pass these specific tags, or if they don't specify tags at all, the request fails.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Indicates that the action can only be performed on resources that have the specified tag key and value pair.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Specifies the tag keys that can be used when creating or tagging a resource share",
        "type": "String"
      },
      {
        "condition": "ram:AllowsExternalPrincipals",
        "description": "Indicates that the action can only be performed on resource shares that allow or deny sharing with external principals. For example, specify true if the action can only be performed on resource shares that allow sharing with external principals. External principals are AWS accounts that are outside of its AWS organization",
        "type": "Bool"
      },
      {
        "condition": "ram:PermissionArn",
        "description": "Indicates that the action can only be performed on a resource using the specified Permission ARN.",
        "type": "Arn"
      },
      {
        "condition": "ram:Principal",
        "description": "Principals with the specified format can be associated to or disassociated from a resource share",
        "type": "String"
      },
      {
        "condition": "ram:RequestedAllowsExternalPrincipals",
        "description": "The request must have the specified value for 'allowExternalPrincipals'. External principals are AWS accounts that are outside of its AWS Organization",
        "type": "Bool"
      },
      {
        "condition": "ram:RequestedResourceType",
        "description": "Indicates that the action can only be performed on the specified resource type",
        "type": "String"
      },
      {
        "condition": "ram:ResourceArn",
        "description": "Indicates that the action can only be performed on a resource with the specified ARN.",
        "type": "Arn"
      },
      {
        "condition": "ram:ResourceShareName",
        "description": "Indicates that the action can only be performed on a resource share with the specified name.",
        "type": "String"
      },
      {
        "condition": "ram:ShareOwnerAccountId",
        "description": "Indicates that the action can only be performed on resource shares owned by a specific account. For example, you can use this condition key to specify which resource share invitations can be accepted or rejected based on the resource share owner\u2019s account ID.",
        "type": "String"
      }
    ],
    "prefix": "ram",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Accept the specified resource share invitation",
        "privilege": "AcceptResourceShareInvitation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resource-share-invitation*"
          },
          {
            "condition_keys": [
              "ram:ShareOwnerAccountId"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates resource(s) and/or principal(s) to a resource share",
        "privilege": "AssociateResourceShare",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resource-share*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "ram:ResourceShareName",
              "ram:AllowsExternalPrincipals",
              "ram:Principal",
              "ram:RequestedResourceType",
              "ram:ResourceArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associate a Permission with a Resource Share",
        "privilege": "AssociateResourceSharePermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "permission*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resource-share*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "ram:AllowsExternalPrincipals",
              "ram:ResourceShareName",
              "ram:PermissionArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create resource share with provided resource(s) and/or principal(s)",
        "privilege": "CreateResourceShare",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "ram:RequestedResourceType",
              "ram:ResourceArn",
              "ram:RequestedAllowsExternalPrincipals",
              "ram:Principal"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete resource share",
        "privilege": "DeleteResourceShare",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resource-share*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "ram:ResourceShareName",
              "ram:AllowsExternalPrincipals"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates resource(s) and/or principal(s) from a resource share",
        "privilege": "DisassociateResourceShare",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resource-share*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "ram:ResourceShareName",
              "ram:AllowsExternalPrincipals",
              "ram:Principal",
              "ram:RequestedResourceType",
              "ram:ResourceArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociate a Permission from a Resource Share",
        "privilege": "DisassociateResourceSharePermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "permission*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resource-share*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "ram:AllowsExternalPrincipals",
              "ram:ResourceShareName",
              "ram:PermissionArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to access customer's organization and create a SLR in the customer's account",
        "privilege": "EnableSharingWithAwsOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the contents of an AWS RAM permission",
        "privilege": "GetPermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "permission*"
          },
          {
            "condition_keys": [
              "ram:PermissionArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the policies for the specified resources that you own and have shared",
        "privilege": "GetResourcePolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get a set of resource share associations from a provided list or with a specified status of the specified type",
        "privilege": "GetResourceShareAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get resource share invitations by the specified invitation arn or those for the resource share",
        "privilege": "GetResourceShareInvitations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get a set of resource shares from a provided list or with a specified status",
        "privilege": "GetResourceShares",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the resources in a resource share that is shared with you but that the invitation is still pending for",
        "privilege": "ListPendingInvitationResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resource-share-invitation*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the AWS RAM permissions",
        "privilege": "ListPermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the principals that you have shared resources with or that have shared resources with you",
        "privilege": "ListPrincipals",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List the Permissions associated with a Resource Share",
        "privilege": "ListResourceSharePermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resource-share*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "ram:ResourceShareName",
              "ram:AllowsExternalPrincipals"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the resources that you added to a resource shares or the resources that are shared with you",
        "privilege": "ListResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Reject the specified resource share invitation",
        "privilege": "RejectResourceShareInvitation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resource-share-invitation*"
          },
          {
            "condition_keys": [
              "ram:ShareOwnerAccountId"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Tag the specified resources share",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resource-share*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Untag the specified resource share",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resource-share*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update attributes of the resource share",
        "privilege": "UpdateResourceShare",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resource-share*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "ram:ResourceShareName",
              "ram:AllowsExternalPrincipals",
              "ram:RequestedAllowsExternalPrincipals"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:ram:${Region}:${Account}:resource-share/${ResourcePath}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "ram:AllowsExternalPrincipals",
          "ram:ResourceShareName"
        ],
        "resource": "resource-share"
      },
      {
        "arn": "arn:${Partition}:ram:${Region}:${Account}:resource-share-invitation/${ResourcePath}",
        "condition_keys": [],
        "resource": "resource-share-invitation"
      },
      {
        "arn": "arn:${Partition}:ram::${Account}:permission/${ResourcePath}",
        "condition_keys": [
          "ram:PermissionArn"
        ],
        "resource": "permission"
      }
    ],
    "service_name": "AWS Resource Access Manager"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      },
      {
        "condition": "rds:DatabaseClass",
        "description": "A type of DB instance class.",
        "type": "String"
      },
      {
        "condition": "rds:DatabaseEngine",
        "description": "A database engine. For possible values refer to engine parameter in https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html",
        "type": "String"
      },
      {
        "condition": "rds:DatabaseName",
        "description": "The user-defined name of the database on the DB instance.",
        "type": "String"
      },
      {
        "condition": "rds:EndpointType",
        "description": "The type of the endpoint. One of: READER, WRITER, CUSTOM.",
        "type": "String"
      },
      {
        "condition": "rds:MultiAz",
        "description": "A value that specifies whether the DB instance runs in multiple Availability Zones. To indicate that the DB instance is using Multi-AZ, specify true.",
        "type": "Boolean"
      },
      {
        "condition": "rds:Piops",
        "description": "A value that contains the number of Provisioned IOPS (PIOPS) that the instance supports. To indicate a DB instance that does not have PIOPS enabled, specify 0.",
        "type": "Numeric"
      },
      {
        "condition": "rds:StorageEncrypted",
        "description": "A value that specifies whether the DB instance storage should be encrypted. To enforce storage encryption, specify true.",
        "type": "Boolean"
      },
      {
        "condition": "rds:StorageSize",
        "description": "The storage volume size (in GB).",
        "type": "Numeric"
      },
      {
        "condition": "rds:Vpc",
        "description": "A value that specifies whether the DB instance runs in an Amazon Virtual Private Cloud (Amazon VPC). To indicate that the DB instance runs in an Amazon VPC, specify true.",
        "type": "Boolean"
      },
      {
        "condition": "rds:cluster-pg-tag/${TagKey}",
        "description": "A tag attached to a DB cluster parameter group.",
        "type": "String"
      },
      {
        "condition": "rds:cluster-snapshot-tag/${TagKey}",
        "description": "A tag attached to a DB cluster snapshot.",
        "type": "String"
      },
      {
        "condition": "rds:cluster-tag/${TagKey}",
        "description": "A tag attached to a DB cluster.",
        "type": "String"
      },
      {
        "condition": "rds:db-tag/${TagKey}",
        "description": "A tag attached to a DB instance.",
        "type": "String"
      },
      {
        "condition": "rds:es-tag/${TagKey}",
        "description": "A tag attached to an event subscription.",
        "type": "String"
      },
      {
        "condition": "rds:og-tag/${TagKey}",
        "description": "A tag attached to a DB option group.",
        "type": "String"
      },
      {
        "condition": "rds:pg-tag/${TagKey}",
        "description": "A tag attached to a DB parameter group.",
        "type": "String"
      },
      {
        "condition": "rds:req-tag/${TagKey}",
        "description": "Limits the set of tag keys and values that can be used to tag a resource.",
        "type": "String"
      },
      {
        "condition": "rds:ri-tag/${TagKey}",
        "description": "A tag attached to a reserved DB instance.",
        "type": "String"
      },
      {
        "condition": "rds:secgrp-tag/${TagKey}",
        "description": "A tag attached to a DB security group.",
        "type": "String"
      },
      {
        "condition": "rds:snapshot-tag/${TagKey}",
        "description": "A tag attached to a DB snapshot.",
        "type": "String"
      },
      {
        "condition": "rds:subgrp-tag/${TagKey}",
        "description": "A tag attached to a DB subnet group.",
        "type": "String"
      }
    ],
    "prefix": "rds",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Associates an Identity and Access Management (IAM) role from an Aurora DB cluster.",
        "privilege": "AddRoleToDBCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates an AWS Identity and Access Management (IAM) role with a DB instance.",
        "privilege": "AddRoleToDBInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "db*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds a source identifier to an existing RDS event notification subscription.",
        "privilege": "AddSourceIdentifierToSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "es*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds metadata tags to an Amazon RDS resource.",
        "privilege": "AddTagsToResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "es"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pg"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ri"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "secgrp"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subgrp"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Applies a pending maintenance action to a resource.",
        "privilege": "ApplyPendingMaintenanceAction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Enables ingress to a DBSecurityGroup using one of two forms of authorization.",
        "privilege": "AuthorizeDBSecurityGroupIngress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "secgrp*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Backtracks a DB cluster to a specific time, without creating a new DB cluster.",
        "privilege": "BacktrackDBCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancels an export task in progress.",
        "privilege": "CancelExportTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Copies the specified DB cluster parameter group.",
        "privilege": "CopyDBClusterParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-pg*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a snapshot of a DB cluster.",
        "privilege": "CopyDBClusterSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Copies the specified DB parameter group.",
        "privilege": "CopyDBParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pg*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Copies the specified DB snapshot.",
        "privilege": "CopyDBSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Copies the specified option group.",
        "privilege": "CopyOptionGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a new Amazon Aurora DB cluster.",
        "privilege": "CreateDBCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-pg*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subgrp*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}",
              "rds:DatabaseEngine",
              "rds:DatabaseName",
              "rds:StorageEncrypted"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new custom endpoint and associates it with an Amazon Aurora DB cluster.",
        "privilege": "CreateDBClusterEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-endpoint*"
          },
          {
            "condition_keys": [
              "rds:EndpointType",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Create a new DB cluster parameter group.",
        "privilege": "CreateDBClusterParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-pg*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a snapshot of a DB cluster.",
        "privilege": "CreateDBClusterSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-snapshot*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a new DB instance.",
        "privilege": "CreateDBInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "db*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pg*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "secgrp*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subgrp*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a DB instance that acts as a Read Replica of a source DB instance.",
        "privilege": "CreateDBInstanceReadReplica",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "db*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subgrp*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a new DB parameter group.",
        "privilege": "CreateDBParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pg*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a database proxy",
        "privilege": "CreateDBProxy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a new DB security group. DB security groups control access to a DB instance.",
        "privilege": "CreateDBSecurityGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "secgrp*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a DBSnapshot.",
        "privilege": "CreateDBSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a new DB subnet group.",
        "privilege": "CreateDBSubnetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subgrp*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates an RDS event notification subscription.",
        "privilege": "CreateEventSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "es*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an Aurora global database spread across multiple regions.",
        "privilege": "CreateGlobalCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-cluster*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a new option group.",
        "privilege": "CreateOptionGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteDBCluster action deletes a previously provisioned DB cluster.",
        "privilege": "DeleteDBCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a custom endpoint and removes it from an Amazon Aurora DB cluster.",
        "privilege": "DeleteDBClusterEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specified DB cluster parameter group.",
        "privilege": "DeleteDBClusterParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-pg*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a DB cluster snapshot.",
        "privilege": "DeleteDBClusterSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteDBInstance action deletes a previously provisioned DB instance.",
        "privilege": "DeleteDBInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes automated backups based on the source instance's DbiResourceId value or the restorable instance's resource ID.",
        "privilege": "DeleteDBInstanceAutomatedBackup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specified DBParameterGroup.",
        "privilege": "DeleteDBParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pg*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a database proxy",
        "privilege": "DeleteDBProxy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "proxy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a DB security group.",
        "privilege": "DeleteDBSecurityGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "secgrp*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a DBSnapshot.",
        "privilege": "DeleteDBSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a DB subnet group.",
        "privilege": "DeleteDBSubnetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subgrp*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an RDS event notification subscription.",
        "privilege": "DeleteEventSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "es*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a global database cluster.",
        "privilege": "DeleteGlobalCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing option group.",
        "privilege": "DeleteOptionGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove targets from a database proxy target group",
        "privilege": "DeregisterDBProxyTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "proxy*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "target-group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all of the attributes for a customer account.",
        "privilege": "DescribeAccountAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the set of CA certificates provided by Amazon RDS for this AWS account.",
        "privilege": "DescribeCertificates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about backtracks for a DB cluster.",
        "privilege": "DescribeDBClusterBacktracks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about endpoints for an Amazon Aurora DB cluster.",
        "privilege": "DescribeDBClusterEndpoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of DBClusterParameterGroup descriptions.",
        "privilege": "DescribeDBClusterParameterGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-pg*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the detailed parameter list for a particular DB cluster parameter group.",
        "privilege": "DescribeDBClusterParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-pg*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.",
        "privilege": "DescribeDBClusterSnapshotAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-snapshot*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about DB cluster snapshots.",
        "privilege": "DescribeDBClusterSnapshots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about provisioned Aurora DB clusters.",
        "privilege": "DescribeDBClusters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of the available DB engines.",
        "privilege": "DescribeDBEngineVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pg*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of automated backups for both current and deleted instances.",
        "privilege": "DescribeDBInstanceAutomatedBackups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about provisioned RDS instances.",
        "privilege": "DescribeDBInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of DB log files for the DB instance.",
        "privilege": "DescribeDBLogFiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of DBParameterGroup descriptions.",
        "privilege": "DescribeDBParameterGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pg*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the detailed parameter list for a particular DB parameter group.",
        "privilege": "DescribeDBParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pg*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view proxies",
        "privilege": "DescribeDBProxies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "proxy*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view database proxy target group details",
        "privilege": "DescribeDBProxyTargetGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "proxy*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view database proxy target details",
        "privilege": "DescribeDBProxyTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "proxy*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "target-group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of DBSecurityGroup descriptions.",
        "privilege": "DescribeDBSecurityGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "secgrp*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of DB snapshot attribute names and values for a manual DB snapshot.",
        "privilege": "DescribeDBSnapshotAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about DB snapshots.",
        "privilege": "DescribeDBSnapshots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of DBSubnetGroup descriptions.",
        "privilege": "DescribeDBSubnetGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subgrp*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the default engine and system parameter information for the cluster database engine.",
        "privilege": "DescribeEngineDefaultClusterParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the default engine and system parameter information for the specified database engine.",
        "privilege": "DescribeEngineDefaultParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Displays a list of categories for all event source types, or, if specified, for a specified source type.",
        "privilege": "DescribeEventCategories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the subscription descriptions for a customer account.",
        "privilege": "DescribeEventSubscriptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "es*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter groups for the past 14 days.",
        "privilege": "DescribeEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "es*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about the export tasks.",
        "privilege": "DescribeExportTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about Aurora global database clusters.",
        "privilege": "DescribeGlobalClusters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes all available options.",
        "privilege": "DescribeOptionGroupOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes the available option groups.",
        "privilege": "DescribeOptionGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of orderable DB instance options for the specified engine.",
        "privilege": "DescribeOrderableDBInstanceOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.",
        "privilege": "DescribePendingMaintenanceActions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about reserved DB instances for this account, or about a specified reserved DB instance.",
        "privilege": "DescribeReservedDBInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ri*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists available reserved DB instance offerings.",
        "privilege": "DescribeReservedDBInstancesOfferings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of the source AWS Regions where the current AWS Region can create a Read Replica or copy a DB snapshot from.",
        "privilege": "DescribeSourceRegions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists available modifications you can make to your DB instance",
        "privilege": "DescribeValidDBInstanceModifications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Downloads the contents of the specified database log file.",
        "privilege": "DownloadCompleteDBLogFile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Downloads all or a portion of the specified log file, up to 1 MB in size.",
        "privilege": "DownloadDBLogFilePortion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Forces a failover for a DB cluster.",
        "privilege": "FailoverDBCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists all tags on an Amazon RDS resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "es"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pg"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ri"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "secgrp"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subgrp"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modify current cluster capacity for an Amazon Aurora Severless DB cluster.",
        "privilege": "ModifyCurrentDBClusterCapacity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modify a setting for an Amazon Aurora DB cluster.",
        "privilege": "ModifyDBCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-pg*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the properties of an endpoint in an Amazon Aurora DB cluster.",
        "privilege": "ModifyDBClusterEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the parameters of a DB cluster parameter group.",
        "privilege": "ModifyDBClusterParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-pg*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot.",
        "privilege": "ModifyDBClusterSnapshotAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modify settings for a DB instance.",
        "privilege": "ModifyDBInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "db*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pg*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "secgrp*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the parameters of a DB parameter group.",
        "privilege": "ModifyDBParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pg*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify database proxy",
        "privilege": "ModifyDBProxy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "proxy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify target group for a database proxy",
        "privilege": "ModifyDBProxyTargetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "target-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a manual DB snapshot, which can be encrypted or not encrypted, with a new engine version.",
        "privilege": "ModifyDBSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds an attribute and values to, or removes an attribute and values from, a manual DB snapshot.",
        "privilege": "ModifyDBSnapshotAttribute",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies an existing DB subnet group.",
        "privilege": "ModifyDBSubnetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subgrp*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies an existing RDS event notification subscription.",
        "privilege": "ModifyEventSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "es*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modify a setting for an Amazon Aurora global cluster.",
        "privilege": "ModifyGlobalCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies an existing option group.",
        "privilege": "ModifyOptionGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "og*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Promotes a Read Replica DB instance to a standalone DB instance.",
        "privilege": "PromoteReadReplica",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Promotes a Read Replica DB cluster to a standalone DB cluster.",
        "privilege": "PromoteReadReplicaDBCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Purchases a reserved DB instance offering.",
        "privilege": "PurchaseReservedDBInstancesOffering",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ri*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Rebooting a DB instance restarts the database engine service.",
        "privilege": "RebootDBInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add targets to a database proxy target group",
        "privilege": "RegisterDBProxyTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "target-group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Detaches an Aurora secondary cluster from an Aurora global database cluster.",
        "privilege": "RemoveFromGlobalCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "global-cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates an AWS Identity and Access Management (IAM) role from an Amazon Aurora DB cluster.",
        "privilege": "RemoveRoleFromDBCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates an AWS Identity and Access Management (IAM) role from a DB instance.",
        "privilege": "RemoveRoleFromDBInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "db*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes a source identifier from an existing RDS event notification subscription.",
        "privilege": "RemoveSourceIdentifierFromSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "es*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes metadata tags from an Amazon RDS resource.",
        "privilege": "RemoveTagsFromResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "es"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pg"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ri"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "secgrp"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subgrp"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the parameters of a DB cluster parameter group to the default value.",
        "privilege": "ResetDBClusterParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-pg*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the parameters of a DB parameter group to the engine/system default value.",
        "privilege": "ResetDBParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "pg*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an Amazon Aurora DB cluster from data stored in an Amazon S3 bucket.",
        "privilege": "RestoreDBClusterFromS3",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}",
              "rds:DatabaseEngine",
              "rds:DatabaseName",
              "rds:StorageEncrypted"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new DB cluster from a DB cluster snapshot.",
        "privilege": "RestoreDBClusterFromSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster-snapshot*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Restores a DB cluster to an arbitrary point in time.",
        "privilege": "RestoreDBClusterToPointInTime",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subgrp*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new DB instance from a DB snapshot.",
        "privilege": "RestoreDBInstanceFromDBSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "db*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subgrp*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new DB instance from an Amazon S3 bucket.",
        "privilege": "RestoreDBInstanceFromS3",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "db*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Restores a DB instance to an arbitrary point in time.",
        "privilege": "RestoreDBInstanceToPointInTime",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "db*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "og*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subgrp*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "rds:req-tag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC Security Groups.",
        "privilege": "RevokeDBSecurityGroupIngress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "secgrp*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to start Activity Stream.",
        "privilege": "StartActivityStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts the DB cluster.",
        "privilege": "StartDBCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts the DB instance.",
        "privilege": "StartDBInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a new Export task for a DB snapshot.",
        "privilege": "StartExportTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to stop Activity Stream.",
        "privilege": "StopActivityStream",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops the DB cluster.",
        "privilege": "StopDBCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops the DB instance.",
        "privilege": "StopDBInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "rds:cluster-tag/${TagKey}"
        ],
        "resource": "cluster"
      },
      {
        "arn": "arn:${Partition}:rds:${Region}:${Account}:cluster-endpoint:${DbClusterEndpoint}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "cluster-endpoint"
      },
      {
        "arn": "arn:${Partition}:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "rds:cluster-pg-tag/${TagKey}"
        ],
        "resource": "cluster-pg"
      },
      {
        "arn": "arn:${Partition}:rds:${Region}:${Account}:cluster-snapshot:${ClusterSnapshotName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "rds:cluster-snapshot-tag/${TagKey}"
        ],
        "resource": "cluster-snapshot"
      },
      {
        "arn": "arn:${Partition}:rds:${Region}:${Account}:db:${DbInstanceName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageEncrypted",
          "rds:StorageSize",
          "rds:Vpc",
          "rds:db-tag/${TagKey}"
        ],
        "resource": "db"
      },
      {
        "arn": "arn:${Partition}:rds:${Region}:${Account}:es:${SubscriptionName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "rds:es-tag/${TagKey}"
        ],
        "resource": "es"
      },
      {
        "arn": "arn:${Partition}:rds:${Account}:global-cluster:${GlobalCluster}",
        "condition_keys": [],
        "resource": "global-cluster"
      },
      {
        "arn": "arn:${Partition}:rds:${Region}:${Account}:og:${OptionGroupName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "rds:og-tag/${TagKey}"
        ],
        "resource": "og"
      },
      {
        "arn": "arn:${Partition}:rds:${Region}:${Account}:pg:${ParameterGroupName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "rds:pg-tag/${TagKey}"
        ],
        "resource": "pg"
      },
      {
        "arn": "arn:${Partition}:rds:${Region}:${Account}:db-proxy:${DbProxyId}",
        "condition_keys": [],
        "resource": "proxy"
      },
      {
        "arn": "arn:${Partition}:rds:${Region}:${Account}:ri:${ReservedDbInstanceName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "rds:ri-tag/${TagKey}"
        ],
        "resource": "ri"
      },
      {
        "arn": "arn:${Partition}:rds:${Region}:${Account}:secgrp:${SecurityGroupName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "rds:secgrp-tag/${TagKey}"
        ],
        "resource": "secgrp"
      },
      {
        "arn": "arn:${Partition}:rds:${Region}:${Account}:snapshot:${SnapshotName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "rds:snapshot-tag/${TagKey}"
        ],
        "resource": "snapshot"
      },
      {
        "arn": "arn:${Partition}:rds:${Region}:${Account}:subgrp:${SubnetGroupName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "rds:subgrp-tag/${TagKey}"
        ],
        "resource": "subgrp"
      },
      {
        "arn": "arn:${Partition}:rds:${Region}:${Account}:target:${TargetId}",
        "condition_keys": [],
        "resource": "target"
      },
      {
        "arn": "arn:${Partition}:rds:${Region}:${Account}:target-group:${TargetGroupId}",
        "condition_keys": [],
        "resource": "target-group"
      }
    ],
    "service_name": "Amazon RDS"
  },
  {
    "conditions": [],
    "prefix": "rds-data",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Runs a batch SQL statement over an array of data.",
        "privilege": "BatchExecuteStatement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a SQL transaction.",
        "privilege": "BeginTransaction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Ends a SQL transaction started with the BeginTransaction operation and commits the changes.",
        "privilege": "CommitTransaction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "rds-data:BeginTransaction"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Runs one or more SQL statements. This operation is deprecated. Use the BatchExecuteStatement or ExecuteStatement operation.",
        "privilege": "ExecuteSql",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Runs a SQL statement against a database.",
        "privilege": "ExecuteStatement",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Performs a rollback of a transaction. Rolling back a transaction cancels its changes.",
        "privilege": "RollbackTransaction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "rds-data:BeginTransaction"
            ],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon RDS Data API"
  },
  {
    "conditions": [],
    "prefix": "rds-db",
    "privileges": [
      {
        "access_level": "Permissions management",
        "description": "Allows IAM role or user to connect to RDS database",
        "privilege": "connect",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "db-user*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:rds-db:${Region}:${Account}:dbuser:${DbiResourceId}/${DbUserName}",
        "condition_keys": [],
        "resource": "db-user"
      }
    ],
    "service_name": "Amazon RDS IAM Authentication"
  },
  {
    "conditions": [
      {
        "condition": "redshift:DbName",
        "description": "Filters access by the database name",
        "type": "String"
      },
      {
        "condition": "redshift:DbUser",
        "description": "Filters access by the database user name",
        "type": "String"
      },
      {
        "condition": "redshift:DurationSeconds",
        "description": "Filters access by the number of seconds until a temporary credential set expires",
        "type": "String"
      }
    ],
    "prefix": "redshift",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to exchange a DC1 reserved node for a DC2 reserved node with no changes to the configuration",
        "privilege": "AcceptReservedNodeExchange",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to add an inbound (ingress) rule to an Amazon Redshift security group",
        "privilege": "AuthorizeClusterSecurityGroupIngress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securitygroup*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securitygroupingress-ec2securitygroup*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to the specified AWS account to restore a snapshot",
        "privilege": "AuthorizeSnapshotAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete snapshots in a batch of size upto 100",
        "privilege": "BatchDeleteClusterSnapshots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify settings for a list of snapshots",
        "privilege": "BatchModifyClusterSnapshots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to cancel a query through the Amazon Redshift console",
        "privilege": "CancelQuery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to see queries in the Amazon Redshift console",
        "privilege": "CancelQuerySession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to cancel a resize operation",
        "privilege": "CancelResize",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to copy a cluster snapshot",
        "privilege": "CopyClusterSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a cluster",
        "privilege": "CreateCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an Amazon Redshift parameter group",
        "privilege": "CreateClusterParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "parametergroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an Amazon Redshift security group",
        "privilege": "CreateClusterSecurityGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securitygroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a manual snapshot of the specified cluster",
        "privilege": "CreateClusterSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an Amazon Redshift subnet group",
        "privilege": "CreateClusterSubnetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subnetgroup*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to automatically create the specified Amazon Redshift user if it does not exist",
        "privilege": "CreateClusterUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dbuser*"
          },
          {
            "condition_keys": [
              "redshift:DbUser"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an Amazon Redshift event notification subscription",
        "privilege": "CreateEventSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "eventsubscription*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an HSM client certificate that a cluster uses to connect to an HSM",
        "privilege": "CreateHsmClientCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hsmclientcertificate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an HSM configuration that contains information required by a cluster to store and use database encryption keys in a hardware security module (HSM)",
        "privilege": "CreateHsmConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hsmconfiguration*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create saved SQL queries through the Amazon Redshift console",
        "privilege": "CreateSavedQuery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an Amazon Redshift scheduled action",
        "privilege": "CreateScheduledAction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to create a snapshot copy grant and encrypt copied snapshots in a destination AWS Region",
        "privilege": "CreateSnapshotCopyGrant",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshotcopygrant*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a snapshot schedule",
        "privilege": "CreateSnapshotSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshotschedule*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add one or more tags to a specified resource",
        "privilege": "CreateTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a previously provisioned cluster",
        "privilege": "DeleteCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an Amazon Redshift parameter group",
        "privilege": "DeleteClusterParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "parametergroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an Amazon Redshift security group",
        "privilege": "DeleteClusterSecurityGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securitygroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a manual snapshot",
        "privilege": "DeleteClusterSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a cluster subnet group",
        "privilege": "DeleteClusterSubnetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subnetgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an Amazon Redshift event notification subscription",
        "privilege": "DeleteEventSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "eventsubscription*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an HSM client certificate",
        "privilege": "DeleteHsmClientCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hsmclientcertificate*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an Amazon Redshift HSM configuration",
        "privilege": "DeleteHsmConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hsmconfiguration*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete saved SQL queries through the Amazon Redshift console",
        "privilege": "DeleteSavedQueries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an Amazon Redshift scheduled action",
        "privilege": "DeleteScheduledAction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a snapshot copy grant",
        "privilege": "DeleteSnapshotCopyGrant",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshotcopygrant*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a snapshot schedule",
        "privilege": "DeleteSnapshotSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshotschedule*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to delete a tag or tags from a resource",
        "privilege": "DeleteTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe attributes attached to the specified AWS account",
        "privilege": "DescribeAccountAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe database revisions for a cluster",
        "privilege": "DescribeClusterDbRevisions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe Amazon Redshift parameter groups, including parameter groups you created and the default parameter group",
        "privilege": "DescribeClusterParameterGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe parameters contained within an Amazon Redshift parameter group",
        "privilege": "DescribeClusterParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "parametergroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe Amazon Redshift security groups",
        "privilege": "DescribeClusterSecurityGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe one or more snapshot objects, which contain metadata about your cluster snapshots",
        "privilege": "DescribeClusterSnapshots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe one or more cluster subnet group objects, which contain metadata about your cluster subnet groups",
        "privilege": "DescribeClusterSubnetGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe available maintenance tracks",
        "privilege": "DescribeClusterTracks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe available Amazon Redshift cluster versions",
        "privilege": "DescribeClusterVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe properties of provisioned clusters",
        "privilege": "DescribeClusters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe parameter settings for a parameter group family",
        "privilege": "DescribeDefaultClusterParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe event categories for all event source types, or for a specified source type",
        "privilege": "DescribeEventCategories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe Amazon Redshift event notification subscriptions for the specified AWS account",
        "privilege": "DescribeEventSubscriptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe events related to clusters, security groups, snapshots, and parameter groups for the past 14 days",
        "privilege": "DescribeEvents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe HSM client certificates",
        "privilege": "DescribeHsmClientCertificates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe Amazon Redshift HSM configurations",
        "privilege": "DescribeHsmConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe whether information, such as queries and connection attempts, is being logged for a cluster",
        "privilege": "DescribeLoggingStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe properties of possible node configurations such as node type, number of nodes, and disk usage for the specified action type",
        "privilege": "DescribeNodeConfigurationOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe orderable cluster options",
        "privilege": "DescribeOrderableClusterOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe a query through the Amazon Redshift console",
        "privilege": "DescribeQuery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe available reserved node offerings by Amazon Redshift",
        "privilege": "DescribeReservedNodeOfferings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe the reserved nodes",
        "privilege": "DescribeReservedNodes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe the last resize operation for a cluster",
        "privilege": "DescribeResize",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe saved queries through the Amazon Redshift console",
        "privilege": "DescribeSavedQueries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe created Amazon Redshift scheduled actions",
        "privilege": "DescribeScheduledActions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe snapshot copy grants owned by the specified AWS account in the destination AWS Region",
        "privilege": "DescribeSnapshotCopyGrants",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe snapshot schedules",
        "privilege": "DescribeSnapshotSchedules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshotschedule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe account level backups storage size and provisional storage",
        "privilege": "DescribeStorage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe a table through the Amazon Redshift console",
        "privilege": "DescribeTable",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe status of one or more table restore requests made using the RestoreTableFromClusterSnapshot API action",
        "privilege": "DescribeTableRestoreStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe tags",
        "privilege": "DescribeTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable logging information, such as queries and connection attempts, for a cluster",
        "privilege": "DisableLogging",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable the automatic copy of snapshots for a cluster",
        "privilege": "DisableSnapshotCopy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable logging information, such as queries and connection attempts, for a cluster",
        "privilege": "EnableLogging",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable the automatic copy of snapshots for a cluster",
        "privilege": "EnableSnapshotCopy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to execute a query through the Amazon Redshift console",
        "privilege": "ExecuteQuery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to fetch query results through the Amazon Redshift console",
        "privilege": "FetchResults",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to get temporary credentials to access an Amazon Redshift database by the specified AWS account",
        "privilege": "GetClusterCredentials",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dbuser*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dbgroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dbname"
          },
          {
            "condition_keys": [
              "redshift:DbName",
              "redshift:DbUser",
              "redshift:DurationSeconds"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get an array of DC2 ReservedNodeOfferings that matches the payment type, term, and usage price of the given DC1 reserved node",
        "privilege": "GetReservedNodeExchangeOfferings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to join the specified Amazon Redshift group",
        "privilege": "JoinGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dbgroup*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list databases through the Amazon Redshift console",
        "privilege": "ListDatabases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list saved queries through the Amazon Redshift console",
        "privilege": "ListSavedQueries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list schemas through the Amazon Redshift console",
        "privilege": "ListSchemas",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list tables through the Amazon Redshift console",
        "privilege": "ListTables",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the settings of a cluster",
        "privilege": "ModifyCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the database revision of a cluster",
        "privilege": "ModifyClusterDbRevision",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to modify the list of AWS Identity and Access Management (IAM) roles that can be used by a cluster to access other AWS services",
        "privilege": "ModifyClusterIamRoles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the maintenance settings of a cluster",
        "privilege": "ModifyClusterMaintenance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the parameters of a parameter group",
        "privilege": "ModifyClusterParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "parametergroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the settings of a snapshot",
        "privilege": "ModifyClusterSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify a snapshot schedule for a cluster",
        "privilege": "ModifyClusterSnapshotSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify a cluster subnet group to include the specified list of VPC subnets",
        "privilege": "ModifyClusterSubnetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "subnetgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an existing Amazon Redshift event notification subscription",
        "privilege": "ModifyEventSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "eventsubscription*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an existing saved query through the Amazon Redshift console",
        "privilege": "ModifySavedQuery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify an existing Amazon Redshift scheduled action",
        "privilege": "ModifyScheduledAction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify the number of days to retain snapshots in the destination AWS Region after they are copied from the source AWS Region",
        "privilege": "ModifySnapshotCopyRetentionPeriod",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to modify a snapshot schedule",
        "privilege": "ModifySnapshotSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshotschedule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to pause a cluster",
        "privilege": "PauseCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to purchase a reserved node",
        "privilege": "PurchaseReservedNodeOffering",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reboot a cluster",
        "privilege": "RebootCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to set one or more parameters of a parameter group to their default values and set the source values of the parameters to \"engine-default\"",
        "privilege": "ResetClusterParameterGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "parametergroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change the size of a cluster",
        "privilege": "ResizeCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a cluster from a snapshot",
        "privilege": "RestoreFromClusterSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a table from a table in an Amazon Redshift cluster snapshot",
        "privilege": "RestoreTableFromClusterSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to resume a cluster",
        "privilege": "ResumeCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to revoke an ingress rule in an Amazon Redshift security group for a previously authorized IP range or Amazon EC2 security group",
        "privilege": "RevokeClusterSecurityGroupIngress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securitygroup*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "securitygroupingress-ec2securitygroup*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to revoke access from the specified AWS account to restore a snapshot",
        "privilege": "RevokeSnapshotAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "snapshot*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to rotate an encryption key for a cluster",
        "privilege": "RotateEncryptionKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "cluster*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view query results through the Amazon Redshift console",
        "privilege": "ViewQueriesFromConsole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to terminate running queries and loads through the Amazon Redshift console",
        "privilege": "ViewQueriesInConsole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:cluster:${ClusterName}",
        "condition_keys": [],
        "resource": "cluster"
      },
      {
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:dbgroup:${ClusterName}/${DbGroup}",
        "condition_keys": [],
        "resource": "dbgroup"
      },
      {
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:dbname:${ClusterName}/${DbName}",
        "condition_keys": [],
        "resource": "dbname"
      },
      {
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:dbuser:${ClusterName}/${DbUser}",
        "condition_keys": [],
        "resource": "dbuser"
      },
      {
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:eventsubscription:${EventSubscriptionName}",
        "condition_keys": [],
        "resource": "eventsubscription"
      },
      {
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:hsmclientcertificate:${HSMClientCertificateId}",
        "condition_keys": [],
        "resource": "hsmclientcertificate"
      },
      {
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:hsmconfiguration:${HSMConfigurationId}",
        "condition_keys": [],
        "resource": "hsmconfiguration"
      },
      {
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:parametergroup:${ParameterGroupName}",
        "condition_keys": [],
        "resource": "parametergroup"
      },
      {
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:securitygroup:${SecurityGroupName}/ec2securitygroup/${Owner}/${Ec2SecurityGroupId}",
        "condition_keys": [],
        "resource": "securitygroup"
      },
      {
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:securitygroupingress:${SecurityGroupName}/cidrip/${IpRange}",
        "condition_keys": [],
        "resource": "securitygroupingress-cidr"
      },
      {
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:securitygroupingress:${SecurityGroupName}/ec2securitygroup/${Owner}/${Ece2SecuritygroupId}",
        "condition_keys": [],
        "resource": "securitygroupingress-ec2securitygroup"
      },
      {
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:snapshot:${ClusterName}/${SnapshotName}",
        "condition_keys": [],
        "resource": "snapshot"
      },
      {
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:snapshotcopygrant:${SnapshotCopyGrantName}",
        "condition_keys": [],
        "resource": "snapshotcopygrant"
      },
      {
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:snapshotschedule:${ParameterGroupName}",
        "condition_keys": [],
        "resource": "snapshotschedule"
      },
      {
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:subnetgroup:${SubnetGroupName}",
        "condition_keys": [],
        "resource": "subnetgroup"
      }
    ],
    "service_name": "Amazon Redshift"
  },
  {
    "conditions": [],
    "prefix": "rekognition",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Compares a face in source input image with each face detected in the target input image.",
        "privilege": "CompareFaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a collection in an AWS region. You can then add faces to the collection using the IndexFaces API.",
        "privilege": "CreateCollection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "collection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new Amazon Rekognition Custom Labels project.",
        "privilege": "CreateProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new version of a model and begins training.",
        "privilege": "CreateProjectVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "projectversion*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an Amazon Rekognition stream processor that you can use to detect and recognize faces in a streaming video.",
        "privilege": "CreateStreamProcessor",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "collection*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "streamprocessor*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified collection. Note that this operation removes all faces in the collection.",
        "privilege": "DeleteCollection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "collection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes faces from a collection.",
        "privilege": "DeleteFaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "collection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a project.",
        "privilege": "DeleteProject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a model.",
        "privilege": "DeleteProjectVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "projectversion*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the stream processor identified by Name.",
        "privilege": "DeleteStreamProcessor",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "streamprocessor*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the specified collection.",
        "privilege": "DescribeCollection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "collection*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists and describes the model versions in an Amazon Rekognition Custom Labels project.",
        "privilege": "DescribeProjectVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists and gets information about your Amazon Rekognition Custom Labels projects.",
        "privilege": "DescribeProjects",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Provides information about a stream processor created by CreateStreamProcessor.",
        "privilege": "DescribeStreamProcessor",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "streamprocessor*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Detects custom labels in a supplied image by using an Amazon Rekognition Custom Labels model version.",
        "privilege": "DetectCustomLabels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "projectversion*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Detects human faces within an image (JPEG or PNG) provided as input.",
        "privilege": "DetectFaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Detects instances of real-world labels within an image (JPEG or PNG) provided as input.",
        "privilege": "DetectLabels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Detects moderation labels within input image.",
        "privilege": "DetectModerationLabels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Detects text in the input image and converts it into machine-readable text.",
        "privilege": "DetectText",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the name and additional information about a celebrity based on his or her Rekognition ID.",
        "privilege": "GetCelebrityInfo",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the celebrity recognition results for a Rekognition Video analysis started by StartCelebrityRecognition.",
        "privilege": "GetCelebrityRecognition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the content moderation analysis results for a Rekognition Video analysis started by StartContentModeration.",
        "privilege": "GetContentModeration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets face detection results for a Rekognition Video analysis started by StartFaceDetection.",
        "privilege": "GetFaceDetection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the face search results for Rekognition Video face search started by StartFaceSearch.",
        "privilege": "GetFaceSearch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the label detection results of a Rekognition Video analysis started by StartLabelDetection.",
        "privilege": "GetLabelDetection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about people detected within a video.",
        "privilege": "GetPersonTracking",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets text detection results for a Rekognition Video analysis started by StartTextDetection.",
        "privilege": "GetTextDetection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Detects faces in the input image and adds them to the specified collection.",
        "privilege": "IndexFaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "collection*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of collection IDs in your account.",
        "privilege": "ListCollections",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "collection*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns metadata for faces in the specified collection.",
        "privilege": "ListFaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "collection*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets a list of stream processors that you have created with CreateStreamProcessor.",
        "privilege": "ListStreamProcessors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "streamprocessor*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns an array of celebrities recognized in the input image.",
        "privilege": "RecognizeCelebrities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "For a given input face ID, searches the specified collection for matching faces.",
        "privilege": "SearchFaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "collection*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "For a given input image, first detects the largest face in the image, and then searches the specified collection for matching faces.",
        "privilege": "SearchFacesByImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "collection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts asynchronous recognition of celebrities in a video.",
        "privilege": "StartCelebrityRecognition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts asynchronous detection of explicit or suggestive adult content in a video.",
        "privilege": "StartContentModeration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts asynchronous detection of faces in a video.",
        "privilege": "StartFaceDetection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts the asynchronous search for faces in a collection that match the faces of persons detected in a video.",
        "privilege": "StartFaceSearch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "collection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts asynchronous detection of labels in a video.",
        "privilege": "StartLabelDetection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts the asynchronous tracking of persons in a video.",
        "privilege": "StartPersonTracking",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts the deployment of a model version.",
        "privilege": "StartProjectVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "projectversion*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts processing a stream processor.",
        "privilege": "StartStreamProcessor",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "streamprocessor*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts asynchronous detection of text in a video.",
        "privilege": "StartTextDetection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a deployed model version.",
        "privilege": "StopProjectVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "projectversion*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a running stream processor that was created by CreateStreamProcessor.",
        "privilege": "StopStreamProcessor",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "streamprocessor*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:rekognition:${Region}:${Account}:collection/${CollectionId}",
        "condition_keys": [],
        "resource": "collection"
      },
      {
        "arn": "arn:${Partition}:rekognition:${Region}:${Account}:streamprocessor/${StreamprocessorId}",
        "condition_keys": [],
        "resource": "streamprocessor"
      },
      {
        "arn": "arn:${Partition}:rekognition:${Region}:${Account}:project/${ProjectName}/${CreationTimestamp}",
        "condition_keys": [],
        "resource": "project"
      },
      {
        "arn": "arn:${Partition}:rekognition:${Region}:${Account}:project/${ProjectName}/version/${VersionName}/${CreationTimestamp}",
        "condition_keys": [],
        "resource": "projectversion"
      }
    ],
    "service_name": "Amazon Rekognition"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "resource-groups",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "Creates a group with a specified name, description, and resource query.",
        "privilege": "CreateGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specified resource group",
        "privilege": "DeleteGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information of a specified resource group",
        "privilege": "GetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the query associated with a specified resource group",
        "privilege": "GetGroupQuery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the tags associated with a specified resource group",
        "privilege": "GetTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the resources that are member of a specified resource group",
        "privilege": "ListGroupResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all resource groups",
        "privilege": "ListGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of AWS resource identifiers matching the given query",
        "privilege": "SearchResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Tags a specified resource group",
        "privilege": "Tag",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes tags associated with a specified resource group",
        "privilege": "Untag",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a specified resource group",
        "privilege": "UpdateGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the query associated with a specified resource group",
        "privilege": "UpdateGroupQuery",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:resource-groups:${Region}:${Account}:group/${GroupName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "group"
      }
    ],
    "service_name": "AWS Resource Groups"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "",
        "type": "String"
      }
    ],
    "prefix": "robomaker",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Describe multiple simulation jobs",
        "privilege": "BatchDescribeSimulationJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancel a deployment job",
        "privilege": "CancelDeploymentJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentJob*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancel a simulation job",
        "privilege": "CancelSimulationJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationJob*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancel a simulation job batch",
        "privilege": "CancelSimulationJobBatch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationJobBatch*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a deployment job",
        "privilege": "CreateDeploymentJob",
        "resource_types": [
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [
              "iam:CreateServiceLinkedRole"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a deployment fleet that represents a logical group of robots running the same robot application",
        "privilege": "CreateFleet",
        "resource_types": [
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a robot that can be registered to a fleet",
        "privilege": "CreateRobot",
        "resource_types": [
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [
              "iam:CreateServiceLinkedRole"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a robot application",
        "privilege": "CreateRobotApplication",
        "resource_types": [
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a snapshot of a robot application",
        "privilege": "CreateRobotApplicationVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:GetObject"
            ],
            "resource_type": "robotApplication*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a simulation application",
        "privilege": "CreateSimulationApplication",
        "resource_types": [
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a snapshot of a simulation application",
        "privilege": "CreateSimulationApplicationVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:GetObject"
            ],
            "resource_type": "simulationApplication*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a simulation job",
        "privilege": "CreateSimulationJob",
        "resource_types": [
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [
              "iam:CreateServiceLinkedRole"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a deployment fleet",
        "privilege": "DeleteFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentFleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a robot",
        "privilege": "DeleteRobot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "robot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a robot application",
        "privilege": "DeleteRobotApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "robotApplication*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a simulation application",
        "privilege": "DeleteSimulationApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationApplication*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deregister a robot from a fleet",
        "privilege": "DeregisterRobot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentFleet*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "robot*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe a deployment job",
        "privilege": "DescribeDeploymentJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentJob*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe a deployment fleet",
        "privilege": "DescribeFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentFleet*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe a robot",
        "privilege": "DescribeRobot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "robot*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe a robot application",
        "privilege": "DescribeRobotApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "robotApplication*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe a simulation application",
        "privilege": "DescribeSimulationApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationApplication*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe a simulation job",
        "privilege": "DescribeSimulationJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationJob*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe a simulation job batch",
        "privilege": "DescribeSimulationJobBatch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationJobBatch*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List deployment jobs",
        "privilege": "ListDeploymentJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List fleets",
        "privilege": "ListFleets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List robot applications",
        "privilege": "ListRobotApplications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List robots",
        "privilege": "ListRobots",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List simulation applications",
        "privilege": "ListSimulationApplications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List simulation job batches",
        "privilege": "ListSimulationJobBatches",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List simulation jobs",
        "privilege": "ListSimulationJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List tags for a RoboMaker resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentFleet"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentJob"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "robot"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "robotApplication"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationApplication"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationJob"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationJobBatch"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Register a robot to a fleet",
        "privilege": "RegisterRobot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentFleet*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "robot*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Restart a running simulation job",
        "privilege": "RestartSimulationJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationJob*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a simulation job batch",
        "privilege": "StartSimulationJobBatch",
        "resource_types": [
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [
              "iam:CreateServiceLinkedRole"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Ensures the most recently deployed robot application is deployed to all robots in the fleet",
        "privilege": "SyncDeploymentJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:CreateServiceLinkedRole"
            ],
            "resource_type": "deploymentFleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Add tags to a RoboMaker resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentFleet"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentJob"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "robot"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "robotApplication"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationApplication"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationJob"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationJobBatch"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Remove tags from a RoboMaker resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentFleet"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deploymentJob"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "robot"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "robotApplication"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationApplication"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationJob"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationJobBatch"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update a robot application",
        "privilege": "UpdateRobotApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "robotApplication*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update a simulation application",
        "privilege": "UpdateSimulationApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "simulationApplication*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:robot-application/${ApplicationName}/${CreatedOnEpoch}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "robotApplication"
      },
      {
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:simulation-application/${ApplicationName}/${CreatedOnEpoch}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "simulationApplication"
      },
      {
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:simulation-job/${SimulationJobId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "simulationJob"
      },
      {
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:simulation-job-batch/${SimulationJobBatchId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "simulationJobBatch"
      },
      {
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:deployment-job/${DeploymentJobId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "deploymentJob"
      },
      {
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:robot/${RobotName}/${CreatedOnEpoch}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "robot"
      },
      {
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:deployment-fleet/${FleetName}/${CreatedOnEpoch}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "deploymentFleet"
      }
    ],
    "service_name": "AWS RoboMaker"
  },
  {
    "conditions": [],
    "prefix": "route53",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to associate an additional Amazon VPC with a private hosted zone",
        "privilege": "AssociateVPCWithHostedZone",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hostedzone*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create, update, or delete a record, which contains authoritative DNS information for a specified domain or subdomain name",
        "privilege": "ChangeResourceRecordSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hostedzone*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add, edit, or delete tags for a health check or a hosted zone",
        "privilege": "ChangeTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "healthcheck*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hostedzone*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new health check, which monitors the health and performance of your web applications, web servers, and other resources",
        "privilege": "CreateHealthCheck",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a public hosted zone, which you use to specify how the Domain Name System (DNS) routes traffic on the Internet for a domain, such as example.com, and its subdomains",
        "privilege": "CreateHostedZone",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a configuration for DNS query logging",
        "privilege": "CreateQueryLoggingConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hostedzone*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a delegation set (a group of four name servers) that can be reused by multiple hosted zones",
        "privilege": "CreateReusableDelegationSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a traffic policy, which you use to create multiple DNS records for one domain name (such as example.com) or one subdomain name (such as www.example.com)",
        "privilege": "CreateTrafficPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create records in a specified hosted zone based on the settings in a specified traffic policy version",
        "privilege": "CreateTrafficPolicyInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hostedzone*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trafficpolicy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new version of an existing traffic policy",
        "privilege": "CreateTrafficPolicyVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trafficpolicy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to authorize the AWS account that created a specified VPC to submit an AssociateVPCWithHostedZone request, which associates the VPC with a specified hosted zone that was created by a different account",
        "privilege": "CreateVPCAssociationAuthorization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hostedzone*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a health check",
        "privilege": "DeleteHealthCheck",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "healthcheck*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a hosted zone",
        "privilege": "DeleteHostedZone",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hostedzone*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a configuration for DNS query logging",
        "privilege": "DeleteQueryLoggingConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queryloggingconfig*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a reusable delegation set",
        "privilege": "DeleteReusableDelegationSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "delegationset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a traffic policy",
        "privilege": "DeleteTrafficPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trafficpolicy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a traffic policy instance and all the records that Route 53 created when you created the instance",
        "privilege": "DeleteTrafficPolicyInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trafficpolicyinstance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove authorization for associating an Amazon Virtual Private Cloud with a Route 53 private hosted zone",
        "privilege": "DeleteVPCAssociationAuthorization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hostedzone*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate an Amazon Virtual Private Cloud from a Route 53 private hosted zone",
        "privilege": "DisassociateVPCFromHostedZone",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get the specified limit for the current account, for example, the maximum number of health checks that you can create using the account",
        "privilege": "GetAccountLimit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get the current status of a request to create, update, or delete one or more records",
        "privilege": "GetChange",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "change*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get a list of the IP ranges that are used by Route 53 health checkers to check the health of your resources",
        "privilege": "GetCheckerIpRanges",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get information about whether a specified geographic location is supported for Route 53 geolocation records",
        "privilege": "GetGeoLocation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about a specified health check",
        "privilege": "GetHealthCheck",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "healthcheck*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get the number of health checks that are associated with the current AWS account",
        "privilege": "GetHealthCheckCount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get the reason that a specified health check failed most recently",
        "privilege": "GetHealthCheckLastFailureReason",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "healthcheck*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get the status of a specified health check",
        "privilege": "GetHealthCheckStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "healthcheck*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get information about a specified hosted zone including the four name servers that Route 53 assigned to the hosted zone",
        "privilege": "GetHostedZone",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hostedzone*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get the number of hosted zones that are associated with the current AWS account",
        "privilege": "GetHostedZoneCount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get the specified limit for a specified hosted zone",
        "privilege": "GetHostedZoneLimit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hostedzone*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about a specified configuration for DNS query logging",
        "privilege": "GetQueryLoggingConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queryloggingconfig*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get information about a specified reusable delegation set, including the four name servers that are assigned to the delegation set",
        "privilege": "GetReusableDelegationSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "delegationset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get the maximum number of hosted zones that you can associate with the specified reusable delegation set",
        "privilege": "GetReusableDelegationSetLimit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "delegationset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about a specified traffic policy version",
        "privilege": "GetTrafficPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trafficpolicy*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about a specified traffic policy instance",
        "privilege": "GetTrafficPolicyInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trafficpolicyinstance*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get the number of traffic policy instances that are associated with the current AWS account",
        "privilege": "GetTrafficPolicyInstanceCount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get a list of geographic locations that Route 53 supports for geolocation",
        "privilege": "ListGeoLocations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get a list of the health checks that are associated with the current AWS account",
        "privilege": "ListHealthChecks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get a list of the public and private hosted zones that are associated with the current AWS account",
        "privilege": "ListHostedZones",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to get a list of your hosted zones in lexicographic order. Hosted zones are sorted by name with the labels reversed, for example, com.example.www.",
        "privilege": "ListHostedZonesByName",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the configurations for DNS query logging that are associated with the current AWS account or the configuration that is associated with a specified hosted zone.",
        "privilege": "ListQueryLoggingConfigs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queryloggingconfig*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the records in a specified hosted zone",
        "privilege": "ListResourceRecordSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hostedzone*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the reusable delegation sets that are associated with the current AWS account.",
        "privilege": "ListReusableDelegationSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list tags for one health check or hosted zone",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "healthcheck"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hostedzone"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list tags for up to 10 health checks or hosted zones",
        "privilege": "ListTagsForResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "healthcheck"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hostedzone"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about the latest version for every traffic policy that is associated with the current AWS account. Policies are listed in the order in which they were created.",
        "privilege": "ListTrafficPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about the traffic policy instances that you created by using the current AWS account",
        "privilege": "ListTrafficPolicyInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about the traffic policy instances that you created in a specified hosted zone",
        "privilege": "ListTrafficPolicyInstancesByHostedZone",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hostedzone*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about the traffic policy instances that you created using a specified traffic policy version",
        "privilege": "ListTrafficPolicyInstancesByPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trafficpolicy*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about all the versions for a specified traffic policy",
        "privilege": "ListTrafficPolicyVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trafficpolicy*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get a list of the VPCs that were created by other accounts and that can be associated with a specified hosted zone",
        "privilege": "ListVPCAssociationAuthorizations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hostedzone*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get the value that Route 53 returns in response to a DNS query for a specified record name and type",
        "privilege": "TestDNSAnswer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an existing health check",
        "privilege": "UpdateHealthCheck",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "healthcheck*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the comment for a specified hosted zone",
        "privilege": "UpdateHostedZoneComment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hostedzone*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the comment for a specified traffic policy version",
        "privilege": "UpdateTrafficPolicyComment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trafficpolicy*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the records in a specified hosted zone that were created based on the settings in a specified traffic policy version",
        "privilege": "UpdateTrafficPolicyInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "trafficpolicyinstance*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:route53:::change/${Id}",
        "condition_keys": [],
        "resource": "change"
      },
      {
        "arn": "arn:${Partition}:route53:::delegationset/${Id}",
        "condition_keys": [],
        "resource": "delegationset"
      },
      {
        "arn": "arn:${Partition}:route53:::healthcheck/${Id}",
        "condition_keys": [],
        "resource": "healthcheck"
      },
      {
        "arn": "arn:${Partition}:route53:::hostedzone/${Id}",
        "condition_keys": [],
        "resource": "hostedzone"
      },
      {
        "arn": "arn:${Partition}:route53:::trafficpolicy/${Id}",
        "condition_keys": [],
        "resource": "trafficpolicy"
      },
      {
        "arn": "arn:${Partition}:route53:::trafficpolicyinstance/${Id}",
        "condition_keys": [],
        "resource": "trafficpolicyinstance"
      },
      {
        "arn": "arn:${Partition}:route53:::queryloggingconfig/${Id}",
        "condition_keys": [],
        "resource": "queryloggingconfig"
      }
    ],
    "service_name": "Amazon Route 53"
  },
  {
    "conditions": [],
    "prefix": "route53domains",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Grants permission to check the availability of one domain name",
        "privilege": "CheckDomainAvailability",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to delete the specified tags for a domain",
        "privilege": "DeleteTagsForDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to configure Amazon Route 53 to automatically renew the specified domain before the domain registration expires",
        "privilege": "DisableDomainAutoRenew",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove the transfer lock on the domain (specifically the clientTransferProhibited status) to allow domain transfers",
        "privilege": "DisableDomainTransferLock",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to configure Amazon Route 53 to automatically renew the specified domain before the domain registration expires",
        "privilege": "EnableDomainAutoRenew",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to set the transfer lock on the domain (specifically the clientTransferProhibited status) to prevent domain transfers",
        "privilege": "EnableDomainTransferLock",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "For operations that require confirmation that the email address for the registrant contact is valid, such as registering a new domain, grants permission to get information about whether the registrant contact has responded",
        "privilege": "GetContactReachabilityStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get detailed information about a domain",
        "privilege": "GetDomainDetail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get a list of suggested domain names given a string, which can either be a domain name or simply a word or phrase (without spaces)",
        "privilege": "GetDomainSuggestions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get the current status of an operation that is not completed",
        "privilege": "GetOperationDetail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all the domain names registered with Amazon Route 53 for the current AWS account",
        "privilege": "ListDomains",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the operation IDs of operations that are not yet complete",
        "privilege": "ListOperations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all the tags that are associated with the specified domain",
        "privilege": "ListTagsForDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to register domains",
        "privilege": "RegisterDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to renew domains for the specified number of years",
        "privilege": "RenewDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "For operations that require confirmation that the email address for the registrant contact is valid, such as registering a new domain, grants permission to resend the confirmation email to the current email address for the registrant contact",
        "privilege": "ResendContactReachabilityEmail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to get the AuthCode for the domain",
        "privilege": "RetrieveDomainAuthCode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to transfer a domain from another registrar to Amazon Route 53",
        "privilege": "TransferDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the contact information for domain",
        "privilege": "UpdateDomainContact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the domain contact privacy setting",
        "privilege": "UpdateDomainContactPrivacy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to replace the current set of name servers for a domain with the specified set of name servers",
        "privilege": "UpdateDomainNameservers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add or update tags for a specified domain",
        "privilege": "UpdateTagsForDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get all the domain-related billing records for the current AWS account for a specified period",
        "privilege": "ViewBilling",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon Route53 Domains"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "route53resolver",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to associate a specified IP address with a resolver endpoint. This is an IP address that DNS queries pass through on the way to your network (outbound) or your VPCs (inbound).",
        "privilege": "AssociateResolverEndpointIpAddress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate a specified resolver rule with a specified VPC.",
        "privilege": "AssociateResolverRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a resolver endpoint. There are two types of resolver endpoints, inbound and outbound.",
        "privilege": "CreateResolverEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "For DNS queries that originate in your VPC, grants permission to define how to route the queries out of the VPC.",
        "privilege": "CreateResolverRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a resolver endpoint. The effect of deleting a resolver endpoint depends on whether it's an inbound or an outbound resolver endpoint.",
        "privilege": "DeleteResolverEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a resolver rule.",
        "privilege": "DeleteResolverRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove a specified IP address from a resolver endpoint. This is an IP address that DNS queries pass through on the way to your network (outbound) or your VPCs (inbound).",
        "privilege": "DisassociateResolverEndpointIpAddress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove the association between a specified resolver rule and a specified VPC.",
        "privilege": "DisassociateResolverRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-rule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about a specified resolver endpoint, such as whether it's an inbound or an outbound resolver endpoint, and the IP addresses in your VPC that DNS queries are forwarded to on the way into or out of your VPC.",
        "privilege": "GetResolverEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-endpoint*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about a specified resolver rule, such as the domain name that the rule forwards DNS queries for and the IP address that queries are forwarded to.",
        "privilege": "GetResolverRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-rule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about an association between a specified resolver rule and a VPC.",
        "privilege": "GetResolverRuleAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-rule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get information about a resolver rule policy.",
        "privilege": "GetResolverRulePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-rule*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "For a specified resolver endpoint, grants permission to list the IP addresses that DNS queries pass through on the way to your network (outbound) or your VPCs (inbound).",
        "privilege": "ListResolverEndpointIpAddresses",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-endpoint*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all the resolver endpoints that were created using the current AWS account.",
        "privilege": "ListResolverEndpoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-endpoint*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the associations that were created between resolver rules and VPCs using the current AWS account.",
        "privilege": "ListResolverRuleAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-rule*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the resolver rules that were created using the current AWS account.",
        "privilege": "ListResolverRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-rule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list the tags that you associated with the specified resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-endpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-rule"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to specify the Resolver operations and resources that you want to allow another AWS account to use.",
        "privilege": "PutResolverRulePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-rule*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add one or more tags to a specified resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-endpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-rule"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove one or more tags from a specified resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-endpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-rule"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update selected settings for an inbound or an outbound resolver endpoint.",
        "privilege": "UpdateResolverEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update settings for a specified resolver rule.",
        "privilege": "UpdateResolverRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resolver-rule*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:route53resolver:${Region}:${Account}:resolver-rule/${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "resolver-rule"
      },
      {
        "arn": "arn:${Partition}:route53resolver:${Region}:${Account}:resolver-endpoint/${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "resolver-endpoint"
      }
    ],
    "service_name": "Amazon Route 53 Resolver"
  },
  {
    "conditions": [
      {
        "condition": "s3:AccessPointNetworkOrigin",
        "description": "The network type from which traffic may be received by the access point involved in the request",
        "type": "String"
      },
      {
        "condition": "s3:DataAccessPointAccount",
        "description": "The AWS Account ID of the account that owns the data operations access point involved in the request",
        "type": "String"
      },
      {
        "condition": "s3:DataAccessPointArn",
        "description": "The ARN of the data operations access point involved in the request",
        "type": "String"
      },
      {
        "condition": "s3:ExistingJobOperation",
        "description": "",
        "type": "String"
      },
      {
        "condition": "s3:ExistingJobPriority",
        "description": "",
        "type": "Numeric"
      },
      {
        "condition": "s3:ExistingObjectTag/<key>",
        "description": "Enables you to verify that an existing object tag has the specific tag key and value.",
        "type": "String"
      },
      {
        "condition": "s3:JobSuspendedCause",
        "description": "",
        "type": "String"
      },
      {
        "condition": "s3:LocationConstraint",
        "description": "Enables you to restrict users to creating buckets in only a specific region.",
        "type": "String"
      },
      {
        "condition": "s3:RequestJobOperation",
        "description": "",
        "type": "String"
      },
      {
        "condition": "s3:RequestJobPriority",
        "description": "",
        "type": "Numeric"
      },
      {
        "condition": "s3:RequestObjectTag/<key>",
        "description": "Restrict the tag keys and values that you want to allow on objects.",
        "type": "String"
      },
      {
        "condition": "s3:RequestObjectTagKeys",
        "description": "restrict the tag keys that you want to allow on objects.",
        "type": "String"
      },
      {
        "condition": "s3:VersionId",
        "description": "Enables you to limit the permission for the s3:PutObjectVersionTagging action to a specific object version.",
        "type": "String"
      },
      {
        "condition": "s3:authtype",
        "description": "",
        "type": "String"
      },
      {
        "condition": "s3:delimiter",
        "description": "Enables you to require the user to specify the delimiter parameter in the GET Bucket Object versions request.",
        "type": "String"
      },
      {
        "condition": "s3:locationconstraint",
        "description": "Enables you to restrict the user to creating a bucket in only a specific region.",
        "type": "String"
      },
      {
        "condition": "s3:max-keys",
        "description": "Enables you to limit the number of keys Amazon S3 returns in response to ListBucket requests by requiring the user to specify the max-keys parameter.",
        "type": "Numeric"
      },
      {
        "condition": "s3:object-lock-legal-hold",
        "description": "Enables enforcement of the specified object legal hold status",
        "type": "String"
      },
      {
        "condition": "s3:object-lock-mode",
        "description": "Enables enforcement of the specified object retention mode",
        "type": "String"
      },
      {
        "condition": "s3:object-lock-remaining-retention-days",
        "description": "Enables enforcement of an object relative to the remaining retention days",
        "type": "String"
      },
      {
        "condition": "s3:object-lock-retain-until-date",
        "description": "Enables enforcement of a specific retain-until-date",
        "type": "String"
      },
      {
        "condition": "s3:prefix",
        "description": "Enables you to limit the response of the ListBucket API to key names with specific prefix.",
        "type": "String"
      },
      {
        "condition": "s3:signatureage",
        "description": "",
        "type": "Numeric"
      },
      {
        "condition": "s3:signatureversion",
        "description": "",
        "type": "String"
      },
      {
        "condition": "s3:versionid",
        "description": "",
        "type": "String"
      },
      {
        "condition": "s3:x-amz-acl",
        "description": "Enables you to require specific access permissions when uploading an object.",
        "type": "String"
      },
      {
        "condition": "s3:x-amz-content-sha256",
        "description": "",
        "type": "String"
      },
      {
        "condition": "s3:x-amz-copy-source",
        "description": "Enables you to restrict the copy source to a specific bucket, a specific folder in the bucket, or a specific object in a bucket.",
        "type": "String"
      },
      {
        "condition": "s3:x-amz-grant-full-control",
        "description": "",
        "type": "String"
      },
      {
        "condition": "s3:x-amz-grant-read",
        "description": "",
        "type": "String"
      },
      {
        "condition": "s3:x-amz-grant-read-acp",
        "description": "",
        "type": "String"
      },
      {
        "condition": "s3:x-amz-grant-write",
        "description": "",
        "type": "String"
      },
      {
        "condition": "s3:x-amz-grant-write-acp",
        "description": "",
        "type": "String"
      },
      {
        "condition": "s3:x-amz-metadata-directive",
        "description": "Enables you to enforce certain behavior (COPY vs. REPLACE) when objects are uploaded.",
        "type": "String"
      },
      {
        "condition": "s3:x-amz-server-side-encryption",
        "description": "Enables you to require the user to specify this header in the request to ensure that objects the user uploads are encrypted when they are saved.",
        "type": "String"
      },
      {
        "condition": "s3:x-amz-server-side-encryption-aws-kms-key-id",
        "description": "",
        "type": "String"
      },
      {
        "condition": "s3:x-amz-storage-class",
        "description": "",
        "type": "String"
      },
      {
        "condition": "s3:x-amz-website-redirect-location",
        "description": "",
        "type": "String"
      }
    ],
    "prefix": "s3",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Aborts a multipart upload.",
        "privilege": "AbortMultipartUpload",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointArn",
              "s3:DataAccessPointAccount",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Allows circumvention of governance-mode object retention settings",
        "privilege": "BypassGovernanceRetention",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:RequestObjectTag/<key>",
              "s3:RequestObjectTagKeys",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-acl",
              "s3:x-amz-content-sha256",
              "s3:x-amz-copy-source",
              "s3:x-amz-grant-full-control",
              "s3:x-amz-grant-read",
              "s3:x-amz-grant-read-acp",
              "s3:x-amz-grant-write",
              "s3:x-amz-grant-write-acp",
              "s3:x-amz-metadata-directive",
              "s3:x-amz-server-side-encryption",
              "s3:x-amz-server-side-encryption-aws-kms-key-id",
              "s3:x-amz-storage-class",
              "s3:x-amz-website-redirect-location",
              "s3:object-lock-mode",
              "s3:object-lock-retain-until-date",
              "s3:object-lock-remaining-retention-days",
              "s3:object-lock-legal-hold"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new access point.",
        "privilege": "CreateAccessPoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accesspoint*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:locationconstraint",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-acl",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new bucket.",
        "privilege": "CreateBucket",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:locationconstraint",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-acl",
              "s3:x-amz-content-sha256",
              "s3:x-amz-grant-full-control",
              "s3:x-amz-grant-read",
              "s3:x-amz-grant-read-acp",
              "s3:x-amz-grant-write",
              "s3:x-amz-grant-write-acp"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new Amazon S3 Batch Operations job.",
        "privilege": "CreateJob",
        "resource_types": [
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256",
              "s3:RequestJobPriority",
              "s3:RequestJobOperation"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the access point named in the URI",
        "privilege": "DeleteAccessPoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accesspoint*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointArn",
              "s3:DataAccessPointAccount",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Delete the policy on a specified access point",
        "privilege": "DeleteAccessPointPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accesspoint*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointArn",
              "s3:DataAccessPointAccount",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the bucket named in the URI",
        "privilege": "DeleteBucket",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Delete the policy on a specified bucket",
        "privilege": "DeleteBucketPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes the website configuration for a bucket.",
        "privilege": "DeleteBucketWebsite",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes the null version (if there is one) of an object and inserts a delete marker, which becomes the current version of the object.",
        "privilege": "DeleteObject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This implementation of the DELETE operation uses the tagging subresource to remove the entire tag set from the specified object.",
        "privilege": "DeleteObjectTagging",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:ExistingObjectTag/<key>",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "To remove a specific version of a object, you must be the bucket owner and you must use the versionId subresource.",
        "privilege": "DeleteObjectVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:versionid",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "DELETE Object tagging (for a Specific Version of the Object)",
        "privilege": "DeleteObjectVersionTagging",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:ExistingObjectTag/<key>",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:versionid",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the configuration parameters and status for an Amazon S3 batch operations job.",
        "privilege": "DescribeJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This implementation of the GET operation uses the accelerate subresource to return the Transfer Acceleration state of a bucket, which is either Enabled or Suspended.",
        "privilege": "GetAccelerateConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve access point metadata",
        "privilege": "GetAccessPoint",
        "resource_types": [
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return the policy of a specified access point.",
        "privilege": "GetAccessPointPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accesspoint*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve the policy status for an specific access point's policy",
        "privilege": "GetAccessPointPolicyStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accesspoint*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve the PublicAccessBlock configuration for an AWS account",
        "privilege": "GetAccountPublicAccessBlock",
        "resource_types": [
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This implementation of the GET operation returns an analytics configuration (identified by the analytics configuration ID) from the bucket.",
        "privilege": "GetAnalyticsConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return the access control list (ACL) of a bucket.",
        "privilege": "GetBucketAcl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the CORS configuration information set for the bucket.",
        "privilege": "GetBucketCORS",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return a bucket's region.",
        "privilege": "GetBucketLocation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return the logging status of a bucket and the permissions users have to view and modify that status.",
        "privilege": "GetBucketLogging",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return the notification configuration of a bucket.",
        "privilege": "GetBucketNotification",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "GET Object Lock configuration for a specific bucket",
        "privilege": "GetBucketObjectLockConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return the policy of a specified bucket.",
        "privilege": "GetBucketPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve the policy status for an specific S3 bucket, indicating whether the bucket is public.",
        "privilege": "GetBucketPolicyStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve the PublicAccessBlock configuration for a specific S3 bucket.",
        "privilege": "GetBucketPublicAccessBlock",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return the request payment configuration of a bucket.",
        "privilege": "GetBucketRequestPayment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return the tag set associated with the bucket.",
        "privilege": "GetBucketTagging",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return the versioning state of a bucket.",
        "privilege": "GetBucketVersioning",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the website configuration associated with a bucket.",
        "privilege": "GetBucketWebsite",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the encryption configuration information set on the bucket.",
        "privilege": "GetEncryptionConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This implementation of the GET operation returns an inventory configuration (identified by the inventory configuration ID) from the bucket.",
        "privilege": "GetInventoryConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the lifecycle configuration information set on the bucket.",
        "privilege": "GetLifecycleConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from the bucket. Note that this doesn't include the daily storage metrics.",
        "privilege": "GetMetricsConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves objects from Amazon S3.",
        "privilege": "GetObject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:ExistingObjectTag/<key>",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return the access control list (ACL) of an object.",
        "privilege": "GetObjectAcl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:ExistingObjectTag/<key>",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "GET Object Legal Hold for a specific object",
        "privilege": "GetObjectLegalHold",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "GET Object Legal Hold for a specific object",
        "privilege": "GetObjectRetention",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This implementation of the GET operation returns the tags associated with an object. You send the GET request against the tagging subresource associated with the object.",
        "privilege": "GetObjectTagging",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:ExistingObjectTag/<key>",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "return torrent files from a bucket.",
        "privilege": "GetObjectTorrent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "To return a different version, use the versionId subresource.",
        "privilege": "GetObjectVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:ExistingObjectTag/<key>",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:versionid",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "To return ACL information about a different version, use the versionId subresource.",
        "privilege": "GetObjectVersionAcl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:ExistingObjectTag/<key>",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:versionid",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Permission exercised by S3 replication",
        "privilege": "GetObjectVersionForReplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "GET Object tagging (for a Specific Version of the Object)",
        "privilege": "GetObjectVersionTagging",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:ExistingObjectTag/<key>",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:versionid",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "To return Torrent files about a different version, use the versionId subresource.",
        "privilege": "GetObjectVersionTorrent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:versionid",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the replication configuration information set on the bucket.",
        "privilege": "GetReplicationConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists access points.",
        "privilege": "ListAccessPoints",
        "resource_types": [
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of all buckets owned by the authenticated sender of the request.",
        "privilege": "ListAllMyBuckets",
        "resource_types": [
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns some or all (up to 1000) of the objects in a bucket.",
        "privilege": "ListBucket",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:delimiter",
              "s3:max-keys",
              "s3:prefix",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists in-progress multipart uploads.",
        "privilege": "ListBucketMultipartUploads",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Use the versions subresource to list metadata about all of the versions of objects in a bucket.",
        "privilege": "ListBucketVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:delimiter",
              "s3:max-keys",
              "s3:prefix",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists current jobs and jobs that have ended recently.",
        "privilege": "ListJobs",
        "resource_types": [
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the parts that have been uploaded for a specific multipart upload.",
        "privilege": "ListMultipartUploadParts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Permission exercised by S3 replication",
        "privilege": "ObjectOwnerOverrideToBucketOwner",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This implementation of the PUT operation uses the accelerate subresource to set the Transfer Acceleration state of an existing bucket.",
        "privilege": "PutAccelerateConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Add to or replace a data policy on a access point.",
        "privilege": "PutAccessPointPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "accesspoint*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Create or modify the PublicAccessBlock configuration for an AWS account.",
        "privilege": "PutAccountPublicAccessBlock",
        "resource_types": [
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This implementation of the PUT operation adds an analytics configuration (identified by the analytics ID) to the bucket. You can have up to 1,000 analytics configurations per bucket.",
        "privilege": "PutAnalyticsConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Set the permissions on an existing bucket using access control lists (ACL).",
        "privilege": "PutBucketAcl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-acl",
              "s3:x-amz-content-sha256",
              "s3:x-amz-grant-full-control",
              "s3:x-amz-grant-read",
              "s3:x-amz-grant-read-acp",
              "s3:x-amz-grant-write",
              "s3:x-amz-grant-write-acp"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the CORS configuration for your bucket.",
        "privilege": "PutBucketCORS",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Set the logging parameters for a bucket.",
        "privilege": "PutBucketLogging",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables you to receive notifications when certain events happen in your bucket.",
        "privilege": "PutBucketNotification",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "PUT Object Lock configuration on a specific bucket",
        "privilege": "PutBucketObjectLockConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Add to or replace a policy on a bucket.",
        "privilege": "PutBucketPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Create or modify the PublicAccessBlock configuration for an specific S3 bucket.",
        "privilege": "PutBucketPublicAccessBlock",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Set the request payment configuration of a bucket.",
        "privilege": "PutBucketRequestPayment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Add a set of tags to an existing bucket.",
        "privilege": "PutBucketTagging",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Set the versioning state of an existing bucket.",
        "privilege": "PutBucketVersioning",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the configuration of the website that is specified in the website subresource.",
        "privilege": "PutBucketWebsite",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the encryption configuration for the bucket.",
        "privilege": "PutEncryptionConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This implementation of the PUT operation adds an inventory configuration (identified by the inventory ID) to the bucket. You can have up to 1,000 inventory configurations per bucket.",
        "privilege": "PutInventoryConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new lifecycle configuration for the bucket or replaces an existing lifecycle configuration.",
        "privilege": "PutLifecycleConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets or updates a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from the bucket.",
        "privilege": "PutMetricsConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds an object to a bucket.",
        "privilege": "PutObject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:RequestObjectTag/<key>",
              "s3:RequestObjectTagKeys",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-acl",
              "s3:x-amz-content-sha256",
              "s3:x-amz-copy-source",
              "s3:x-amz-grant-full-control",
              "s3:x-amz-grant-read",
              "s3:x-amz-grant-read-acp",
              "s3:x-amz-grant-write",
              "s3:x-amz-grant-write-acp",
              "s3:x-amz-metadata-directive",
              "s3:x-amz-server-side-encryption",
              "s3:x-amz-server-side-encryption-aws-kms-key-id",
              "s3:x-amz-storage-class",
              "s3:x-amz-website-redirect-location",
              "s3:object-lock-mode",
              "s3:object-lock-retain-until-date",
              "s3:object-lock-remaining-retention-days",
              "s3:object-lock-legal-hold"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Set the access control list (ACL) permissions for an object that already exists in a bucket.",
        "privilege": "PutObjectAcl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:ExistingObjectTag/<key>",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-acl",
              "s3:x-amz-content-sha256",
              "s3:x-amz-grant-full-control",
              "s3:x-amz-grant-read",
              "s3:x-amz-grant-read-acp",
              "s3:x-amz-grant-write",
              "s3:x-amz-grant-write-acp",
              "s3:x-amz-storage-class"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "PUT Object Legal Hold on a specific object",
        "privilege": "PutObjectLegalHold",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256",
              "s3:object-lock-legal-hold"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "PUT Object Retention on a specific object",
        "privilege": "PutObjectRetention",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256",
              "s3:object-lock-mode",
              "s3:object-lock-retain-until-date",
              "s3:object-lock-remaining-retention-days"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This implementation of the PUT operation uses the tagging subresource to add a set of tags to an existing object.",
        "privilege": "PutObjectTagging",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:ExistingObjectTag/<key>",
              "s3:RequestObjectTag/<key>",
              "s3:RequestObjectTagKeys",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "The ACL of an object is set at the object version level.",
        "privilege": "PutObjectVersionAcl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:ExistingObjectTag/<key>",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:versionid",
              "s3:x-amz-acl",
              "s3:x-amz-content-sha256",
              "s3:x-amz-grant-full-control",
              "s3:x-amz-grant-read",
              "s3:x-amz-grant-read-acp",
              "s3:x-amz-grant-write",
              "s3:x-amz-grant-write-acp",
              "s3:x-amz-storage-class"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "PUT Object tagging (for a Specific Version of the Object)",
        "privilege": "PutObjectVersionTagging",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:ExistingObjectTag/<key>",
              "s3:RequestObjectTag/<key>",
              "s3:RequestObjectTagKeys",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:versionid",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "In a versioning-enabled bucket, this operation creates a new replication configuration (or replaces an existing one, if present).",
        "privilege": "PutReplicationConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bucket*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permission exercised by S3 replication",
        "privilege": "ReplicateDelete",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permission exercised by S3 replication",
        "privilege": "ReplicateObject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256",
              "s3:x-amz-server-side-encryption",
              "s3:x-amz-server-side-encryption-aws-kms-key-id"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Permission exercised by S3 replication",
        "privilege": "ReplicateTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Restores a temporary copy of an archived object.",
        "privilege": "RestoreObject",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "object*"
          },
          {
            "condition_keys": [
              "s3:DataAccessPointAccount",
              "s3:DataAccessPointArn",
              "s3:AccessPointNetworkOrigin",
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing job's priority.",
        "privilege": "UpdateJobPriority",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256",
              "s3:RequestJobPriority",
              "s3:ExistingJobPriority",
              "s3:ExistingJobOperation"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the status for the specified job.",
        "privilege": "UpdateJobStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "job*"
          },
          {
            "condition_keys": [
              "s3:authtype",
              "s3:signatureage",
              "s3:signatureversion",
              "s3:x-amz-content-sha256",
              "s3:ExistingJobPriority",
              "s3:ExistingJobOperation",
              "s3:JobSuspendedCause"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:s3:${Region}:${Account}:accesspoint/${AccessPointName}",
        "condition_keys": [],
        "resource": "accesspoint"
      },
      {
        "arn": "arn:${Partition}:s3:::${BucketName}",
        "condition_keys": [],
        "resource": "bucket"
      },
      {
        "arn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}",
        "condition_keys": [],
        "resource": "object"
      },
      {
        "arn": "arn:${Partition}:s3:${Region}:${Account}:job/${JobId}",
        "condition_keys": [],
        "resource": "job"
      }
    ],
    "service_name": "Amazon S3"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "A key that is present in the request the user makes to the SageMaker service.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "A tag key and value pair.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "The list of all the tag key names associated with the resource in the request.",
        "type": "String"
      },
      {
        "condition": "sagemaker:AcceleratorTypes",
        "description": "The list of all accelerator types associated with the resource in the request.",
        "type": "ArrayOfString"
      },
      {
        "condition": "sagemaker:AppNetworkAccess",
        "description": "App network access associated with the resource in the request.",
        "type": "String"
      },
      {
        "condition": "sagemaker:DirectInternetAccess",
        "description": "The direct internet access associated with the resource in the request.",
        "type": "String"
      },
      {
        "condition": "sagemaker:DomainSharingOutputKmsKey",
        "description": "The Domain sharing output KMS key associated with the resource in the request.",
        "type": "ARN"
      },
      {
        "condition": "sagemaker:FileSystemAccessMode",
        "description": "File system access mode associated with the resource in the request.",
        "type": "String"
      },
      {
        "condition": "sagemaker:FileSystemDirectoryPath",
        "description": "File system directory path associated with the resource in the request.",
        "type": "String"
      },
      {
        "condition": "sagemaker:FileSystemId",
        "description": "A file system ID associated with the resource in the request.",
        "type": "String"
      },
      {
        "condition": "sagemaker:FileSystemType",
        "description": "File system type associated with the resource in the request.",
        "type": "String"
      },
      {
        "condition": "sagemaker:HomeEfsFileSystemKmsKey",
        "description": "The KMS Key Id of the EFS File System used for UserProfile home directories, which is associated with the resource in the request.",
        "type": "ARN"
      },
      {
        "condition": "sagemaker:InstanceTypes",
        "description": "The list of all instance types associated with the resource in the request.",
        "type": "ArrayOfString"
      },
      {
        "condition": "sagemaker:InterContainerTrafficEncryption",
        "description": "The inter container traffic encryption associated with the resource in the request.",
        "type": "Bool"
      },
      {
        "condition": "sagemaker:MaxRuntimeInSeconds",
        "description": "The max runtime in seconds associated with the resource in the request.",
        "type": "Numeric"
      },
      {
        "condition": "sagemaker:ModelArn",
        "description": "The model arn associated with the resource in the request.",
        "type": "ARN"
      },
      {
        "condition": "sagemaker:NetworkIsolation",
        "description": "The network isolation associated with the resource in the request.",
        "type": "Bool"
      },
      {
        "condition": "sagemaker:OutputKmsKey",
        "description": "The output kms key associated with the resource in the request.",
        "type": "ARN"
      },
      {
        "condition": "sagemaker:ResourceTag/",
        "description": "The preface string for a tag key and value pair attached to a resource.",
        "type": "String"
      },
      {
        "condition": "sagemaker:ResourceTag/${TagKey}",
        "description": "A tag key and value pair.",
        "type": "String"
      },
      {
        "condition": "sagemaker:RootAccess",
        "description": "The root access associated with the resource in the request.",
        "type": "String"
      },
      {
        "condition": "sagemaker:VolumeKmsKey",
        "description": "The volume kms key associated with the resource in the request.",
        "type": "ARN"
      },
      {
        "condition": "sagemaker:VpcSecurityGroupIds",
        "description": "The list of all vpc security group ids associated with the resource in the request.",
        "type": "ArrayOfString"
      },
      {
        "condition": "sagemaker:VpcSubnets",
        "description": "The list of all vpc subnets associated with the resource in the request.",
        "type": "ArrayOfString"
      },
      {
        "condition": "sagemaker:WorkteamArn",
        "description": "The workteam arn associated to the request.",
        "type": "ARN"
      },
      {
        "condition": "sagemaker:WorkteamType",
        "description": "The workteam type associated to the request. This can be public-crowd, private-crowd or vendor-crowd.",
        "type": "String"
      }
    ],
    "prefix": "sagemaker",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "Adds or overwrites one or more tags for the specified Amazon SageMaker resource.",
        "privilege": "AddTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "app"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "automl-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpoint-config"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial-component"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "flow-definition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "human-task-ui"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hyper-parameter-tuning-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "labeling-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "model"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "monitoring-schedule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notebook-instance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "processing-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "training-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "transform-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user-profile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workteam"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associate a trial component with a trial.",
        "privilege": "AssociateTrialComponent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial-component*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve metrics associated with SageMaker Resources such as Training Jobs. This API is not publicly exposed at this point, however admins can control this action",
        "privilege": "BatchGetMetrics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "training-job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Publish metrics associated with a SageMaker Resource such as a Training Job. This API is not publicly exposed at this point, however admins can control this action",
        "privilege": "BatchPutMetrics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "training-job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create an algorithm.",
        "privilege": "CreateAlgorithm",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "algorithm*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an App for a SageMaker Studio UserProfile",
        "privilege": "CreateApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "app*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "sagemaker:InstanceTypes"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates automl job.",
        "privilege": "CreateAutoMLJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "automl-job*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "sagemaker:InterContainerTrafficEncryption",
              "sagemaker:OutputKmsKey",
              "sagemaker:VolumeKmsKey",
              "sagemaker:VpcSecurityGroupIds",
              "sagemaker:VpcSubnets"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a code repository.",
        "privilege": "CreateCodeRepository",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "code-repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a compilation job.",
        "privilege": "CreateCompilationJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "compilation-job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a Domain for SageMaker Studio",
        "privilege": "CreateDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:CreateServiceLinkedRole",
              "iam:PassRole"
            ],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "sagemaker:AppNetworkAccess",
              "sagemaker:InstanceTypes",
              "sagemaker:VpcSecurityGroupIds",
              "sagemaker:VpcSubnets",
              "sagemaker:DomainSharingOutputKmsKey",
              "sagemaker:HomeEfsFileSystemKmsKey"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an endpoint using the endpoint configuration specified in the request.",
        "privilege": "CreateEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpoint*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an endpoint configuration that can be deployed using Amazon SageMaker hosting services.",
        "privilege": "CreateEndpointConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpoint-config*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "sagemaker:AcceleratorTypes",
              "sagemaker:InstanceTypes",
              "sagemaker:ModelArn",
              "sagemaker:VolumeKmsKey"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create an experiment.",
        "privilege": "CreateExperiment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a flow definition, which defines settings for a human workflow.",
        "privilege": "CreateFlowDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "flow-definition*"
          },
          {
            "condition_keys": [
              "sagemaker:WorkteamArn",
              "sagemaker:WorkteamType",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Defines the settings you will use for the human review workflow user interface.",
        "privilege": "CreateHumanTaskUi",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "human-task-ui*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates hyper parameter tuning job that can be deployed using Amazon SageMaker.",
        "privilege": "CreateHyperParameterTuningJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "hyper-parameter-tuning-job*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "sagemaker:FileSystemAccessMode",
              "sagemaker:FileSystemDirectoryPath",
              "sagemaker:FileSystemId",
              "sagemaker:FileSystemType",
              "sagemaker:InstanceTypes",
              "sagemaker:InterContainerTrafficEncryption",
              "sagemaker:MaxRuntimeInSeconds",
              "sagemaker:NetworkIsolation",
              "sagemaker:OutputKmsKey",
              "sagemaker:VolumeKmsKey",
              "sagemaker:VpcSecurityGroupIds",
              "sagemaker:VpcSubnets"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a labeling job. A labeling job takes unlabeled data in and produces labeled data as output, which can be used for training SageMaker models.",
        "privilege": "CreateLabelingJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "labeling-job*"
          },
          {
            "condition_keys": [
              "sagemaker:WorkteamArn",
              "sagemaker:WorkteamType",
              "sagemaker:VolumeKmsKey",
              "sagemaker:OutputKmsKey",
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a model in Amazon SageMaker. In the request, you specify a name for the model and describe one or more containers.",
        "privilege": "CreateModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "model*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "sagemaker:NetworkIsolation",
              "sagemaker:VpcSecurityGroupIds",
              "sagemaker:VpcSubnets"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a model package.",
        "privilege": "CreateModelPackage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "model-package*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a monitoring schedule.",
        "privilege": "CreateMonitoringSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "monitoring-schedule*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "sagemaker:InstanceTypes",
              "sagemaker:MaxRuntimeInSeconds",
              "sagemaker:NetworkIsolation",
              "sagemaker:OutputKmsKey",
              "sagemaker:VolumeKmsKey",
              "sagemaker:VpcSecurityGroupIds",
              "sagemaker:VpcSubnets"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an Amazon SageMaker notebook instance. A notebook instance is an Amazon EC2 instance running on a Jupyter Notebook.",
        "privilege": "CreateNotebookInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "notebook-instance*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "sagemaker:AcceleratorTypes",
              "sagemaker:DirectInternetAccess",
              "sagemaker:InstanceTypes",
              "sagemaker:RootAccess",
              "sagemaker:VolumeKmsKey",
              "sagemaker:VpcSecurityGroupIds",
              "sagemaker:VpcSubnets"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an notebook instance lifecycle configuration that can be deployed using Amazon SageMaker.",
        "privilege": "CreateNotebookInstanceLifecycleConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notebook-instance-lifecycle-config*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to return a URL that you can use from your browser to connect to the Domain as a specified UserProfile when AuthMode is 'IAM'",
        "privilege": "CreatePresignedDomainUrl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user-profile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Returns a URL that you can use from your browser to connect to the Notebook Instance.",
        "privilege": "CreatePresignedNotebookInstanceUrl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notebook-instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a processing job. After processing completes, Amazon SageMaker saves the resulting artifacts and other optional output to an Amazon S3 location that you specify.",
        "privilege": "CreateProcessingJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "processing-job*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "sagemaker:InstanceTypes",
              "sagemaker:MaxRuntimeInSeconds",
              "sagemaker:NetworkIsolation",
              "sagemaker:OutputKmsKey",
              "sagemaker:VolumeKmsKey",
              "sagemaker:VpcSecurityGroupIds",
              "sagemaker:VpcSubnets"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a model training job. After training completes, Amazon SageMaker saves the resulting model artifacts and other optional output to an Amazon S3 location that you specify.",
        "privilege": "CreateTrainingJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "training-job*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "sagemaker:FileSystemAccessMode",
              "sagemaker:FileSystemDirectoryPath",
              "sagemaker:FileSystemId",
              "sagemaker:FileSystemType",
              "sagemaker:InstanceTypes",
              "sagemaker:InterContainerTrafficEncryption",
              "sagemaker:MaxRuntimeInSeconds",
              "sagemaker:NetworkIsolation",
              "sagemaker:OutputKmsKey",
              "sagemaker:VolumeKmsKey",
              "sagemaker:VpcSecurityGroupIds",
              "sagemaker:VpcSubnets"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a transform job. After the results are obtained, Amazon SageMaker saves them to an Amazon S3 location that you specify.",
        "privilege": "CreateTransformJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "transform-job*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "sagemaker:InstanceTypes",
              "sagemaker:ModelArn",
              "sagemaker:OutputKmsKey",
              "sagemaker:VolumeKmsKey"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a trial.",
        "privilege": "CreateTrial",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a trial component.",
        "privilege": "CreateTrialComponent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial-component*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a UserProfile for a SageMaker Studio Domain",
        "privilege": "CreateUserProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "user-profile*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "sagemaker:VpcSecurityGroupIds",
              "sagemaker:InstanceTypes",
              "sagemaker:DomainSharingOutputKmsKey"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a workteam.",
        "privilege": "CreateWorkteam",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workteam*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an algorithm.",
        "privilege": "DeleteAlgorithm",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "algorithm*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an App",
        "privilege": "DeleteApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "app*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a code repository.",
        "privilege": "DeleteCodeRepository",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "code-repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a Domain",
        "privilege": "DeleteDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an endpoint. Amazon SageMaker frees up all the resources that were deployed when the endpoint was created.",
        "privilege": "DeleteEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the endpoint configuration created using the CreateEndpointConfig API. The DeleteEndpointConfig API deletes only the specified configuration. It does not delete any endpoints created using the configuration.",
        "privilege": "DeleteEndpointConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpoint-config*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an experiment.",
        "privilege": "DeleteExperiment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deltes the specified flow definition.",
        "privilege": "DeleteFlowDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "flow-definition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified human loop.",
        "privilege": "DeleteHumanLoop",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "human-loop*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a model created using the CreateModel API. The DeleteModel API deletes only the model entry in Amazon SageMaker that you created by calling the CreateModel API. It does not delete model artifacts, inference code, or the IAM role that you specified when creating the model.",
        "privilege": "DeleteModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "model*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a model package.",
        "privilege": "DeleteModelPackage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "model-package*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a monitoring schedule. Amazon SageMaker will no longer run the scheduled monitoring.",
        "privilege": "DeleteMonitoringSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "monitoring-schedule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an Amazon SageMaker notebook instance. Before you can delete a notebook instance, you must call the StopNotebookInstance API.",
        "privilege": "DeleteNotebookInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notebook-instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an notebook instance lifecycle configuration that can be deployed using Amazon SageMaker.",
        "privilege": "DeleteNotebookInstanceLifecycleConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notebook-instance-lifecycle-config*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Deletes the specified set of tags from an Amazon SageMaker resource.",
        "privilege": "DeleteTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "app"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "automl-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "compilation-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpoint-config"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial-component"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "flow-definition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "human-task-ui"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hyper-parameter-tuning-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "labeling-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "model"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "monitoring-schedule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notebook-instance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "processing-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "training-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "transform-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user-profile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workteam"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a trial.",
        "privilege": "DeleteTrial",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a trial component.",
        "privilege": "DeleteTrialComponent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial-component*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a UserProfile",
        "privilege": "DeleteUserProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user-profile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a workteam.",
        "privilege": "DeleteWorkteam",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workteam*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about an algorithm.",
        "privilege": "DescribeAlgorithm",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "algorithm*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe an App",
        "privilege": "DescribeApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "app*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an automl job that was created via CreateAutoMLJob API.",
        "privilege": "DescribeAutoMLJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "automl-job*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a code repository.",
        "privilege": "DescribeCodeRepository",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "code-repository*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a compilation job.",
        "privilege": "DescribeCompilationJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "compilation-job*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe a Domain",
        "privilege": "DescribeDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the description of an endpoint.",
        "privilege": "DescribeEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpoint*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the description of an endpoint configuration, which was created using the CreateEndpointConfig API.",
        "privilege": "DescribeEndpointConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpoint-config*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about an experiment.",
        "privilege": "DescribeExperiment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns detailed information about the specified flow definition.",
        "privilege": "DescribeFlowDefinition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "flow-definition*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns detailed information about the specified human loop.",
        "privilege": "DescribeHumanLoop",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "human-loop*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns detailed information about the specified human review workflow user interface.",
        "privilege": "DescribeHumanTaskUi",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "human-task-ui*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a hyper parameter tuning job that was created via CreateHyperParameterTuningJob API.",
        "privilege": "DescribeHyperParameterTuningJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hyper-parameter-tuning-job*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a labeling job.",
        "privilege": "DescribeLabelingJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "labeling-job*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a model that you created using the CreateModel API.",
        "privilege": "DescribeModel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "model*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a model package.",
        "privilege": "DescribeModelPackage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "model-package*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a monitoring schedule.",
        "privilege": "DescribeMonitoringSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "monitoring-schedule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a notebook instance.",
        "privilege": "DescribeNotebookInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notebook-instance*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an notebook instance lifecycle configuration that was created via CreateNotebookInstanceLifecycleConfig API.",
        "privilege": "DescribeNotebookInstanceLifecycleConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notebook-instance-lifecycle-config*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a processing job.",
        "privilege": "DescribeProcessingJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "processing-job*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a subscribed workteam.",
        "privilege": "DescribeSubscribedWorkteam",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workteam*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a training job.",
        "privilege": "DescribeTrainingJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "training-job*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a transform job.",
        "privilege": "DescribeTransformJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "transform-job*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a trial.",
        "privilege": "DescribeTrial",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a trial component.",
        "privilege": "DescribeTrialComponent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial-component*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe a UserProfile",
        "privilege": "DescribeUserProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user-profile*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a workforce.",
        "privilege": "DescribeWorkforce",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workforce*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a workteam.",
        "privilege": "DescribeWorkteam",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workteam*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociate a trial component with a trial.",
        "privilege": "DisassociateTrialComponent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial-component*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "processing-job*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get search suggestions when provided with keyword.",
        "privilege": "GetSearchSuggestions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "training-job*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "After you deploy a model into production using Amazon SageMaker hosting services, your client applications use this API to get inferences from the model hosted at the specified endpoint.",
        "privilege": "InvokeEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpoint*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists algorithms.",
        "privilege": "ListAlgorithms",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the Apps in your account",
        "privilege": "ListApps",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists automl jobs created via the CreateAutoMLJob.",
        "privilege": "ListAutoMLJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists candidates for automl job created via the CreateAutoMLJob.",
        "privilege": "ListCandidatesForAutoMLJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists code repositories.",
        "privilege": "ListCodeRepositories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists compilation jobs.",
        "privilege": "ListCompilationJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the Domains in your account",
        "privilege": "ListDomains",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists endpoint configurations.",
        "privilege": "ListEndpointConfigs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists endpoints.",
        "privilege": "ListEndpoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists experiments.",
        "privilege": "ListExperiments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns summary information about flow definitions, given the specified parameters.",
        "privilege": "ListFlowDefinitions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns summary information about human loops, given the specified parameters.",
        "privilege": "ListHumanLoops",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns summary information about human review workflow user interfaces, given the specified parameters.",
        "privilege": "ListHumanTaskUis",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists hyper parameter tuning jobs that was created using Amazon SageMaker.",
        "privilege": "ListHyperParameterTuningJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists labeling jobs.",
        "privilege": "ListLabelingJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists labeling jobs for workteam.",
        "privilege": "ListLabelingJobsForWorkteam",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workteam*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists model packages.",
        "privilege": "ListModelPackages",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the models created with the CreateModel API.",
        "privilege": "ListModels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists monitoring executions.",
        "privilege": "ListMonitoringExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists monitoring schedules.",
        "privilege": "ListMonitoringSchedules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists notebook instance lifecycle configurations that can be deployed using Amazon SageMaker.",
        "privilege": "ListNotebookInstanceLifecycleConfigs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of the Amazon SageMaker notebook instances in the requester's account in an AWS Region.",
        "privilege": "ListNotebookInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists processing jobs.",
        "privilege": "ListProcessingJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists subscribed workteams.",
        "privilege": "ListSubscribedWorkteams",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the tag set associated with the specified resource.",
        "privilege": "ListTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "app"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "automl-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpoint"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpoint-config"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial-component"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "flow-definition"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "human-task-ui"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hyper-parameter-tuning-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "labeling-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "model"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "monitoring-schedule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notebook-instance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "training-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "transform-job"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user-profile"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workteam"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists training jobs.",
        "privilege": "ListTrainingJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists training jobs for a hyper parameter tuning job that was created using Amazon SageMaker.",
        "privilege": "ListTrainingJobsForHyperParameterTuningJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hyper-parameter-tuning-job*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists transform jobs.",
        "privilege": "ListTransformJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists trial components.",
        "privilege": "ListTrialComponents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists trials.",
        "privilege": "ListTrials",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the UserProfiles in your account",
        "privilege": "ListUserProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists workteams.",
        "privilege": "ListWorkteams",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Render a UI template used for a human annotation task.",
        "privilege": "RenderUiTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Search for a training job.",
        "privilege": "Search",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "training-job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a human loop.",
        "privilege": "StartHumanLoop",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "flow-definition*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a monitoring schedule.",
        "privilege": "StartMonitoringSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "monitoring-schedule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Launches an EC2 instance with the latest version of the libraries and attaches your EBS volume.",
        "privilege": "StartNotebookInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notebook-instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a running automl job created via the CreateAutoMLJob.",
        "privilege": "StopAutoMLJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "automl-job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a compilation job.",
        "privilege": "StopCompilationJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "compilation-job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops the specified human loop.",
        "privilege": "StopHumanLoop",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "human-loop*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a running hyper parameter tuning job create via the CreateHyperParameterTuningJob.",
        "privilege": "StopHyperParameterTuningJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hyper-parameter-tuning-job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a labeling job. Any labels already generated will be exported before stopping.",
        "privilege": "StopLabelingJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "labeling-job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a monitoring schedule.",
        "privilege": "StopMonitoringSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "monitoring-schedule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Terminates the EC2 instance. Before terminating the instance, Amazon SageMaker disconnects the EBS volume from it. Amazon SageMaker preserves the EBS volume.",
        "privilege": "StopNotebookInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notebook-instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a processing job. To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds.",
        "privilege": "StopProcessingJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "processing-job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a training job. To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds.",
        "privilege": "StopTrainingJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "training-job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a transform job. When Amazon SageMaker receives a StopTransformJob request, the status of the job changes to Stopping. After Amazon SageMaker stops the job, the status is set to Stopped",
        "privilege": "StopTransformJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "transform-job*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a code repository.",
        "privilege": "UpdateCodeRepository",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "code-repository*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a Domain",
        "privilege": "UpdateDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "sagemaker:VpcSecurityGroupIds",
              "sagemaker:InstanceTypes",
              "sagemaker:DomainSharingOutputKmsKey"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an endpoint to use the endpoint configuration specified in the request.",
        "privilege": "UpdateEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates variant weight, capacity, or both of one or more variants associated with an endpoint.",
        "privilege": "UpdateEndpointWeightsAndCapacities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "endpoint*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an experiment.",
        "privilege": "UpdateExperiment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a monitoring schedule.",
        "privilege": "UpdateMonitoringSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "monitoring-schedule*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys",
              "sagemaker:InstanceTypes",
              "sagemaker:MaxRuntimeInSeconds",
              "sagemaker:NetworkIsolation",
              "sagemaker:OutputKmsKey",
              "sagemaker:VolumeKmsKey",
              "sagemaker:VpcSecurityGroupIds",
              "sagemaker:VpcSubnets"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a notebook instance. Notebook instance updates include upgrading or downgrading the EC2 instance used for your notebook instance to accommodate changes in your workload requirements. You can also update the VPC security groups.",
        "privilege": "UpdateNotebookInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notebook-instance*"
          },
          {
            "condition_keys": [
              "sagemaker:AcceleratorTypes",
              "sagemaker:InstanceTypes",
              "sagemaker:RootAccess"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a notebook instance lifecycle configuration created with the CreateNotebookInstanceLifecycleConfig API.",
        "privilege": "UpdateNotebookInstanceLifecycleConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "notebook-instance-lifecycle-config*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a trial.",
        "privilege": "UpdateTrial",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a trial component.",
        "privilege": "UpdateTrialComponent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "experiment-trial-component*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a UserProfile",
        "privilege": "UpdateUserProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user-profile*"
          },
          {
            "condition_keys": [
              "sagemaker:InstanceTypes",
              "sagemaker:VpcSecurityGroupIds",
              "sagemaker:InstanceTypes",
              "sagemaker:DomainSharingOutputKmsKey"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a workforce.",
        "privilege": "UpdateWorkforce",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workforce*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a workteam.",
        "privilege": "UpdateWorkteam",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workteam*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:human-loop/${HumanLoopName}",
        "condition_keys": [],
        "resource": "human-loop"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:flow-definition/${FlowDefinitionName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "flow-definition"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:human-task-ui/${HumanTaskUiName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "human-task-ui"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:labeling-job/${LabelingJobName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "labeling-job"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:workteam/${WorkteamName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "workteam"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:workforce/${WorkforceName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "workforce"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:domain/${DomainId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "domain"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:user-profile/${DomainId}/${UserProfileName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "user-profile"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:app/${DomainId}/${UserProfileName}/${AppType}/${AppName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "app"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:notebook-instance/${NotebookInstanceName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "notebook-instance"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:notebook-instance-lifecycle-config/${NotebookInstanceLifecycleConfigName}",
        "condition_keys": [],
        "resource": "notebook-instance-lifecycle-config"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:code-repository/${CodeRepositoryName}",
        "condition_keys": [],
        "resource": "code-repository"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:algorithm/${AlgorithmName}",
        "condition_keys": [],
        "resource": "algorithm"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:training-job/${TrainingJobName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "training-job"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:processing-job/${ProcessingJobName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "processing-job"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:hyper-parameter-tuning-job/${HyperParameterTuningJobName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "hyper-parameter-tuning-job"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:model-package/${ModelPackageName}",
        "condition_keys": [],
        "resource": "model-package"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:model/${ModelName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "model"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:endpoint-config/${EndpointConfigName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "endpoint-config"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:endpoint/${EndpointName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "endpoint"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:transform-job/${TransformJobName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "transform-job"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:compilation-job/${CompilationJobName}",
        "condition_keys": [],
        "resource": "compilation-job"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:automl-job/${AutoMLJobJobName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "automl-job"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:monitoring-schedule/${MonitoringScheduleName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "monitoring-schedule"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:experiment/${ExperimentName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "experiment"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:experiment-trial/${TrialName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "experiment-trial"
      },
      {
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:experiment-trial-component/${TrialComponentName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "sagemaker:ResourceTag/${TagKey}"
        ],
        "resource": "experiment-trial-component"
      }
    ],
    "service_name": "Amazon SageMaker"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value assoicated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of mandatory tags in the request",
        "type": "String"
      }
    ],
    "prefix": "savingsplans",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to create a savings plan",
        "privilege": "CreateSavingsPlan",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe the rates associated with customers savings plan",
        "privilege": "DescribeSavingsPlanRates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "savingsplan*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe the savings plans associated with customers account",
        "privilege": "DescribeSavingsPlans",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "savingsplan*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe the rates assciated with savings plans offerings",
        "privilege": "DescribeSavingsPlansOfferingRates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe the savings plans offerings that customer is eligible to purchase",
        "privilege": "DescribeSavingsPlansOfferings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list tags for a savings plan",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "savingsplan*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to tag a savings plan",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "savingsplan*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to untag a savings plan",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "savingsplan*"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:savingsplans::${Account}:savingsplan/${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "savingsplan"
      }
    ],
    "service_name": "AWS Savings Plans"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value associated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of mandatory tags in the request",
        "type": "String"
      }
    ],
    "prefix": "schemas",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates an event schema discoverer. Once created, your events will be automatically map into corresponding schema documents",
        "privilege": "CreateDiscoverer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "discoverer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new schema registry in your account.",
        "privilege": "CreateRegistry",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "registry*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new schema in your account.",
        "privilege": "CreateSchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes discoverer in your account.",
        "privilege": "DeleteDiscoverer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "discoverer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing registry in your account.",
        "privilege": "DeleteRegistry",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "registry*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the resource-based policy attached to a given registry.",
        "privilege": "DeleteResourcePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "registry*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing schema in your account.",
        "privilege": "DeleteSchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specific version of schema in your account.",
        "privilege": "DeleteSchemaVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves metadata for generated code for specific schema in your account.",
        "privilege": "DescribeCodeBinding",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves discoverer metadata in your account.",
        "privilege": "DescribeDiscoverer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "discoverer*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an existing registry metadata in your account.",
        "privilege": "DescribeRegistry",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "registry*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves an existing schema in your account.",
        "privilege": "DescribeSchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves metadata for generated code for specific schema in your account.",
        "privilege": "GetCodeBindingSource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves schema for the provided list of sample events.",
        "privilege": "GetDiscoveredSchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the resource-based policy attached to a given registry.",
        "privilege": "GetResourcePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "registry*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the discoverers in your account.",
        "privilege": "ListDiscoverers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "discoverer*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all discoverers in your account.",
        "privilege": "ListRegistries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "registry*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all versions of a schema.",
        "privilege": "ListSchemaVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all schemas.",
        "privilege": "ListSchemas",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "This action lists tags for a resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "discoverer*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "registry*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Generates code for specific schema in your account.",
        "privilege": "PutCodeBinding",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Attach resource-based policy to the specific registry.",
        "privilege": "PutResourcePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "registry*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Searches schemas based on specified keywords in your account.",
        "privilege": "SearchSchemas",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts the specified discoverer. Once started the discoverer will automatically register schemas for published events to configured source in your account",
        "privilege": "StartDiscoverer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "discoverer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts the specified discoverer. Once started the discoverer will automatically register schemas for published events to configured source in your account",
        "privilege": "StopDiscoverer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "discoverer*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action tags an resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "discoverer*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "registry*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action removes a tag from on a resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "discoverer*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "registry*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing discoverer in your account.",
        "privilege": "UpdateDiscoverer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "discoverer*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing registry metadata in your account.",
        "privilege": "UpdateRegistry",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "registry*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing schema in your account.",
        "privilege": "UpdateSchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "schema*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:schemas:${Region}:${Account}:discoverer/${DiscovererId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "discoverer"
      },
      {
        "arn": "arn:${Partition}:schemas:${Region}:${Account}:registry/${RegistryName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "registry"
      },
      {
        "arn": "arn:${Partition}:schemas:${Region}:${Account}:schema/${RegistryName}/${SchemaName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "schema"
      }
    ],
    "service_name": "Amazon EventBridge Schemas"
  },
  {
    "conditions": [],
    "prefix": "sdb",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Performs multiple DeleteAttributes operations in a single call, which reduces round trips and latencies.",
        "privilege": "BatchDeleteAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "With the BatchPutAttributes operation, you can perform multiple PutAttribute operations in a single call. With the BatchPutAttributes operation, you can perform multiple PutAttribute operations in a single call.",
        "privilege": "BatchPutAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The CreateDomain operation creates a new domain.",
        "privilege": "CreateDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes one or more attributes associated with the item.",
        "privilege": "DeleteAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The DeleteDomain operation deletes a domain.",
        "privilege": "DeleteDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the domain, including when the domain was created, the number of items and attributes, and the size of attribute names and values.",
        "privilege": "DomainMetadata",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns all of the attributes associated with the item.",
        "privilege": "GetAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Description for ListDomains",
        "privilege": "ListDomains",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "The PutAttributes operation creates or replaces attributes in an item.",
        "privilege": "PutAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Description for Select",
        "privilege": "Select",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:sdb:${Region}:${Account}:domain/${DomainName}",
        "condition_keys": [],
        "resource": "domain"
      }
    ],
    "service_name": "Amazon SimpleDB"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/tag-key",
        "description": "Filters access by a key that is present in the request the user makes to the Secrets Manager service.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters access by the list of all the tag key namespresent in the request the user makes to the Secrets Manager service.",
        "type": "String"
      },
      {
        "condition": "secretsmanager:Description",
        "description": "Filters access by the description text in the request.",
        "type": "String"
      },
      {
        "condition": "secretsmanager:ForceDeleteWithoutRecovery",
        "description": "Filters access by whether the secret is to be deleted immediately without any recovery window.",
        "type": "Boolean"
      },
      {
        "condition": "secretsmanager:KmsKeyId",
        "description": "Filters access by the ARN of the KMS key in the request.",
        "type": "String"
      },
      {
        "condition": "secretsmanager:Name",
        "description": "Filters access by the friendly name of the secret in the request.",
        "type": "String"
      },
      {
        "condition": "secretsmanager:RecoveryWindowInDays",
        "description": "Filters access by the number of days that Secrets Manager waits before it can delete the secret.",
        "type": "Long"
      },
      {
        "condition": "secretsmanager:ResourceTag/tag-key",
        "description": "Filters access by a tag key and value pair.",
        "type": "String"
      },
      {
        "condition": "secretsmanager:RotationLambdaARN",
        "description": "Filters access by the ARN of the rotation Lambda function in the request.",
        "type": "ARN"
      },
      {
        "condition": "secretsmanager:SecretId",
        "description": "Filters access by the SecretID value in the request.",
        "type": "ARN"
      },
      {
        "condition": "secretsmanager:VersionId",
        "description": "Filters access by the unique identifier of the version of the secret in the request.",
        "type": "String"
      },
      {
        "condition": "secretsmanager:VersionStage",
        "description": "Filters access by the list of version stages in the request.",
        "type": "String"
      },
      {
        "condition": "secretsmanager:resource/AllowRotationLambdaArn",
        "description": "Filters access by the ARN of the rotation Lambda function associated with the secret.",
        "type": "ARN"
      }
    ],
    "prefix": "secretsmanager",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Enables the user to cancel an in-progress secret rotation.",
        "privilege": "CancelRotateSecret",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Secret*"
          },
          {
            "condition_keys": [
              "secretsmanager:SecretId",
              "secretsmanager:resource/AllowRotationLambdaArn",
              "secretsmanager:ResourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Enables the user to create a secret that stores encrypted data that can be queried and rotated.",
        "privilege": "CreateSecret",
        "resource_types": [
          {
            "condition_keys": [
              "secretsmanager:Name",
              "secretsmanager:Description",
              "secretsmanager:KmsKeyId",
              "aws:RequestTag/tag-key",
              "aws:TagKeys",
              "secretsmanager:ResourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Enables the user to delete the resource policy attached to a secret.",
        "privilege": "DeleteResourcePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Secret*"
          },
          {
            "condition_keys": [
              "secretsmanager:SecretId",
              "secretsmanager:resource/AllowRotationLambdaArn",
              "secretsmanager:ResourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to delete a secret.",
        "privilege": "DeleteSecret",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Secret*"
          },
          {
            "condition_keys": [
              "secretsmanager:SecretId",
              "secretsmanager:resource/AllowRotationLambdaArn",
              "secretsmanager:RecoveryWindowInDays",
              "secretsmanager:ForceDeleteWithoutRecovery",
              "secretsmanager:ResourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Enables the user to retrieve the metadata about a secret, but not the encrypted data.",
        "privilege": "DescribeSecret",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Secret*"
          },
          {
            "condition_keys": [
              "secretsmanager:SecretId",
              "secretsmanager:resource/AllowRotationLambdaArn",
              "secretsmanager:ResourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Enables the user to generate a random string for use in password creation.",
        "privilege": "GetRandomPassword",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Enables the user to get the resource policy attached to a secret.",
        "privilege": "GetResourcePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Secret*"
          },
          {
            "condition_keys": [
              "secretsmanager:SecretId",
              "secretsmanager:resource/AllowRotationLambdaArn",
              "secretsmanager:ResourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Enables the user to retrieve and decrypt the encrypted data.",
        "privilege": "GetSecretValue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Secret*"
          },
          {
            "condition_keys": [
              "secretsmanager:SecretId",
              "secretsmanager:VersionId",
              "secretsmanager:VersionStage",
              "secretsmanager:resource/AllowRotationLambdaArn",
              "secretsmanager:ResourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Enables the user to list the available versions of a secret.",
        "privilege": "ListSecretVersionIds",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Secret*"
          },
          {
            "condition_keys": [
              "secretsmanager:SecretId",
              "secretsmanager:resource/AllowRotationLambdaArn",
              "secretsmanager:ResourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Enables the user to list the available secrets.",
        "privilege": "ListSecrets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Enables the user to attach a resource policy to a secret.",
        "privilege": "PutResourcePolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Secret*"
          },
          {
            "condition_keys": [
              "secretsmanager:SecretId",
              "secretsmanager:resource/AllowRotationLambdaArn",
              "secretsmanager:ResourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to create a new version of the secret with new encrypted data.",
        "privilege": "PutSecretValue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Secret*"
          },
          {
            "condition_keys": [
              "secretsmanager:SecretId",
              "secretsmanager:resource/AllowRotationLambdaArn",
              "secretsmanager:ResourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to cancel deletion of a secret.",
        "privilege": "RestoreSecret",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Secret*"
          },
          {
            "condition_keys": [
              "secretsmanager:SecretId",
              "secretsmanager:resource/AllowRotationLambdaArn",
              "secretsmanager:ResourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to start rotation of a secret.",
        "privilege": "RotateSecret",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Secret*"
          },
          {
            "condition_keys": [
              "secretsmanager:SecretId",
              "secretsmanager:RotationLambdaARN",
              "secretsmanager:resource/AllowRotationLambdaArn",
              "secretsmanager:ResourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Enables the user to add tags to a secret.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Secret*"
          },
          {
            "condition_keys": [
              "secretsmanager:SecretId",
              "aws:RequestTag/tag-key",
              "aws:TagKeys",
              "secretsmanager:resource/AllowRotationLambdaArn",
              "secretsmanager:ResourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Enables the user to remove tags from a secret.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Secret*"
          },
          {
            "condition_keys": [
              "secretsmanager:SecretId",
              "aws:TagKeys",
              "secretsmanager:resource/AllowRotationLambdaArn",
              "secretsmanager:ResourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to update a secret with new metadata or with a new version of the encrypted data.",
        "privilege": "UpdateSecret",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Secret*"
          },
          {
            "condition_keys": [
              "secretsmanager:SecretId",
              "secretsmanager:Description",
              "secretsmanager:KmsKeyId",
              "secretsmanager:resource/AllowRotationLambdaArn",
              "secretsmanager:ResourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the user to move a stage from one secret to another.",
        "privilege": "UpdateSecretVersionStage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Secret*"
          },
          {
            "condition_keys": [
              "secretsmanager:SecretId",
              "secretsmanager:VersionStage",
              "secretsmanager:resource/AllowRotationLambdaArn",
              "secretsmanager:ResourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}",
        "condition_keys": [
          "aws:RequestTag/tag-key",
          "aws:TagKeys",
          "secretsmanager:ResourceTag/tag-key",
          "secretsmanager:resource/AllowRotationLambdaArn"
        ],
        "resource": "Secret"
      }
    ],
    "service_name": "AWS Secrets Manager"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      },
      {
        "condition": "securityhub:TargetAccount",
        "description": "The ID of the AWS account into which you want to import findings. In the AWS Security Finding format, this field is called AwsAccountId",
        "type": "String"
      }
    ],
    "prefix": "securityhub",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to accept Security Hub invitations to become a member account",
        "privilege": "AcceptInvitation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable standards in Security Hub",
        "privilege": "BatchDisableStandards",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "standards-subscription*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable standards in Security Hub",
        "privilege": "BatchEnableStandards",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "standard*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to import findings into Security Hub from an integrated product",
        "privilege": "BatchImportFindings",
        "resource_types": [
          {
            "condition_keys": [
              "securityhub:TargetAccount"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update customer-controlled fields for a selected set of Security Hub findings",
        "privilege": "BatchUpdateFindings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create custom actions in Security Hub",
        "privilege": "CreateActionTarget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create insights in Security Hub. Insights are collections of related findings",
        "privilege": "CreateInsight",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create member accounts in Security Hub",
        "privilege": "CreateMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to decline Security Hub invitations to become a member account",
        "privilege": "DeclineInvitations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete custom actions in Security Hub",
        "privilege": "DeleteActionTarget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "action-target*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete insights from Security Hub",
        "privilege": "DeleteInsight",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "insight*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete Security Hub invitations to become a member account",
        "privilege": "DeleteInvitations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete Security Hub member accounts",
        "privilege": "DeleteMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of custom actions using the API",
        "privilege": "DescribeActionTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about the hub resource in your account",
        "privilege": "DescribeHub",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about the available Security Hub product integrations",
        "privilege": "DescribeProducts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about Security Hub standards",
        "privilege": "DescribeStandards",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hub*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve information about Security Hub standards controls",
        "privilege": "DescribeStandardsControls",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hub*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable the findings importing for a Security Hub integrated product",
        "privilege": "DisableImportFindingsForProduct",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "product*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disable Security Hub",
        "privilege": "DisableSecurityHub",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to a Security Hub member account to disassociate from the associated master account",
        "privilege": "DisassociateFromMasterAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate Security Hub member accounts from the associated master account",
        "privilege": "DisassociateMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable the findings importing for a Security Hub integrated product",
        "privilege": "EnableImportFindingsForProduct",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "product*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enable Security Hub",
        "privilege": "EnableSecurityHub",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve a list of the standards that are enabled in Security Hub",
        "privilege": "GetEnabledStandards",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve a list of findings from Security Hub",
        "privilege": "GetFindings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve insight results from Security Hub",
        "privilege": "GetInsightResults",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "insight*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve Security Hub insights",
        "privilege": "GetInsights",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "insight*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the count of Security Hub membership invitations sent to the account",
        "privilege": "GetInvitationsCount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve details about the Security Hub master account",
        "privilege": "GetMasterAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the details of Security Hub member accounts",
        "privilege": "GetMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to invite other AWS accounts to become Security Hub member accounts",
        "privilege": "InviteMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve the Security Hub integrated products that are currently enabled",
        "privilege": "ListEnabledProductsForImport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve the Security Hub invitations sent to the account",
        "privilege": "ListInvitations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve details about Security Hub member accounts associated with the master account",
        "privilege": "ListMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list of tags associated with a resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hub*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add tags to a Security Hub resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hub*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove tags from a Security Hub resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hub*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update custom actions in Security Hub",
        "privilege": "UpdateActionTarget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "action-target*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update Security Hub findings",
        "privilege": "UpdateFindings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update insights in Security Hub",
        "privilege": "UpdateInsight",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "insight*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update Security Hub standards controls",
        "privilege": "UpdateStandardsControl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "hub*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:securityhub:${Region}:${Account}:insight/${CompanyId}/${ProductId}/${UniqueId}",
        "condition_keys": [],
        "resource": "insight"
      },
      {
        "arn": "arn:${Partition}:securityhub:::ruleset/${StandardsName}/v/${StandardsVersion}",
        "condition_keys": [],
        "resource": "standard"
      },
      {
        "arn": "arn:${Partition}:securityhub:${Region}:${Account}:subscription/${StandardsName}/v/${StandardsVersion}",
        "condition_keys": [],
        "resource": "standards-subscription"
      },
      {
        "arn": "arn:${Partition}:securityhub:${Region}:${Account}:product-subscription/${Company}/${ProductId}",
        "condition_keys": [],
        "resource": "product-subscription"
      },
      {
        "arn": "arn:${Partition}:securityhub:${Region}:${Account}:product/${Company}/${ProductId}",
        "condition_keys": [],
        "resource": "product"
      },
      {
        "arn": "arn:${Partition}:securityhub:${Region}:${Account}:hub/default",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "hub"
      },
      {
        "arn": "arn:${Partition}:securityhub:${Region}:${Account}:action/custom/${Id}",
        "condition_keys": [],
        "resource": "action-target"
      }
    ],
    "service_name": "AWS Security Hub"
  },
  {
    "conditions": [
      {
        "condition": "serverlessrepo:applicationType",
        "description": "Application type",
        "type": "String"
      }
    ],
    "prefix": "serverlessrepo",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates an application, optionally including an AWS SAM file to create the first application version in the same call.",
        "privilege": "CreateApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an application version.",
        "privilege": "CreateApplicationVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "applications*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an AWS CloudFormation ChangeSet for the given application.",
        "privilege": "CreateCloudFormationChangeSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "applications*"
          },
          {
            "condition_keys": [
              "serverlessrepo:applicationType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an AWS CloudFormation template",
        "privilege": "CreateCloudFormationTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "applications*"
          },
          {
            "condition_keys": [
              "serverlessrepo:applicationType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified application",
        "privilege": "DeleteApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "applications*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the specified application.",
        "privilege": "GetApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "applications*"
          },
          {
            "condition_keys": [
              "serverlessrepo:applicationType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the policy for the specified application.",
        "privilege": "GetApplicationPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "applications*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the specified AWS CloudFormation template",
        "privilege": "GetCloudFormationTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "applications*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves the list of applications nested in the containing application",
        "privilege": "ListApplicationDependencies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "applications*"
          },
          {
            "condition_keys": [
              "serverlessrepo:applicationType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists versions for the specified application owned by the requester.",
        "privilege": "ListApplicationVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "applications*"
          },
          {
            "condition_keys": [
              "serverlessrepo:applicationType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists applications owned by the requester.",
        "privilege": "ListApplications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Puts the policy for the specified application.",
        "privilege": "PutApplicationPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "applications*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets all applications authorized for this user",
        "privilege": "SearchApplications",
        "resource_types": [
          {
            "condition_keys": [
              "serverlessrepo:applicationType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Unshares the specified application",
        "privilege": "UnshareApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "applications*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates meta-data of the application",
        "privilege": "UpdateApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "applications*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:serverlessrepo:${Region}:${Account}:applications/${ResourceId}",
        "condition_keys": [],
        "resource": "applications"
      }
    ],
    "service_name": "AWS Serverless Application Repository"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      },
      {
        "condition": "servicecatalog:accountLevel",
        "description": "Allows users to see and perform actions on resources created by anyone in the account.",
        "type": "String"
      },
      {
        "condition": "servicecatalog:roleLevel",
        "description": "Allows users to see and perform actions on resources created either by them or by anyone federating into the same role as them.",
        "type": "String"
      },
      {
        "condition": "servicecatalog:userLevel",
        "description": "Allows users to see and perform actions on only resources that they created.",
        "type": "String"
      }
    ],
    "prefix": "servicecatalog",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Accepts a portfolio that has been shared with you",
        "privilege": "AcceptPortfolioShare",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Portfolio*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates a budget with a resource.",
        "privilege": "AssociateBudgetWithResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates an IAM principal with a portfolio, giving the specified principal access to any products associated with the specified portfolio",
        "privilege": "AssociatePrincipalWithPortfolio",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Portfolio*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates a product with a portfolio",
        "privilege": "AssociateProductWithPortfolio",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates an action with a provisioning artifact",
        "privilege": "AssociateServiceActionWithProvisioningArtifact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associate the specified TagOption with the specified portfolio or product",
        "privilege": "AssociateTagOptionWithResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Portfolio"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates multiple self-service actions with provisioning artifacts.",
        "privilege": "BatchAssociateServiceActionWithProvisioningArtifact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates a batch of self-service actions from the specified provisioning artifact.",
        "privilege": "BatchDisassociateServiceActionFromProvisioningArtifact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Copies the specified source product to the specified target product or a new product.",
        "privilege": "CopyProduct",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a constraint on an associated product and portfolio",
        "privilege": "CreateConstraint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a portfolio",
        "privilege": "CreatePortfolio",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Portfolio*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Shares a portfolio you own with another AWS account",
        "privilege": "CreatePortfolioShare",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Portfolio*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a product and that product's first provisioning artifact",
        "privilege": "CreateProduct",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds a new provisioned product plan",
        "privilege": "CreateProvisionedProductPlan",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds a new provisioning artifact to an existing product",
        "privilege": "CreateProvisioningArtifact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a self-service action.",
        "privilege": "CreateServiceAction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a TagOption.",
        "privilege": "CreateTagOption",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes and deletes an existing constraint from an associated product and portfolio",
        "privilege": "DeleteConstraint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a portfolio if all associations and shares have been removed from the portfolio",
        "privilege": "DeletePortfolio",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Portfolio*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Unshares a portfolio you own from an AWS account you previously shared the portfolio with",
        "privilege": "DeletePortfolioShare",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Portfolio*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a product if all associations have been removed from the product",
        "privilege": "DeleteProduct",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a provisioned product plan",
        "privilege": "DeleteProvisionedProductPlan",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a provisioning artifact from a product",
        "privilege": "DeleteProvisioningArtifact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a self-service action.",
        "privilege": "DeleteServiceAction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified TagOption.",
        "privilege": "DeleteTagOption",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a constraint",
        "privilege": "DescribeConstraint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the status of the specified copy product operation.",
        "privilege": "DescribeCopyProductStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a portfolio",
        "privilege": "DescribePortfolio",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Portfolio*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the status of the specified portfolio share operation.",
        "privilege": "DescribePortfolioShareStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a product as an end-user",
        "privilege": "DescribeProduct",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a product as an admin",
        "privilege": "DescribeProductAsAdmin",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a product as an end-user",
        "privilege": "DescribeProductView",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a provisioned product",
        "privilege": "DescribeProvisionedProduct",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a provisioned product plan",
        "privilege": "DescribeProvisionedProductPlan",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a provisioning artifact",
        "privilege": "DescribeProvisioningArtifact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the parameters that you need to specify to successfully provision a specified provisioning artifact",
        "privilege": "DescribeProvisioningParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a record and lists any outputs",
        "privilege": "DescribeRecord",
        "resource_types": [
          {
            "condition_keys": [
              "servicecatalog:accountLevel",
              "servicecatalog:roleLevel",
              "servicecatalog:userLevel"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a self-service action.",
        "privilege": "DescribeServiceAction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the default parameters if you executed the specified Service Action on the specified Provisioned Product.",
        "privilege": "DescribeServiceActionExecutionParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about the specified TagOption.",
        "privilege": "DescribeTagOption",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disable portfolio sharing through AWS Organizations feature.",
        "privilege": "DisableAWSOrganizationsAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates a budget from a resource.",
        "privilege": "DisassociateBudgetFromResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates an IAM principal from a portfolio.",
        "privilege": "DisassociatePrincipalFromPortfolio",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Portfolio*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates a product from a portfolio",
        "privilege": "DisassociateProductFromPortfolio",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates the specified self-service action association from the specified provisioning artifact.",
        "privilege": "DisassociateServiceActionFromProvisioningArtifact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates the specified TagOption from the specified resource.",
        "privilege": "DisassociateTagOptionFromResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Portfolio"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enable portfolio sharing feature through AWS Organizations.",
        "privilege": "EnableAWSOrganizationsAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Executes a provisioned product plan",
        "privilege": "ExecuteProvisionedProductPlan",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Executes a provisioned product plan",
        "privilege": "ExecuteProvisionedProductServiceAction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the Access Status for AWS Organization portfolio share feature.",
        "privilege": "GetAWSOrganizationsAccessStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the portfolios that have been shared with you and you have accepted",
        "privilege": "ListAcceptedPortfolioShares",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the budgets associated to a resource.",
        "privilege": "ListBudgetsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists constraints associated with a given portfolio",
        "privilege": "ListConstraintsForPortfolio",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the different ways to launch a given product as an end-user",
        "privilege": "ListLaunchPaths",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the organization nodes that have access to the specified portfolio.",
        "privilege": "ListOrganizationPortfolioAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the AWS accounts you have shared a given portfolio with",
        "privilege": "ListPortfolioAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Portfolio*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the portfolios in your account",
        "privilege": "ListPortfolios",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the portfolios associated with a given product",
        "privilege": "ListPortfoliosForProduct",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the IAM principals associated with a given portfolio",
        "privilege": "ListPrincipalsForPortfolio",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Portfolio*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the provisioned product plans",
        "privilege": "ListProvisionedProductPlans",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the provisioning artifacts associated with a given product",
        "privilege": "ListProvisioningArtifacts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all provisioning artifacts for the specified self-service action.",
        "privilege": "ListProvisioningArtifactsForServiceAction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the records in your account or all the records related to a given provisioned product",
        "privilege": "ListRecordHistory",
        "resource_types": [
          {
            "condition_keys": [
              "servicecatalog:accountLevel",
              "servicecatalog:roleLevel",
              "servicecatalog:userLevel"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the resources associated with the specified TagOption.",
        "privilege": "ListResourcesForTagOption",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all self-service actions.",
        "privilege": "ListServiceActions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the service actions associated with the specified provisioning artifact in your account",
        "privilege": "ListServiceActionsForProvisioningArtifact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists account, region and status of each stack instances that are associated with a CFN_STACKSET type provisioned product",
        "privilege": "ListStackInstancesForProvisionedProduct",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the specified TagOptions or all TagOptions.",
        "privilege": "ListTagOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Provisions a product with a specified provisioning artifact and launch parameters",
        "privilege": "ProvisionProduct",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Rejects a portfolio that has been shared with you that you previously accepted",
        "privilege": "RejectPortfolioShare",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Portfolio*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the provisioned products in your account",
        "privilege": "ScanProvisionedProducts",
        "resource_types": [
          {
            "condition_keys": [
              "servicecatalog:accountLevel",
              "servicecatalog:roleLevel",
              "servicecatalog:userLevel"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the products available to you as an end-user",
        "privilege": "SearchProducts",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the products in your account or all the products associated with a given portfolio",
        "privilege": "SearchProductsAsAdmin",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all the provisioned products in your account",
        "privilege": "SearchProvisionedProducts",
        "resource_types": [
          {
            "condition_keys": [
              "servicecatalog:accountLevel",
              "servicecatalog:roleLevel",
              "servicecatalog:userLevel"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Terminates an existing provisioned product",
        "privilege": "TerminateProvisionedProduct",
        "resource_types": [
          {
            "condition_keys": [
              "servicecatalog:accountLevel",
              "servicecatalog:roleLevel",
              "servicecatalog:userLevel"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the metadata fields of an existing constraint",
        "privilege": "UpdateConstraint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the metadata fields and/or tags of an existing portfolio",
        "privilege": "UpdatePortfolio",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Portfolio*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the metadata fields and/or tags of an existing product",
        "privilege": "UpdateProduct",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing provisioned product",
        "privilege": "UpdateProvisionedProduct",
        "resource_types": [
          {
            "condition_keys": [
              "servicecatalog:accountLevel",
              "servicecatalog:roleLevel",
              "servicecatalog:userLevel"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the properties of an existing provisioned product",
        "privilege": "UpdateProvisionedProductProperties",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the metadata fields of an existing provisioning artifact",
        "privilege": "UpdateProvisioningArtifact",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "Product*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a self-service action.",
        "privilege": "UpdateServiceAction",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the specified TagOption.",
        "privilege": "UpdateTagOption",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:catalog:${Region}:${Account}:portfolio/${PortfolioId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "Portfolio"
      },
      {
        "arn": "arn:${Partition}:catalog:${Region}:${Account}:product/${ProductId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "Product"
      }
    ],
    "service_name": "AWS Service Catalog"
  },
  {
    "conditions": [
      {
        "condition": "servicediscovery:NamespaceArn",
        "description": "A filter that lets you get objects by specifying the Amazon Resource Name (ARN) for the related namespace.",
        "type": "String"
      },
      {
        "condition": "servicediscovery:NamespaceName",
        "description": "A filter that lets you get objects by specifying the name of the related namespace.",
        "type": "String"
      },
      {
        "condition": "servicediscovery:ServiceArn",
        "description": "A filter that lets you get objects by specifying the Amazon Resource Name (ARN) for the related service.",
        "type": "String"
      },
      {
        "condition": "servicediscovery:ServiceName",
        "description": "A filter that lets you get objects by specifying the name of the related service.",
        "type": "String"
      }
    ],
    "prefix": "servicediscovery",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates an HTTP namespace.",
        "privilege": "CreateHttpNamespace",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a private namespace based on DNS, which will be visible only inside a specified Amazon VPC.",
        "privilege": "CreatePrivateDnsNamespace",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a public namespace based on DNS, which will be visible on the internet.",
        "privilege": "CreatePublicDnsNamespace",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a service.",
        "privilege": "CreateService",
        "resource_types": [
          {
            "condition_keys": [
              "servicediscovery:NamespaceArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specified namespace.",
        "privilege": "DeleteNamespace",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "namespace*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a specified service.",
        "privilege": "DeleteService",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "service*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the records and the health check, if any, that Amazon Route 53 created for the specified instance.",
        "privilege": "DeregisterInstance",
        "resource_types": [
          {
            "condition_keys": [
              "servicediscovery:ServiceArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Discovers registered instances for a specified namespace and service.",
        "privilege": "DiscoverInstances",
        "resource_types": [
          {
            "condition_keys": [
              "servicediscovery:NamespaceName",
              "servicediscovery:ServiceName"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about a specified instance.",
        "privilege": "GetInstance",
        "resource_types": [
          {
            "condition_keys": [
              "servicediscovery:ServiceArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the current health status (Healthy, Unhealthy, or Unknown) of one or more instances.",
        "privilege": "GetInstancesHealthStatus",
        "resource_types": [
          {
            "condition_keys": [
              "servicediscovery:ServiceArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about a namespace.",
        "privilege": "GetNamespace",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "namespace*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about a specific operation.",
        "privilege": "GetOperation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the settings for a specified service.",
        "privilege": "GetService",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "service*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets summary information about the instances that were registered with a specified service.",
        "privilege": "ListInstances",
        "resource_types": [
          {
            "condition_keys": [
              "servicediscovery:ServiceArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets information about the namespaces.",
        "privilege": "ListNamespaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists operations that match the criteria that you specify.",
        "privilege": "ListOperations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Gets settings for all the services that match specified filters.",
        "privilege": "ListServices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers an instance based on the settings in a specified service.",
        "privilege": "RegisterInstance",
        "resource_types": [
          {
            "condition_keys": [
              "servicediscovery:ServiceArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the current health status for an instance that has a custom health check.",
        "privilege": "UpdateInstanceCustomHealthStatus",
        "resource_types": [
          {
            "condition_keys": [
              "servicediscovery:ServiceArn"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the settings in a specified service.",
        "privilege": "UpdateService",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "service*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:servicediscovery:${Region}:${Account}:namespace/${NamespaceId}",
        "condition_keys": [],
        "resource": "namespace"
      },
      {
        "arn": "arn:${Partition}:servicediscovery:${Region}:${Account}:service/${ServiceId}",
        "condition_keys": [],
        "resource": "service"
      }
    ],
    "service_name": "AWS Cloud Map"
  },
  {
    "conditions": [
      {
        "condition": "servicequotas:service",
        "description": "Filters or restricts access to a specified AWS service",
        "type": "string"
      }
    ],
    "prefix": "servicequotas",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to associate the Service Quotas template with your organization",
        "privilege": "AssociateServiceQuotaTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove the specified service quota from the service quota template",
        "privilege": "DeleteServiceQuotaIncreaseRequestFromTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate the Service Quotas template from your organization",
        "privilege": "DisassociateServiceQuotaTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return the details for the specified service quota, including the AWS default value",
        "privilege": "GetAWSDefaultServiceQuota",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the ServiceQuotaTemplateAssociationStatus value, which tells you if the Service Quotas template is associated with an organization",
        "privilege": "GetAssociationForServiceQuotaTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the details for a particular service quota increase request",
        "privilege": "GetRequestedServiceQuotaChange",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return the details for the specified service quota, including the applied value",
        "privilege": "GetServiceQuota",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the details for a service quota increase request from the service quota template",
        "privilege": "GetServiceQuotaIncreaseRequestFromTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list all default service quotas for the specified AWS service",
        "privilege": "ListAWSDefaultServiceQuotas",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to request a list of the changes to quotas for a service",
        "privilege": "ListRequestedServiceQuotaChangeHistory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to request a list of the changes to specific service quotas",
        "privilege": "ListRequestedServiceQuotaChangeHistoryByQuota",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to return a list of the service quota increase requests from the service quota template",
        "privilege": "ListServiceQuotaIncreaseRequestsInTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list all service quotas for the specified AWS service, in that account, in that Region",
        "privilege": "ListServiceQuotas",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list the AWS services available in Service Quotas",
        "privilege": "ListServices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to define and add a quota to the service quota template",
        "privilege": "PutServiceQuotaIncreaseRequestIntoTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "quota"
          },
          {
            "condition_keys": [
              "servicequotas:service"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to submit the request for a service quota increase",
        "privilege": "RequestServiceQuotaIncrease",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "quota"
          },
          {
            "condition_keys": [
              "servicequotas:service"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:servicequotas:${Region}:${Account}:${ServiceCode}/${QuotaCode}",
        "condition_keys": [],
        "resource": "quota"
      }
    ],
    "service_name": "Service Quotas"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      },
      {
        "condition": "ses:FeedbackAddress",
        "description": "The \"Return-Path\" address, which specifies where bounces and complaints are sent by email feedback forwarding.",
        "type": "String"
      },
      {
        "condition": "ses:FromAddress",
        "description": "The \"From\" address of a message.",
        "type": "String"
      },
      {
        "condition": "ses:FromDisplayName",
        "description": "The \"From\" address that is used as the display name of a message.",
        "type": "String"
      },
      {
        "condition": "ses:Recipients",
        "description": "The recipient addresses of a message, which include the \"To\", \"CC\", and \"BCC\" addresses.",
        "type": "String"
      }
    ],
    "prefix": "ses",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Create a configuration set. Configuration sets are groups of rules that you can apply to the emails you send using Amazon Pinpoint",
        "privilege": "CreateConfigurationSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration-set*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create an event destination",
        "privilege": "CreateConfigurationSetEventDestination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration-set*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new pool of dedicated IP addresses",
        "privilege": "CreateDedicatedIpPool",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dedicated-ip-pool*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new predictive inbox placement test.",
        "privilege": "CreateDeliverabilityTestReport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Verifies an email identity for use with Amazon Pinpoint",
        "privilege": "CreateEmailIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an existing configuration set",
        "privilege": "DeleteConfigurationSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration-set*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an event destination",
        "privilege": "DeleteConfigurationSetEventDestination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration-set*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a dedicated IP pool",
        "privilege": "DeleteDedicatedIpPool",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dedicated-ip-pool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an email identity that you previously verified for use with Amazon Pinpoint",
        "privilege": "DeleteEmailIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Obtain information about the email-sending status and capabilities",
        "privilege": "GetAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve a list of the blacklists that your dedicated IP addresses appear on",
        "privilege": "GetBlacklistReports",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get information about an existing configuration set",
        "privilege": "GetConfigurationSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration-set*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve a list of event destinations that are associated with a configuration set",
        "privilege": "GetConfigurationSetEventDestinations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration-set*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get information about a dedicated IP address",
        "privilege": "GetDedicatedIp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "List the dedicated IP addresses that are associated with your Amazon Pinpoint account",
        "privilege": "GetDedicatedIps",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dedicated-ip-pool*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Show the status of the Deliverability dashboard",
        "privilege": "GetDeliverabilityDashboardOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve the results of a predictive inbox placement test",
        "privilege": "GetDeliverabilityTestReport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deliverability-test-report*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve inbox placement and engagement rates for the domains that you use to send email",
        "privilege": "GetDomainStatisticsReport",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Provides information about a specific identity associated with your Amazon Pinpoint account",
        "privilege": "GetEmailIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all of the configuration sets associated with your Amazon Pinpoint account in the current region",
        "privilege": "ListConfigurationSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all of the dedicated IP pools that exist in your Amazon Pinpoint account in the current AWS Region",
        "privilege": "ListDedicatedIpPools",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Show a list of the predictive inbox placement tests that you've performed, regardless of their statuses",
        "privilege": "ListDeliverabilityTestReports",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of all of the email identities that are associated with your Amazon Pinpoint account",
        "privilege": "ListEmailIdentities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve a list of the tags (keys and values) that are associated with a specific resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration-set"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dedicated-ip-pool"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deliverability-test-report"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enable or disable the automatic warm-up feature for dedicated IP addresses",
        "privilege": "PutAccountDedicatedIpWarmupAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enable or disable the ability of your account to send email",
        "privilege": "PutAccountSendingAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associate a configuration set with a dedicated IP pool",
        "privilege": "PutConfigurationSetDeliveryOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration-set*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enable or disable collection of reputation metrics for emails that you send using a particular configuration set in a specific AWS Region",
        "privilege": "PutConfigurationSetReputationOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration-set*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enable or disable email sending for messages that use a particular configuration set in a specific AWS Region",
        "privilege": "PutConfigurationSetSendingOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration-set*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Specify a custom domain to use for open and click tracking elements in email that you send using Amazon Pinpoint",
        "privilege": "PutConfigurationSetTrackingOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration-set*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Move a dedicated IP address to an existing dedicated IP pool",
        "privilege": "PutDedicatedIpInPool",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dedicated-ip-pool*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Put Dedicated IP warm up attributes",
        "privilege": "PutDedicatedIpWarmupAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enable or disable the Deliverability dashboard",
        "privilege": "PutDeliverabilityDashboardOption",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used to enable or disable DKIM authentication for an email identity",
        "privilege": "PutEmailIdentityDkimAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used to enable or disable feedback forwarding for an identity",
        "privilege": "PutEmailIdentityFeedbackAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used to enable or disable the custom Mail-From domain configuration for an email identity",
        "privilege": "PutEmailIdentityMailFromAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sends an email message",
        "privilege": "SendEmail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity*"
          },
          {
            "condition_keys": [
              "ses:FeedbackAddress",
              "ses:FromAddress",
              "ses:FromDisplayName",
              "ses:Recipients"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Add one or more tags (keys and values) to a specified resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration-set"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dedicated-ip-pool"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deliverability-test-report"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Remove one or more tags (keys and values) from a specified resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration-set"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "dedicated-ip-pool"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "deliverability-test-report"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the configuration of an event destination for a configuration set",
        "privilege": "UpdateConfigurationSetEventDestination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "configuration-set*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:ses:${Region}:${Account}:configuration-set/${ConfigurationSetName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "configuration-set"
      },
      {
        "arn": "arn:${Partition}:ses:${Region}:${Account}:dedicated-ip-pool/${CustomVerificationEmailTemplateName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "dedicated-ip-pool"
      },
      {
        "arn": "arn:${Partition}:ses:${Region}:${Account}:deliverability-test-report/${CustomVerificationEmailTemplateName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "deliverability-test-report"
      },
      {
        "arn": "arn:${Partition}:ses:${Region}:${Account}:configuration-set/${ConfigurationSetName}:event-destination/${EventDestinationName}",
        "condition_keys": [],
        "resource": "event-destination"
      },
      {
        "arn": "arn:${Partition}:ses:${Region}:${Account}:identity/${IdentityName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "identity"
      }
    ],
    "service_name": "Amazon Pinpoint Email Service"
  },
  {
    "conditions": [
      {
        "condition": "ses:FeedbackAddress",
        "description": "The \"Return-Path\" address, which specifies where bounces and complaints are sent by email feedback forwarding.",
        "type": "String"
      },
      {
        "condition": "ses:FromAddress",
        "description": "The \"From\" address of a message.",
        "type": "String"
      },
      {
        "condition": "ses:FromDisplayName",
        "description": "The \"From\" address that is used as the display name of a message.",
        "type": "String"
      },
      {
        "condition": "ses:Recipients",
        "description": "The recipient addresses of a message, which include the \"To\", \"CC\", and \"BCC\" addresses.",
        "type": "String"
      }
    ],
    "prefix": "ses",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a receipt rule set by cloning an existing one",
        "privilege": "CloneReceiptRuleSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new configuration set",
        "privilege": "CreateConfigurationSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a configuration set event destination",
        "privilege": "CreateConfigurationSetEventDestination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an association between a configuration set and a custom domain for open and click event tracking",
        "privilege": "CreateConfigurationSetTrackingOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new custom verification email template",
        "privilege": "CreateCustomVerificationEmailTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new IP address filter",
        "privilege": "CreateReceiptFilter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a receipt rule",
        "privilege": "CreateReceiptRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an empty receipt rule set",
        "privilege": "CreateReceiptRuleSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an email template",
        "privilege": "CreateTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the configuration set",
        "privilege": "DeleteConfigurationSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a configuration set event destination",
        "privilege": "DeleteConfigurationSetEventDestination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an association between a configuration set and a custom domain for open and click event tracking",
        "privilege": "DeleteConfigurationSetTrackingOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing custom verification email template",
        "privilege": "DeleteCustomVerificationEmailTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified identity (an email address or a domain) from the list of verified identities",
        "privilege": "DeleteIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified identity (an email address or a domain) from the list of verified identities",
        "privilege": "DeleteIdentityPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified IP address filter",
        "privilege": "DeleteReceiptFilter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified receipt rule",
        "privilege": "DeleteReceiptRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified receipt rule set and all of the receipt rules it contains",
        "privilege": "DeleteReceiptRuleSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an email template",
        "privilege": "DeleteTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified email address from the list of verified addresses",
        "privilege": "DeleteVerifiedEmailAddress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the metadata and receipt rules for the receipt rule set that is currently active",
        "privilege": "DescribeActiveReceiptRuleSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the details of the specified configuration set",
        "privilege": "DescribeConfigurationSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the details of the specified receipt rule",
        "privilege": "DescribeReceiptRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the details of the specified receipt rule set",
        "privilege": "DescribeReceiptRuleSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the email sending status of the Amazon SES account for the current region",
        "privilege": "GetAccountSendingEnabled",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the custom email verification template for the template name you specify",
        "privilege": "GetCustomVerificationEmailTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the current status of Easy DKIM signing for an entity",
        "privilege": "GetIdentityDkimAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the custom MAIL FROM attributes for a list of identities (email addresses and/or domains)",
        "privilege": "GetIdentityMailFromDomainAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Given a list of verified identities (email addresses and/or domains), returns a structure describing identity notification attributes",
        "privilege": "GetIdentityNotificationAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the requested sending authorization policies for the given identity (an email address or a domain)",
        "privilege": "GetIdentityPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Given a list of identities (email addresses and/or domains), returns the verification status and (for domain identities) the verification token for each identity",
        "privilege": "GetIdentityVerificationAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the user's current sending limits",
        "privilege": "GetSendQuota",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the user's sending statistics. The result is a list of data points, representing the last two weeks of sending activity",
        "privilege": "GetSendStatistics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the template object (which includes the Subject line, HTML part and text part) for the template you specify",
        "privilege": "GetTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of the configuration sets associated with your Amazon SES account in the current AWS Region",
        "privilege": "ListConfigurationSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the existing custom verification email templates for your account in the current AWS Region",
        "privilege": "ListCustomVerificationEmailTemplates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list containing all of the identities (email addresses and domains) for your AWS account, regardless of verification status",
        "privilege": "ListIdentities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of sending authorization policies that are attached to the given identity (an email address or a domain)",
        "privilege": "ListIdentityPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the IP address filters associated with your AWS account",
        "privilege": "ListReceiptFilters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the receipt rule sets that exist under your AWS account",
        "privilege": "ListReceiptRuleSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the email templates present in your Amazon SES account in the current AWS Region",
        "privilege": "ListTemplates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list containing all of the email addresses that have been verified",
        "privilege": "ListVerifiedEmailAddresses",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds or updates a sending authorization policy for the specified identity (an email address or a domain)",
        "privilege": "PutIdentityPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Reorders the receipt rules within a receipt rule set",
        "privilege": "ReorderReceiptRuleSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Generates and sends a bounce message to the sender of an email you received through Amazon SES",
        "privilege": "SendBounce",
        "resource_types": [
          {
            "condition_keys": [
              "ses:FromAddress"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Composes an email message to multiple destinations",
        "privilege": "SendBulkTemplatedEmail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity*"
          },
          {
            "condition_keys": [
              "ses:FeedbackAddress",
              "ses:FromAddress",
              "ses:FromDisplayName",
              "ses:Recipients"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds an email address to the list of identities for your Amazon SES account in the current AWS Region and attempts to verify it",
        "privilege": "SendCustomVerificationEmail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity*"
          },
          {
            "condition_keys": [
              "ses:FeedbackAddress",
              "ses:FromAddress",
              "ses:FromDisplayName",
              "ses:Recipients"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Composes an email message based on input data, and then immediately queues the message for sending",
        "privilege": "SendEmail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity*"
          },
          {
            "condition_keys": [
              "ses:FeedbackAddress",
              "ses:FromAddress",
              "ses:FromDisplayName",
              "ses:Recipients"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sends an email message, with header and content specified by the client",
        "privilege": "SendRawEmail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity*"
          },
          {
            "condition_keys": [
              "ses:FeedbackAddress",
              "ses:FromAddress",
              "ses:FromDisplayName",
              "ses:Recipients"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Composes an email message using an email template and immediately queues it for sending",
        "privilege": "SendTemplatedEmail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "identity*"
          },
          {
            "condition_keys": [
              "ses:FeedbackAddress",
              "ses:FromAddress",
              "ses:FromDisplayName",
              "ses:Recipients"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the specified receipt rule set as the active receipt rule set",
        "privilege": "SetActiveReceiptRuleSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables or disables Easy DKIM signing of email sent from an identity",
        "privilege": "SetIdentityDkimEnabled",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Given an identity (an email address or a domain), enables or disables whether Amazon SES forwards bounce and complaint notifications as email",
        "privilege": "SetIdentityFeedbackForwardingEnabled",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Given an identity (an email address or a domain), sets whether Amazon SES includes the original email headers in the Amazon Simple Notification Service (Amazon SNS) notifications of a specified type",
        "privilege": "SetIdentityHeadersInNotificationsEnabled",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables or disables the custom MAIL FROM domain setup for a verified identity (an email address or a domain)",
        "privilege": "SetIdentityMailFromDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Given an identity (an email address or a domain), sets the Amazon Simple Notification Service (Amazon SNS) topic to which Amazon SES will publish bounce, complaint, and/or delivery notifications for emails sent with that identity as the Source",
        "privilege": "SetIdentityNotificationTopic",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the position of the specified receipt rule in the receipt rule set",
        "privilege": "SetReceiptRulePosition",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a preview of the MIME content of an email when provided with a template and a set of replacement data",
        "privilege": "TestRenderTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables or disables email sending across your entire Amazon SES account in the current AWS Region",
        "privilege": "UpdateAccountSendingEnabled",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the event destination of a configuration set",
        "privilege": "UpdateConfigurationSetEventDestination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables or disables the publishing of reputation metrics for emails sent using a specific configuration set in a given AWS Region",
        "privilege": "UpdateConfigurationSetReputationMetricsEnabled",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables or disables email sending for messages sent using a specific configuration set in a given AWS Region",
        "privilege": "UpdateConfigurationSetSendingEnabled",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies an association between a configuration set and a custom domain for open and click event tracking",
        "privilege": "UpdateConfigurationSetTrackingOptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing custom verification email template",
        "privilege": "UpdateCustomVerificationEmailTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a receipt rule",
        "privilege": "UpdateReceiptRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an email template",
        "privilege": "UpdateTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a set of DKIM tokens for a domain",
        "privilege": "VerifyDomainDkim",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Verifies a domain",
        "privilege": "VerifyDomainIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Verifies an email address. This action causes a confirmation email message to be sent to the specified address. This action is throttled at one request per second",
        "privilege": "VerifyEmailAddress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Verifies an email address. This action causes a confirmation email message to be sent to the specified address. This action is throttled at one request per second",
        "privilege": "VerifyEmailIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:ses:${Region}:${Account}:configuration-set/${ConfigurationSetName}",
        "condition_keys": [],
        "resource": "configuration-set"
      },
      {
        "arn": "arn:${Partition}:ses:${Region}:${Account}:custom-verification-email-template/${CustomVerificationEmailTemplateName}",
        "condition_keys": [],
        "resource": "custom-verification-email-template"
      },
      {
        "arn": "arn:${Partition}:ses:${Region}:${Account}:configuration-set/${ConfigurationSetName}:event-destination/${EventDestinationName}",
        "condition_keys": [],
        "resource": "event-destination"
      },
      {
        "arn": "arn:${Partition}:ses:${Region}:${Account}:identity/${IdentityName}",
        "condition_keys": [],
        "resource": "identity"
      },
      {
        "arn": "arn:${Partition}:ses:${Region}:${Account}:receipt-filter/${ReceiptFilterName}",
        "condition_keys": [],
        "resource": "receipt-filter"
      },
      {
        "arn": "arn:${Partition}:ses:${Region}:${Account}:receipt-rule-set/${ReceiptRuleSetName}:receipt-rule/${ReceiptRuleName}",
        "condition_keys": [],
        "resource": "receipt-rule"
      },
      {
        "arn": "arn:${Partition}:ses:${Region}:${Account}:receipt-rule-set/${ReceiptRuleSetName}",
        "condition_keys": [],
        "resource": "receipt-rule-set"
      },
      {
        "arn": "arn:${Partition}:ses:${Region}:${Account}:template/${TemplateName}",
        "condition_keys": [],
        "resource": "template"
      }
    ],
    "service_name": "Amazon SES"
  },
  {
    "conditions": [],
    "prefix": "shield",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Authorizes the DDoS Response team to access the specified Amazon S3 bucket containing your flow logs",
        "privilege": "AssociateDRTLogBucket",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:GetBucketPolicy",
              "s3:PutBucketPolicy"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Authorizes the DDoS Response team using the specified role, to access your AWS account to assist with DDoS attack mitigation during potential attacks",
        "privilege": "AssociateDRTRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:GetRole",
              "iam:ListAttachedRolePolicies",
              "iam:PassRole"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Activate DDoS protection service for a given resource ARN",
        "privilege": "CreateProtection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "protection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Activate subscription",
        "privilege": "CreateSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an existing protection",
        "privilege": "DeleteProtection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "protection*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deactivate subscription",
        "privilege": "DeleteSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get attack details",
        "privilege": "DescribeAttack",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "attack*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the current role and list of Amazon S3 log buckets used by the DDoS Response team to access your AWS account while assisting with attack mitigation",
        "privilege": "DescribeDRTAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the email addresses that the DRT can use to contact you during a suspected attack",
        "privilege": "DescribeEmergencyContactSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get protection details",
        "privilege": "DescribeProtection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "protection*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get subscription details, such as start time",
        "privilege": "DescribeSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes the DDoS Response team's access to the specified Amazon S3 bucket containing your flow logs",
        "privilege": "DisassociateDRTLogBucket",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:DeleteBucketPolicy",
              "s3:GetBucketPolicy",
              "s3:PutBucketPolicy"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes the DDoS Response team's access to your AWS account",
        "privilege": "DisassociateDRTRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get subscription state",
        "privilege": "GetSubscriptionState",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all existing attacks",
        "privilege": "ListAttacks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all existing protections",
        "privilege": "ListProtections",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the details of the list of email addresses that the DRT can use to contact you during a suspected attack",
        "privilege": "UpdateEmergencyContactSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the details of an existing subscription",
        "privilege": "UpdateSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:shield::${Account}:attack/${Id}",
        "condition_keys": [],
        "resource": "attack"
      },
      {
        "arn": "arn:${Partition}:shield::${Account}:protection/${Id}",
        "condition_keys": [],
        "resource": "protection"
      }
    ],
    "service_name": "AWS Shield"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters create requests based on the allowed set of values for each of the tags.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value associated with the resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters create requests based on the presence of mandatory tags in the request.",
        "type": "String"
      }
    ],
    "prefix": "signer",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Cancels a signing profile.",
        "privilege": "CancelSigningProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "signing-profile*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe a signing job.",
        "privilege": "DescribeSigningJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "signing-job*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a signing platform.",
        "privilege": "GetSigningPlatform",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a signing profile.",
        "privilege": "GetSigningProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "signing-profile*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List signing jobs.",
        "privilege": "ListSigningJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all signing platforms.",
        "privilege": "ListSigningPlatforms",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all signing profile associated with the account.",
        "privilege": "ListSigningProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the tags associated with the Signing Profile resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "signing-profile*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new signing profile if not exists.",
        "privilege": "PutSigningProfile",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a code signing request.",
        "privilege": "StartSigningJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "signing-profile*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds one or more tags to an Signing Profile resource",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "signing-profile*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes one or more tags from an Signing Profile resource",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "signing-profile*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:signer:${Region}::/signing-profiles/${profileName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "signing-profile"
      },
      {
        "arn": "arn:${Partition}:signer:${Region}::/signing-jobs/${jobId}",
        "condition_keys": [],
        "resource": "signing-job"
      }
    ],
    "service_name": "AWS Code Signing for Amazon FreeRTOS"
  },
  {
    "conditions": [],
    "prefix": "sms",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Create an application configuration to migrate on-premise application onto AWS..",
        "privilege": "CreateApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a job to migrate on-premise server onto AWS.",
        "privilege": "CreateReplicationJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an existing application configuration.",
        "privilege": "DeleteApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete launch configuration for an existing application.",
        "privilege": "DeleteAppLaunchConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete replication configuration for an existing application..",
        "privilege": "DeleteAppReplicationConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an existing job to migrate on-premise server onto AWS.",
        "privilege": "DeleteReplicationJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the complete list of on-premise servers gathered into AWS.",
        "privilege": "DeleteServerCatalog",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociate a connector that has been associated.",
        "privilege": "DisassociateConnector",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Generate a changeSet for the CloudFormation stack of an application.",
        "privilege": "GenerateChangeSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Generate a CloudFormation template for an existing application.",
        "privilege": "GenerateTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the configuration and statuses for an existing application.",
        "privilege": "GetApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get launch configuration for an existing application.",
        "privilege": "GetAppLaunchConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get replication configuration for an existing application.",
        "privilege": "GetAppReplicationConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get all connectors that have been associated.",
        "privilege": "GetConnectors",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets messages from AWS Server Migration Service to Server Migration Connector.",
        "privilege": "GetMessages",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get all existing jobs to migrate on-premise servers onto AWS.",
        "privilege": "GetReplicationJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get all runs for an existing job.",
        "privilege": "GetReplicationRuns",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get all servers that have been imported.",
        "privilege": "GetServers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Gathers a complete list of on-premise servers.",
        "privilege": "ImportServerCatalog",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create and launch a CloudFormation stack for an existing application.",
        "privilege": "LaunchApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Get a list of summaries for existing applications.",
        "privilege": "ListApps",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create or update launch configuration for an existing application.",
        "privilege": "PutAppLaunchConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create or update replication configuration for an existing application.",
        "privilege": "PutAppReplicationConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Send message from Server Migration Connector to AWS Server Migration Service.",
        "privilege": "SendMessage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create and start replication jobs for an existing application.",
        "privilege": "StartAppReplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Start a replication run for an existing replication job.",
        "privilege": "StartOnDemandReplicationRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stop and delete replication jobs for an existing application.",
        "privilege": "StopAppReplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Terminate the CloudFormation stack for an existing application.",
        "privilege": "TerminateApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update an existing application configuration",
        "privilege": "UpdateApp",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update an existing job to migrate on-premise server onto AWS.",
        "privilege": "UpdateReplicationJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Server Migration Service"
  },
  {
    "conditions": [],
    "prefix": "sms-voice",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Create a new configuration set. After you create the configuration set, you can add one or more event destinations to it.",
        "privilege": "CreateConfigurationSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new event destination in a configuration set.",
        "privilege": "CreateConfigurationSetEventDestination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing configuration set.",
        "privilege": "DeleteConfigurationSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an event destination in a configuration set.",
        "privilege": "DeleteConfigurationSetEventDestination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Obtain information about an event destination, including the types of events it reports, the Amazon Resource Name (ARN) of the destination, and the name of the event destination.",
        "privilege": "GetConfigurationSetEventDestinations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Return a list of configuration sets. This operation only returns the configuration sets that are associated with your account in the current AWS Region.",
        "privilege": "ListConfigurationSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a new voice message and send it to a recipient's phone number.",
        "privilege": "SendVoiceMessage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update an event destination in a configuration set. An event destination is a location that you publish information about your voice calls to. For example, you can log an event to an Amazon CloudWatch destination when a call fails.",
        "privilege": "UpdateConfigurationSetEventDestination",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon Pinpoint SMS and Voice Service"
  },
  {
    "conditions": [],
    "prefix": "snowball",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Cancels a cluster job.",
        "privilege": "CancelCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancels the specified job.",
        "privilege": "CancelJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an address for a Snowball to be shipped to.",
        "privilege": "CreateAddress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an empty cluster.",
        "privilege": "CreateCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a job to import or export data between Amazon S3 and your on-premises data center.",
        "privilege": "CreateJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Takes an AddressId and returns specific details about that address in the form of an Address object.",
        "privilege": "DescribeAddress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a specified number of ADDRESS objects.",
        "privilege": "DescribeAddresses",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a specific cluster including shipping information, cluster status, and other important metadata.",
        "privilege": "DescribeCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a specific job including shipping information, job status, and other important metadata.",
        "privilege": "DescribeJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a link to an Amazon S3 presigned URL for the manifest file associated with the specified JobId value.",
        "privilege": "GetJobManifest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the UnlockCode code value for the specified job.",
        "privilege": "GetJobUnlockCode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the Snowball service limit for your account, and also the number of Snowballs your account has in use.",
        "privilege": "GetSnowballUsage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of JobListEntry objects of the specified length.",
        "privilege": "ListClusterJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of ClusterListEntry objects of the specified length.",
        "privilege": "ListClusters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of JobListEntry objects of the specified length.",
        "privilege": "ListJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "While a cluster's ClusterState value is in the AwaitingQuorum state, you can update some of the information associated with a cluster.",
        "privilege": "UpdateCluster",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "While a job's JobState value is New, you can update some of the information associated with a job.",
        "privilege": "UpdateJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Snowball"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Tags from request",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Tag keys from request",
        "type": "String"
      },
      {
        "condition": "sns:Endpoint",
        "description": "The URL, email address, or ARN from a Subscribe request or a previously confirmed subscription.",
        "type": "String"
      },
      {
        "condition": "sns:Protocol",
        "description": "The protocol value from a Subscribe request or a previously confirmed subscription.",
        "type": "String"
      }
    ],
    "prefix": "sns",
    "privileges": [
      {
        "access_level": "Permissions management",
        "description": "Adds a statement to a topic's access control policy, granting access for the specified AWS accounts to the specified actions.",
        "privilege": "AddPermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "topic*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Accepts a phone number and indicates whether the phone holder has opted out of receiving SMS messages from your account.",
        "privilege": "CheckIfPhoneNumberIsOptedOut",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Verifies an endpoint owner's intent to receive messages by validating the token sent to the endpoint by an earlier Subscribe action.",
        "privilege": "ConfirmSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "topic*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a platform application object for one of the supported push notification services, such as APNS and GCM, to which devices and mobile apps may register.",
        "privilege": "CreatePlatformApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an endpoint for a device and mobile app on one of the supported push notification services, such as GCM and APNS.",
        "privilege": "CreatePlatformEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a topic to which notifications can be published.",
        "privilege": "CreateTopic",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "topic*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the endpoint for a device and mobile app from Amazon SNS.",
        "privilege": "DeleteEndpoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a platform application object for one of the supported push notification services, such as APNS and GCM.",
        "privilege": "DeletePlatformApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a topic and all its subscriptions.",
        "privilege": "DeleteTopic",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "topic*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the endpoint attributes for a device on one of the supported push notification services, such as GCM and APNS.",
        "privilege": "GetEndpointAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the attributes of the platform application object for the supported push notification services, such as APNS and GCM.",
        "privilege": "GetPlatformApplicationAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the settings for sending SMS messages from your account.",
        "privilege": "GetSMSAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns all of the properties of a subscription.",
        "privilege": "GetSubscriptionAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns all of the properties of a topic. Topic properties returned might differ based on the authorization of the user.",
        "privilege": "GetTopicAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "topic*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the endpoints and endpoint attributes for devices in a supported push notification service, such as GCM and APNS.",
        "privilege": "ListEndpointsByPlatformApplication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of phone numbers that are opted out, meaning you cannot send SMS messages to them.",
        "privilege": "ListPhoneNumbersOptedOut",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the platform application objects for the supported push notification services, such as APNS and GCM.",
        "privilege": "ListPlatformApplications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of the requester's subscriptions.",
        "privilege": "ListSubscriptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of the subscriptions to a specific topic.",
        "privilege": "ListSubscriptionsByTopic",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "topic*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "List all tags added to the specified Amazon SNS topic.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "topic"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of the requester's topics. Each call returns a limited list of topics, up to 100.",
        "privilege": "ListTopics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Opts in a phone number that is currently opted out, which enables you to resume sending SMS messages to the number.",
        "privilege": "OptInPhoneNumber",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sends a message to all of a topic's subscribed endpoints.",
        "privilege": "Publish",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "topic*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Removes a statement from a topic's access control policy.",
        "privilege": "RemovePermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "topic*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the attributes for an endpoint for a device on one of the supported push notification services, such as GCM and APNS.",
        "privilege": "SetEndpointAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the attributes of the platform application object for the supported push notification services, such as APNS and GCM.",
        "privilege": "SetPlatformApplicationAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows a subscription owner to set an attribute of the topic to a new value.",
        "privilege": "SetSubscriptionAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows a topic owner to set an attribute of the topic to a new value.",
        "privilege": "SetTopicAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "topic*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Prepares to subscribe an endpoint by sending the endpoint a confirmation message.",
        "privilege": "Subscribe",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "topic*"
          },
          {
            "condition_keys": [
              "sns:Endpoint",
              "sns:Protocol"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Add tags to the specified Amazon SNS topic.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "topic"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a subscription. If the subscription requires authentication for deletion, only the owner of the subscription or the topic's owner can unsubscribe, and an AWS signature is required.",
        "privilege": "Unsubscribe",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Remove tags from the specified Amazon SNS topic.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "topic"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:sns:${Region}:${Account}:${TopicName}",
        "condition_keys": [],
        "resource": "topic"
      }
    ],
    "service_name": "Amazon SNS"
  },
  {
    "conditions": [],
    "prefix": "sqs",
    "privileges": [
      {
        "access_level": "Permissions management",
        "description": "Adds a permission to a queue for a specific principal.",
        "privilege": "AddPermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Changes the visibility timeout of a specified message in a queue to a new value.",
        "privilege": "ChangeMessageVisibility",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Changes the visibility timeout of multiple messages.",
        "privilege": "ChangeMessageVisibilityBatch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new queue, or returns the URL of an existing one.",
        "privilege": "CreateQueue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified message from the specified queue.",
        "privilege": "DeleteMessage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes up to ten messages from the specified queue.",
        "privilege": "DeleteMessageBatch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the queue specified by the queue URL, regardless of whether the queue is empty.",
        "privilege": "DeleteQueue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets attributes for the specified queue.",
        "privilege": "GetQueueAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the URL of an existing queue.",
        "privilege": "GetQueueUrl",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of your queues that have the RedrivePolicy queue attribute configured with a dead letter queue.",
        "privilege": "ListDeadLetterSourceQueues",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists tags added to an SQS queue.",
        "privilege": "ListQueueTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of your queues.",
        "privilege": "ListQueues",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the messages in a queue specified by the queue URL.",
        "privilege": "PurgeQueue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves one or more messages, with a maximum limit of 10 messages, from the specified queue.",
        "privilege": "ReceiveMessage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Revokes any permissions in the queue policy that matches the specified Label parameter.",
        "privilege": "RemovePermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delivers a message to the specified queue.",
        "privilege": "SendMessage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delivers up to ten messages to the specified queue.",
        "privilege": "SendMessageBatch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the value of one or more queue attributes.",
        "privilege": "SetQueueAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Add tags to the specified SQS queue.",
        "privilege": "TagQueue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Remove tags from the specified SQS queue.",
        "privilege": "UntagQueue",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "queue*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:sqs:${Region}:${Account}:${QueueName}",
        "condition_keys": [],
        "resource": "queue"
      }
    ],
    "service_name": "Amazon SQS"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters 'Create' requests based on the allowed set of values for a specified tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters access based on a tag key-value pair assigned to the AWS resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters 'Create' requests based on whether mandatory tags are included in the request",
        "type": "String"
      },
      {
        "condition": "ssm:Overwrite",
        "description": "Filters access by controlling whether the values for specified resources can be overwritten.",
        "type": "String"
      },
      {
        "condition": "ssm:Recursive",
        "description": "Filters access for resources created in a hierarchical structure.",
        "type": "String"
      },
      {
        "condition": "ssm:SessionDocumentAccessCheck",
        "description": "Filters access by verifying that a user also has access to the default Session Manager configuration document.",
        "type": "Boolean"
      },
      {
        "condition": "ssm:SyncType",
        "description": "Filters access by verifying that a user also has access to the ResourceDataSync SyncType specified in the request",
        "type": "String"
      },
      {
        "condition": "ssm:resourceTag/tag-key",
        "description": "Filters access based on a tag key-value pair assigned to the Systems Manager resource",
        "type": "String"
      }
    ],
    "prefix": "ssm",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "Grants permission to add or overwrite one or more tags for a specified AWS resource",
        "privilege": "AddTagsToResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "maintenancewindow"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "managed-instance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "parameter"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "patchbaseline"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to cancel a specified Run Command command",
        "privilege": "CancelCommand",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to cancel an in-progress maintenance window execution",
        "privilege": "CancelMaintenanceWindowExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an activation that is used to register on-premises servers and virtual machines (VMs) with Systems Manager",
        "privilege": "CreateActivation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate a specified Systems Manager document with specified instances or other targets",
        "privilege": "CreateAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to combine entries for multiple CreateAssociation operations in a single command",
        "privilege": "CreateAssociationBatch",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a Systems Manager SSM document",
        "privilege": "CreateDocument",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a maintenance window",
        "privilege": "CreateMaintenanceWindow",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an OpsItem in OpsCenter",
        "privilege": "CreateOpsItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a patch baseline",
        "privilege": "CreatePatchBaseline",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a resource data sync configuration, which regularly collects inventory data from managed instances and updates the data in an Amazon S3 bucket",
        "privilege": "CreateResourceDataSync",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resourcedatasync*"
          },
          {
            "condition_keys": [
              "ssm:SyncType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a specified activation for managed instances",
        "privilege": "DeleteActivation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate a specified SSM document from a specified instance",
        "privilege": "DeleteAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a specified SSM document and its instance associations",
        "privilege": "DeleteDocument",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a specified custom inventory type, or the data associated with a custom inventory type",
        "privilege": "DeleteInventory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a specified maintenance window",
        "privilege": "DeleteMaintenanceWindow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "maintenancewindow*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a specified SSM parameter",
        "privilege": "DeleteParameter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "parameter*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete multiple specified SSM parameters",
        "privilege": "DeleteParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "parameter*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a specified patch baseline",
        "privilege": "DeletePatchBaseline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "patchbaseline*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete a specified resource data sync",
        "privilege": "DeleteResourceDataSync",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resourcedatasync*"
          },
          {
            "condition_keys": [
              "ssm:SyncType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to deregister a specified on-premises server or virtual machine (VM) from Systems Manager",
        "privilege": "DeregisterManagedInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "managed-instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to deregister a specified patch baseline from being the default patch baseline for a specified patch group",
        "privilege": "DeregisterPatchBaselineForPatchGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "patchbaseline*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to deregister a specified target from a maintenance window",
        "privilege": "DeregisterTargetFromMaintenanceWindow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "maintenancewindow*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to deregister a specified task from a maintenance window",
        "privilege": "DeregisterTaskFromMaintenanceWindow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "maintenancewindow*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about a specified managed instance activation, such as when it was created and the number of instances registered using the activation",
        "privilege": "DescribeActivations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about the specified association for a specified instance or target",
        "privilege": "DescribeAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view information about a specified association execution",
        "privilege": "DescribeAssociationExecutionTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view all executions for a specified association",
        "privilege": "DescribeAssociationExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about all active and terminated Automation executions",
        "privilege": "DescribeAutomationExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view information about all active and terminated step executions in an Automation workflow",
        "privilege": "DescribeAutomationStepExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view all patches eligible to include in a patch baseline",
        "privilege": "DescribeAvailablePatches",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about a specified SSM document",
        "privilege": "DescribeDocument",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to display information about SSM document parameters in the Systems Manager console (internal Systems Manager action)",
        "privilege": "DescribeDocumentParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the permissions for a specified SSM document",
        "privilege": "DescribeDocumentPermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view all current associations for a specified instance",
        "privilege": "DescribeEffectiveInstanceAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about the patches currently associated with the specified patch baseline (Windows only)",
        "privilege": "DescribeEffectivePatchesForPatchBaseline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "patchbaseline*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the status of the associations for a specified instance",
        "privilege": "DescribeInstanceAssociationsStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about a specified instance",
        "privilege": "DescribeInstanceInformation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view status details about patches on a specified instance",
        "privilege": "DescribeInstancePatchStates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe the high-level patch state for the instances in the specified patch group",
        "privilege": "DescribeInstancePatchStatesForPatchGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view general details about the patches on a specified instance",
        "privilege": "DescribeInstancePatches",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to user's Amazon EC2 console to render managed instances' nodes",
        "privilege": "DescribeInstanceProperties",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about a specified inventory deletion",
        "privilege": "DescribeInventoryDeletions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view details of a specified task execution for a maintenance window",
        "privilege": "DescribeMaintenanceWindowExecutionTaskInvocations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view details about the tasks that ran during a specified maintenance window execution",
        "privilege": "DescribeMaintenanceWindowExecutionTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view the executions of a specified maintenance window",
        "privilege": "DescribeMaintenanceWindowExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "maintenancewindow*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view details about upcoming executions of a specified maintenance window",
        "privilege": "DescribeMaintenanceWindowSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view a list of the targets associated with a specified maintenance window",
        "privilege": "DescribeMaintenanceWindowTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "maintenancewindow*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view a list of the tasks associated with a specified maintenance window",
        "privilege": "DescribeMaintenanceWindowTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "maintenancewindow*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view information about all or specified maintenance windows",
        "privilege": "DescribeMaintenanceWindows",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view information about the maintenance window targets and tasks associated with a specified instance",
        "privilege": "DescribeMaintenanceWindowsForTarget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about specified OpsItems",
        "privilege": "DescribeOpsItems",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view details about a specified SSM parameter",
        "privilege": "DescribeParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view information about patch baselines that meet the specified criteria",
        "privilege": "DescribePatchBaselines",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view aggregated status details for patches for a specified patch group",
        "privilege": "DescribePatchGroupState",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view information about the patch baseline for a specified patch group",
        "privilege": "DescribePatchGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view details of available patches for a specified operating system and patch property",
        "privilege": "DescribePatchProperties",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view a list of recent Session Manager sessions that meet the specified search criteria",
        "privilege": "DescribeSessions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details of a specified Automation execution",
        "privilege": "GetAutomationExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about the command execution of a specified invocation or plugin",
        "privilege": "GetCommandInvocation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the Session Manager connection status for a specified managed instance",
        "privilege": "GetConnectionStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the current default patch baseline for a specified operating system type",
        "privilege": "GetDefaultPatchBaseline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "patchbaseline*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the current patch baseline snapshot for a specified instance",
        "privilege": "GetDeployablePatchSnapshotForInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the contents of a specified SSM document",
        "privilege": "GetDocument",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view instance inventory details per the specified criteria",
        "privilege": "GetInventory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view a list of inventory types or attribute names for a specified inventory item type",
        "privilege": "GetInventorySchema",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about a specified maintenance window",
        "privilege": "GetMaintenanceWindow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "maintenancewindow*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about a specified maintenance window execution",
        "privilege": "GetMaintenanceWindowExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about a specified maintenance window execution task",
        "privilege": "GetMaintenanceWindowExecutionTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about a specific maintenance window task running on a specific target",
        "privilege": "GetMaintenanceWindowExecutionTaskInvocation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about tasks registered with a specified maintenance window",
        "privilege": "GetMaintenanceWindowTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "maintenancewindow*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Used by Systems Manager and SSM Agent to determine package installation requirements for an instance (internal Systems Manager call)",
        "privilege": "GetManifest",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view information about a specified OpsItem",
        "privilege": "GetOpsItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view summary information about OpsItems based on specified filters and aggregators",
        "privilege": "GetOpsSummary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resourcedatasync*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view information about a specified parameter",
        "privilege": "GetParameter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "parameter*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details and changes for a specified parameter",
        "privilege": "GetParameterHistory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "parameter*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view information about multiple specified parameters",
        "privilege": "GetParameters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "parameter*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view information about parameters in a specified hierarchy",
        "privilege": "GetParametersByPath",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "parameter*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view information about a specified patch baseline",
        "privilege": "GetPatchBaseline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "patchbaseline*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the ID of the current patch baseline for a specified patch group",
        "privilege": "GetPatchBaselineForPatchGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "patchbaseline*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the account-level setting for an AWS service",
        "privilege": "GetServiceSetting",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "servicesetting*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to apply an identifying label to a specified version of a parameter",
        "privilege": "LabelParameterVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "parameter*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list versions of the specified association",
        "privilege": "ListAssociationVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the associations for a specified SSM document or managed instance",
        "privilege": "ListAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list information about command invocations sent to a specified instance",
        "privilege": "ListCommandInvocations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to list the commands sent to a specified instance",
        "privilege": "ListCommands",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list compliance status for specified resource types on a specified resource",
        "privilege": "ListComplianceItems",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list a summary count of compliant and noncompliant resources for a specified compliance type",
        "privilege": "ListComplianceSummaries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all versions of a specified document",
        "privilege": "ListDocumentVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view information about a specified SSM document",
        "privilege": "ListDocuments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Used by SSM Agent to check for new State Manager associations (internal Systems Manager call)",
        "privilege": "ListInstanceAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view a list of specified inventory types for a specified instance",
        "privilege": "ListInventoryEntries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list resource-level summary count",
        "privilege": "ListResourceComplianceSummaries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list information about resource data sync configurations in an account",
        "privilege": "ListResourceDataSync",
        "resource_types": [
          {
            "condition_keys": [
              "ssm:SyncType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view a list of resource tags for a specified resource",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "maintenancewindow"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "managed-instance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "parameter"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "patchbaseline"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to share a custom SSM document publicly or privately with specified AWS accounts",
        "privilege": "ModifyDocumentPermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to register a compliance type and other compliance details on a specified resource",
        "privilege": "PutComplianceItems",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Used by SSM Agent to generate a report of the results of specific agent requests (internal Systems Manager call)",
        "privilege": "PutConfigurePackageResult",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add or update inventory items on multiple specified managed instances",
        "privilege": "PutInventory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an SSM parameter",
        "privilege": "PutParameter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "parameter*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to specify the default patch baseline for an operating system type",
        "privilege": "RegisterDefaultPatchBaseline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "patchbaseline*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to specify the default patch baseline for a specified patch group",
        "privilege": "RegisterPatchBaselineForPatchGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "patchbaseline*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to register a target with a specified maintenance window",
        "privilege": "RegisterTargetWithMaintenanceWindow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "maintenancewindow*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to register a task with a specified maintenance window",
        "privilege": "RegisterTaskWithMaintenanceWindow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "maintenancewindow*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to remove a specified tag key from a specified resource",
        "privilege": "RemoveTagsFromResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "maintenancewindow"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "managed-instance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "parameter"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "patchbaseline"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reset the service setting for an AWS account to the default value",
        "privilege": "ResetServiceSetting",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "servicesetting*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to reconnect a Session Manager session to a managed instance",
        "privilege": "ResumeSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "session*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to send a signal to change the current behavior or status of a specified Automation execution",
        "privilege": "SendAutomationSignal",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to run commands on one or more specified managed instances",
        "privilege": "SendCommand",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "managed-instance"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}",
              "ssm:resourceTag/tag-key"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to run a specified association manually",
        "privilege": "StartAssociationsOnce",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to initiate the execution of an Automation document",
        "privilege": "StartAutomationExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to initiate a connection to a specified target for a Session Manager session",
        "privilege": "StartSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "instance*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document"
          },
          {
            "condition_keys": [
              "ssm:SessionDocumentAccessCheck"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to stop a specified Automation execution that is already in progress",
        "privilege": "StopAutomationExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to permanently end a Session Manager connection to an instance.",
        "privilege": "TerminateSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "session*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an association and immediately run the association on the specified targets",
        "privilege": "UpdateAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the status of the SSM document associated with a specified instance",
        "privilege": "UpdateAssociationStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "document"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update one or more values for an SSM document",
        "privilege": "UpdateDocument",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change the default version of an SSM document",
        "privilege": "UpdateDocumentDefaultVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used by SSM Agent to update the status of the association that it is currently running (internal Systems Manager call)",
        "privilege": "UpdateInstanceAssociationStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used by SSM Agent to send a heartbeat signal to the Systems Manager service in the cloud",
        "privilege": "UpdateInstanceInformation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a specified maintenance window",
        "privilege": "UpdateMaintenanceWindow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "maintenancewindow*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a specified maintenance window target",
        "privilege": "UpdateMaintenanceWindowTarget",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "maintenancewindow*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a specified maintenance window task",
        "privilege": "UpdateMaintenanceWindowTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "maintenancewindow*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to assign or change the IAM role assigned to a specified managed instance",
        "privilege": "UpdateManagedInstanceRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "managed-instance*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to edit or change an OpsItem",
        "privilege": "UpdateOpsItem",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a specified patch baseline",
        "privilege": "UpdatePatchBaseline",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "patchbaseline*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update a resource data sync",
        "privilege": "UpdateResourceDataSync",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "resourcedatasync*"
          },
          {
            "condition_keys": [
              "ssm:SyncType"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the service setting for an AWS account",
        "privilege": "UpdateServiceSetting",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "servicesetting*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:association/${AssociationId}",
        "condition_keys": [],
        "resource": "association"
      },
      {
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:automation-execution/${AutomationExecutionId}",
        "condition_keys": [],
        "resource": "automation-execution"
      },
      {
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:automation-definition/${AutomationDefinitionName:VersionId}",
        "condition_keys": [],
        "resource": "automation-definition"
      },
      {
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:document/${DocumentName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "ssm:resourceTag/tag-key"
        ],
        "resource": "document"
      },
      {
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "ssm:resourceTag/tag-key"
        ],
        "resource": "instance"
      },
      {
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:maintenancewindow/${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "ssm:resourceTag/tag-key"
        ],
        "resource": "maintenancewindow"
      },
      {
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:managed-instance/${ManagedInstanceName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "ssm:resourceTag/tag-key"
        ],
        "resource": "managed-instance"
      },
      {
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:managed-instance-inventory/${InstanceId}",
        "condition_keys": [],
        "resource": "managed-instance-inventory"
      },
      {
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:opsitem/${ResourceId}",
        "condition_keys": [],
        "resource": "opsitem"
      },
      {
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:parameter/${FullyQualifiedParameterName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "ssm:resourceTag/tag-key"
        ],
        "resource": "parameter"
      },
      {
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:patchbaseline/${PatchBaselineIdResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}",
          "ssm:resourceTag/tag-key"
        ],
        "resource": "patchbaseline"
      },
      {
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:session/${SessionId}",
        "condition_keys": [],
        "resource": "session"
      },
      {
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:resource-data-sync/${SyncName}",
        "condition_keys": [],
        "resource": "resourcedatasync"
      },
      {
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:servicesetting/${ResourceId}",
        "condition_keys": [],
        "resource": "servicesetting"
      },
      {
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:windowtarget/${WindowTargetId}",
        "condition_keys": [],
        "resource": "windowtarget"
      },
      {
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:windowtask/${WindowTaskId}",
        "condition_keys": [],
        "resource": "windowtask"
      }
    ],
    "service_name": "AWS Systems Manager"
  },
  {
    "conditions": [],
    "prefix": "ssmmessages",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Registers a control channel for an instance to send control messages to Systems Manager service.",
        "privilege": "CreateControlChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers a data channel for an instance to send data messages to Systems Manager service.",
        "privilege": "CreateDataChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Opens a websocket connection for a registered control channel stream from an instance to Systems Manager service.",
        "privilege": "OpenControlChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Opens a websocket connection for a registered data channel stream from an instance to Systems Manager service.",
        "privilege": "OpenDataChannel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon Session Manager Message Gateway Service"
  },
  {
    "conditions": [],
    "prefix": "sso",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Connect a directory to be used by AWS Single Sign-On",
        "privilege": "AssociateDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create an association between a directory user or group and a profile",
        "privilege": "AssociateProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Add an application instance to AWS Single Sign-On",
        "privilege": "CreateApplicationInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Add a new certificate for an application instance",
        "privilege": "CreateApplicationInstanceCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Add a managed application instance to AWS Single Sign-On",
        "privilege": "CreateManagedApplicationInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a permission set",
        "privilege": "CreatePermissionSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a profile for an application instance",
        "privilege": "CreateProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create a federation trust in a target account",
        "privilege": "CreateTrust",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the application instance",
        "privilege": "DeleteApplicationInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an inactive or expired certificate from the application instance",
        "privilege": "DeleteApplicationInstanceCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the managed application instance",
        "privilege": "DeleteManagedApplicationInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete a permission set",
        "privilege": "DeletePermissionSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the permission policy associated with a permission set",
        "privilege": "DeletePermissionsPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete the profile for an application instance",
        "privilege": "DeleteProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve all the permissions policies associated with a permission set",
        "privilege": "DescribePermissionsPolicies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Obtains the regions where your organization has enabled AWS Single Sign-on",
        "privilege": "DescribeRegisteredRegions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociate a directory to be used by AWS Single Sign-On",
        "privilege": "DisassociateDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociate a directory user or group from a profile",
        "privilege": "DisassociateProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve details for an application instance",
        "privilege": "GetApplicationInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve application template details",
        "privilege": "GetApplicationTemplate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve details for an application instance",
        "privilege": "GetManagedApplicationInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve Mfa Device Management settings for the directory",
        "privilege": "GetMfaDeviceManagementForDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve details of a permission set",
        "privilege": "GetPermissionSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve all permission policies associated with a permission set",
        "privilege": "GetPermissionsPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "sso:DescribePermissionsPolicies"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve a profile for an application instance",
        "privilege": "GetProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Check if AWS Single Sign-On is enabled",
        "privilege": "GetSSOStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve shared configuration for the current SSO instance",
        "privilege": "GetSharedSsoConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve configuration for the current SSO instance",
        "privilege": "GetSsoConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve the federation trust in a target account",
        "privilege": "GetTrust",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the application instance by uploading an application SAML metadata file provided by the service provider",
        "privilege": "ImportApplicationInstanceServiceProviderMetadata",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve all of the certificates for a given application instance",
        "privilege": "ListApplicationInstanceCertificates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieve all application instances",
        "privilege": "ListApplicationInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "sso:GetApplicationInstance"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve all supported application templates",
        "privilege": "ListApplicationTemplates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "sso:GetApplicationTemplate"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve all supported applications",
        "privilege": "ListApplications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve details about the directory connected to AWS Single Sign-On",
        "privilege": "ListDirectoryAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve all permission sets",
        "privilege": "ListPermissionSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve the directory user or group associated with the profile",
        "privilege": "ListProfileAssociations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve all profiles for an application instance",
        "privilege": "ListProfiles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "sso:GetProfile"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Put Mfa Device Management settings for the directory",
        "privilege": "PutMfaDeviceManagementForDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Add a policy to a permission set",
        "privilege": "PutPermissionsPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Initialize AWS Single Sign-On",
        "privilege": "StartSSO",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Set a certificate as the active one for this application instance",
        "privilege": "UpdateApplicationInstanceActiveCertificate",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update display data of an application instance",
        "privilege": "UpdateApplicationInstanceDisplayData",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update federation response configuration for the application instance",
        "privilege": "UpdateApplicationInstanceResponseConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update federation response schema configuration for the application instance",
        "privilege": "UpdateApplicationInstanceResponseSchemaConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update security details for the application instance",
        "privilege": "UpdateApplicationInstanceSecurityConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update service provider related configuration for the application instance",
        "privilege": "UpdateApplicationInstanceServiceProviderConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the status of an application instance",
        "privilege": "UpdateApplicationInstanceStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the user attribute mappings for your connected directory",
        "privilege": "UpdateDirectoryAssociation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the status of a managed application instance",
        "privilege": "UpdateManagedApplicationInstanceStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the permission set.",
        "privilege": "UpdatePermissionSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the profile for an application instance",
        "privilege": "UpdateProfile",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the configuration for the current SSO instance",
        "privilege": "UpdateSSOConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the federation trust in a target account",
        "privilege": "UpdateTrust",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS SSO"
  },
  {
    "conditions": [],
    "prefix": "sso-directory",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Adds member to the group in the directory that AWS SSO provides by default",
        "privilege": "AddMemberToGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Completes the creation process of a virtual MFA device",
        "privilege": "CompleteVirtualMfaDeviceRegistration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an alias for the directory that AWS SSO provides by default",
        "privilege": "CreateAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a bearer token for a given provisioning tenant.",
        "privilege": "CreateBearerToken",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create an External Identity Provider configuration for the directory",
        "privilege": "CreateExternalIdPConfigurationForDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a group in the directory that AWS SSO provides by default",
        "privilege": "CreateGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a provisioning tenant for a given directory.",
        "privilege": "CreateProvisioningTenant",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a user in the directory that AWS SSO provides by default",
        "privilege": "CreateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the bearer token.",
        "privilege": "DeleteBearerToken",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Delete an External Identity Provider configuration associated with the directory",
        "privilege": "DeleteExternalIdPConfigurationForDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a group from the directory that AWS SSO provides by default",
        "privilege": "DeleteGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a MFA device by device name for a given user",
        "privilege": "DeleteMfaDeviceForUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the provisioning tenant.",
        "privilege": "DeleteProvisioningTenant",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a user from the directory that AWS SSO provides by default",
        "privilege": "DeleteUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve information about the directory that AWS SSO provides by default",
        "privilege": "DescribeDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves information about group from the directory that AWS SSO provides by default",
        "privilege": "DescribeGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves information about user from the directory that AWS SSO provides by default",
        "privilege": "DescribeUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disable authentication of end users with an External Identity Provider",
        "privilege": "DisableExternalIdPConfigurationForDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deactivates user in the directory that AWS SSO provides by default",
        "privilege": "DisableUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enable authentication of end users with an External Identity Provider",
        "privilege": "EnableExternalIdPConfigurationForDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Activates user in the directory that AWS SSO provides by default",
        "privilege": "EnableUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieve the AWS SSO Service Provider configurations for the directory",
        "privilege": "GetAWSSPConfigurationForDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists bearer tokens for a given provisioning tenant.",
        "privilege": "ListBearerTokens",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List all the External Identity Provider configurations created for the directory",
        "privilege": "ListExternalIdPConfigurationsForDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists groups for a user from the directory that AWS SSO provides by default",
        "privilege": "ListGroupsForUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves all members that are part of the group in the directory that AWS SSO provides by default",
        "privilege": "ListMembersInGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists all active MFA devices and their MFA device metadata for a user",
        "privilege": "ListMfaDevicesForUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists provisioning tenants for a given directory.",
        "privilege": "ListProvisioningTenants",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes member that are part of the group in the directory that AWS SSO provides by default",
        "privilege": "RemoveMemberFromGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Search for groups within the associated directory",
        "privilege": "SearchGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Search for users within the associated directory",
        "privilege": "SearchUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Begins the creation process of virtual mfa device",
        "privilege": "StartVirtualMfaDeviceRegistration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update an External Identity Provider configuration associated with the directory",
        "privilege": "UpdateExternalIdPConfigurationForDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates information about group in the directory that AWS SSO provides by default",
        "privilege": "UpdateGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates password by sending password reset link via email or generating one time password for a user in the directory that AWS SSO provides by default",
        "privilege": "UpdatePassword",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates user information in the directory that AWS SSO provides by default",
        "privilege": "UpdateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Verify email address of an User",
        "privilege": "VerifyEmail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS SSO Directory"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Tag for request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Tag for resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Tag for key",
        "type": "String"
      }
    ],
    "prefix": "states",
    "privileges": [
      {
        "access_level": "Tagging",
        "description": "Creates an activity. Activities must poll Step Functions using the GetActivityTask and respond using SendTask* API calls.",
        "privilege": "CreateActivity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "activity*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates a state machine.",
        "privilege": "CreateStateMachine",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "statemachine*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an activity.",
        "privilege": "DeleteActivity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "activity*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a state machine.",
        "privilege": "DeleteStateMachine",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "statemachine*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an activity.",
        "privilege": "DescribeActivity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "activity*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes an execution.",
        "privilege": "DescribeExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "execution*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes a state machine.",
        "privilege": "DescribeStateMachine",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "statemachine*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes state machine for an execution.",
        "privilege": "DescribeStateMachineForExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "execution*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used by workers to retrieve a task (with the specified activity ARN) which has been scheduled for execution by a running state machine.",
        "privilege": "GetActivityTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "activity*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the history of the specified execution as a list of events. By default, the results are returned in ascending order of the timeStamp of the events.",
        "privilege": "GetExecutionHistory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "execution*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the existing activities. The results may be split into multiple pages.",
        "privilege": "ListActivities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the executions of a state machine that meet the filtering criteria. The results may be split into multiple pages.",
        "privilege": "ListExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "statemachine*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the existing state machines. The results may be split into multiple pages.",
        "privilege": "ListStateMachines",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This action lists tags for an AWS Step Functions resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "activity"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "statemachine"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used by workers to report that the task identified by the taskToken failed.",
        "privilege": "SendTaskFailure",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used by workers to report to the service that the task represented by the specified taskToken is still making progress.",
        "privilege": "SendTaskHeartbeat",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used by workers to report that the task identified by the taskToken completed successfully.",
        "privilege": "SendTaskSuccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a state machine execution.",
        "privilege": "StartExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "statemachine*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops an execution.",
        "privilege": "StopExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action tags an AWS Step Functions resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "activity"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "statemachine"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action removes a tag from an AWS Step Functions resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "activity"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "statemachine"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a state machine.",
        "privilege": "UpdateStateMachine",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "statemachine*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:states:${Region}:${Account}:activity:${ActivityName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "activity"
      },
      {
        "arn": "arn:${Partition}:states:${Region}:${Account}:execution:${StateMachineName}:${ExecutionId}",
        "condition_keys": [],
        "resource": "execution"
      },
      {
        "arn": "arn:${Partition}:states:${Region}:${Account}:stateMachine:${StateMachineName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "statemachine"
      }
    ],
    "service_name": "AWS Step Functions"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters create requests based on the allowed set of values for each of the tags.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value associated with the resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters create requests based on the presence of mandatory tags in the request.",
        "type": "String"
      }
    ],
    "prefix": "storagegateway",
    "privileges": [
      {
        "access_level": "Write",
        "description": "This operation activates the gateway you previously deployed on your host.",
        "privilege": "ActivateGateway",
        "resource_types": [
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation configures one or more gateway local disks as cache for a cached-volume gateway.",
        "privilege": "AddCache",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This operation adds one or more tags to the specified resource.",
        "privilege": "AddTagsToResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "share"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "tape"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "volume"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation configures one or more gateway local disks as upload buffer for a specified gateway.",
        "privilege": "AddUploadBuffer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation configures one or more gateway local disks as working storage for a gateway.",
        "privilege": "AddWorkingStorage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation connects a volume to an iSCSI connection and then attaches the volume to the specified gateway.",
        "privilege": "AttachVolume",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancels archiving of a virtual tape to the virtual tape shelf (VTS) after the archiving process is initiated.",
        "privilege": "CancelArchival",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "tape*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Cancels retrieval of a virtual tape from the virtual tape shelf (VTS) to a gateway after the retrieval process is initiated.",
        "privilege": "CancelRetrieval",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "tape*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation creates a cached volume on a specified cached gateway. This operation is supported only for the gateway-cached volume architecture.",
        "privilege": "CreateCachediSCSIVolume",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "volume*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation creates a NFS file share on an existing file gateway.",
        "privilege": "CreateNFSFileShare",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation creates a SMB file share on an existing file gateway.",
        "privilege": "CreateSMBFileShare",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation initiates a snapshot of a volume.",
        "privilege": "CreateSnapshot",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation initiates a snapshot of a gateway from a volume recovery point.",
        "privilege": "CreateSnapshotFromVolumeRecoveryPoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation creates a volume on a specified gateway.",
        "privilege": "CreateStorediSCSIVolume",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a virtual tape by using your own barcode.",
        "privilege": "CreateTapeWithBarcode",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates one or more virtual tapes. You write data to the virtual tapes and then archive the tapes.",
        "privilege": "CreateTapes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation deletes the bandwidth rate limits of a gateway.",
        "privilege": "DeleteBandwidthRateLimit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation deletes Challenge-Handshake Authentication Protocol (CHAP) credentials for a specified iSCSI target and initiator pair.",
        "privilege": "DeleteChapCredentials",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "target*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation deletes a file share from a file gateway.",
        "privilege": "DeleteFileShare",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "share*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation deletes a gateway.",
        "privilege": "DeleteGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation deletes a snapshot of a volume.",
        "privilege": "DeleteSnapshotSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified virtual tape.",
        "privilege": "DeleteTape",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "tape*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified virtual tape from the virtual tape shelf (VTS).",
        "privilege": "DeleteTapeArchive",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation deletes the specified gateway volume that you previously created using the CreateCachediSCSIVolume or CreateStorediSCSIVolume API.",
        "privilege": "DeleteVolume",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This operation returns the bandwidth rate limits of a gateway.",
        "privilege": "DescribeBandwidthRateLimit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This operation returns information about the cache of a gateway. This operation is supported only for the gateway-cached volume architecture.",
        "privilege": "DescribeCache",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This operation returns a description of the gateway volumes specified in the request. This operation is supported only for the gateway-cached volume architecture.",
        "privilege": "DescribeCachediSCSIVolumes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This operation returns an array of Challenge-Handshake Authentication Protocol (CHAP) credentials information for a specified iSCSI target, one for each target-initiator pair.",
        "privilege": "DescribeChapCredentials",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "target*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This operation returns metadata about a gateway such as its name, network interfaces, configured time zone, and the state (whether the gateway is running or not).",
        "privilege": "DescribeGatewayInformation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This operation returns your gateway's weekly maintenance start time including the day and time of the week.",
        "privilege": "DescribeMaintenanceStartTime",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This operation gets a description for one or more file shares from a file gateway.",
        "privilege": "DescribeNFSFileShares",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "share*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This operation gets a description for one or more file shares from a file gateway.",
        "privilege": "DescribeSMBFileShares",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "share*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This operation gets a description of a Server Message Block (SMB) file share settings from a file gateway.",
        "privilege": "DescribeSMBSettings",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This operation describes the snapshot schedule for the specified gateway volume.",
        "privilege": "DescribeSnapshotSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This operation returns the description of the gateway volumes specified in the request.",
        "privilege": "DescribeStorediSCSIVolumes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a description of specified virtual tapes in the virtual tape shelf (VTS).",
        "privilege": "DescribeTapeArchives",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of virtual tape recovery points that are available for the specified gateway-VTL.",
        "privilege": "DescribeTapeRecoveryPoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a description of the specified Amazon Resource Name (ARN) of virtual tapes.",
        "privilege": "DescribeTapes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This operation returns information about the upload buffer of a gateway.",
        "privilege": "DescribeUploadBuffer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a description of virtual tape library (VTL) devices for the specified gateway.",
        "privilege": "DescribeVTLDevices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This operation returns information about the working storage of a gateway.",
        "privilege": "DescribeWorkingStorage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation disconnects a volume from an iSCSI connection and then detaches the volume from the specified gateway.",
        "privilege": "DetachVolume",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disables a gateway when the gateway is no longer functioning.",
        "privilege": "DisableGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation enables you to join an Active Directory Domain.",
        "privilege": "JoinDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "This operation gets a list of the file shares for a specific file gateway, or the list of file shares that belong to the calling user account.",
        "privilege": "ListFileShares",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "This operation lists gateways owned by an AWS account in a region specified in the request. The returned list is ordered by gateway Amazon Resource Name (ARN).",
        "privilege": "ListGateways",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "This operation returns a list of the gateway's local disks.",
        "privilege": "ListLocalDisks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This operation lists the tags that have been added to the specified resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "share"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "tape"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "volume"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists virtual tapes in your virtual tape library (VTL) and your virtual tape shelf (VTS).",
        "privilege": "ListTapes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "tape*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This operation lists iSCSI initiators that are connected to a volume.",
        "privilege": "ListVolumeInitiators",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "This operation lists the recovery points for a specified gateway.",
        "privilege": "ListVolumeRecoveryPoints",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "This operation lists the iSCSI stored volumes of a gateway.",
        "privilege": "ListVolumes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This action sends you a notification through CloudWatch Events when all files written to your NFS file share have been uploaded to Amazon S3.",
        "privilege": "NotifyWhenUploaded",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "share*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation refreshes the cache for the specified file share.",
        "privilege": "RefreshCache",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "share*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This operation removes one or more tags from the specified resource.",
        "privilege": "RemoveTagsFromResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "share"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "tape"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "volume"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation resets all cache disks that have encountered a error and makes the disks available for reconfiguration as cache storage.",
        "privilege": "ResetCache",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Retrieves an archived virtual tape from the virtual tape shelf (VTS) to a gateway-VTL.",
        "privilege": "RetrieveTapeArchive",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "tape*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Retrieves the recovery point for the specified virtual tape.",
        "privilege": "RetrieveTapeRecoveryPoint",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "tape*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the password for your VM local console.",
        "privilege": "SetLocalConsolePassword",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets the password for SMB Guest user.",
        "privilege": "SetSMBGuestPassword",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation shuts down a gateway.",
        "privilege": "ShutdownGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation starts a gateway that you previously shut down.",
        "privilege": "StartGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation updates the bandwidth rate limits of a gateway.",
        "privilege": "UpdateBandwidthRateLimit",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation updates the Challenge-Handshake Authentication Protocol (CHAP) credentials for a specified iSCSI target.",
        "privilege": "UpdateChapCredentials",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "target*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation updates a gateway's metadata, which includes the gateway's name and time zone.",
        "privilege": "UpdateGatewayInformation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation updates the gateway virtual machine (VM) software.",
        "privilege": "UpdateGatewaySoftwareNow",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation updates a gateway's weekly maintenance start time information, including day and time of the week. The maintenance time is the time in your gateway's time zone.",
        "privilege": "UpdateMaintenanceStartTime",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "gateway*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation updates a NFS file share.",
        "privilege": "UpdateNFSFileShare",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "share*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation updates a SMB file share.",
        "privilege": "UpdateSMBFileShare",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "share*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation updates a snapshot schedule configured for a gateway volume.",
        "privilege": "UpdateSnapshotSchedule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "volume*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This operation updates the type of medium changer in a gateway-VTL.",
        "privilege": "UpdateVTLDeviceType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "device*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/${GatewayId}/device/${Vtldevice}",
        "condition_keys": [],
        "resource": "device"
      },
      {
        "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/${GatewayId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "gateway"
      },
      {
        "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:share/${ShareId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "share"
      },
      {
        "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:tape/${TapeBarcode}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "tape"
      },
      {
        "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/${GatewayId}/target/${IscsiTarget}",
        "condition_keys": [],
        "resource": "target"
      },
      {
        "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/${GatewayId}/volume/${VolumeId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "volume"
      }
    ],
    "service_name": "Amazon Storage Gateway"
  },
  {
    "conditions": [
      {
        "condition": "accounts.google.com:aud",
        "description": "Filters actions based on the Google application ID",
        "type": "String"
      },
      {
        "condition": "accounts.google.com:oaud",
        "description": "Filters actions based on the Google audience",
        "type": "String"
      },
      {
        "condition": "accounts.google.com:sub",
        "description": "Filters actions based on the subject of the claim (the Google user ID)",
        "type": "String"
      },
      {
        "condition": "aws:FederatedProvider",
        "description": "Filters actions based on the IdP that was used to authenticate the user",
        "type": "String"
      },
      {
        "condition": "aws:PrincipalTag/${TagKey}",
        "description": "Filters actions based on the tag associated with the principal that is making the request",
        "type": "String"
      },
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the tags that are passed in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on the tags associated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the tag keys that are passed in the request",
        "type": "String"
      },
      {
        "condition": "cognito-identity.amazonaws.com:amr",
        "description": "Filters actions based on the login information for Amazon Cognito",
        "type": "String"
      },
      {
        "condition": "cognito-identity.amazonaws.com:aud",
        "description": "Filters actions based on the Amazon Cognito identity pool ID",
        "type": "String"
      },
      {
        "condition": "cognito-identity.amazonaws.com:sub",
        "description": "Filters actions based on the subject of the claim (the Amazon Cognito user ID)",
        "type": "String"
      },
      {
        "condition": "graph.facebook.com:app_id",
        "description": "Filters actions based on the Facebook application ID",
        "type": "String"
      },
      {
        "condition": "graph.facebook.com:id",
        "description": "Filters actions based on the Facebook user ID",
        "type": "String"
      },
      {
        "condition": "saml:aud",
        "description": "Filters actions based on the endpoint URL to which SAML assertions are presented",
        "type": "String"
      },
      {
        "condition": "saml:cn",
        "description": "Filters actions based on the eduOrg attribute",
        "type": "String"
      },
      {
        "condition": "saml:commonName",
        "description": "Filters actions based on the commonName attribute",
        "type": "String"
      },
      {
        "condition": "saml:doc",
        "description": "Filters actions based on the principal that was used to assume the role",
        "type": "String"
      },
      {
        "condition": "saml:eduorghomepageuri",
        "description": "Filters actions based on the eduOrg attribute",
        "type": "String"
      },
      {
        "condition": "saml:eduorgidentityauthnpolicyuri",
        "description": "Filters actions based on the eduOrg attribute",
        "type": "String"
      },
      {
        "condition": "saml:eduorglegalname",
        "description": "Filters actions based on the eduOrg attribute",
        "type": "String"
      },
      {
        "condition": "saml:eduorgsuperioruri",
        "description": "Filters actions based on the eduOrg attribute",
        "type": "String"
      },
      {
        "condition": "saml:eduorgwhitepagesuri",
        "description": "Filters actions based on the eduOrg attribute",
        "type": "String"
      },
      {
        "condition": "saml:edupersonaffiliation",
        "description": "Filters actions based on the eduPerson attribute",
        "type": "String"
      },
      {
        "condition": "saml:edupersonassurance",
        "description": "Filters actions based on the eduPerson attribute",
        "type": "String"
      },
      {
        "condition": "saml:edupersonentitlement",
        "description": "Filters actions based on the eduPerson attribute",
        "type": "String"
      },
      {
        "condition": "saml:edupersonnickname",
        "description": "Filters actions based on the eduPerson attribute",
        "type": "String"
      },
      {
        "condition": "saml:edupersonorgdn",
        "description": "Filters actions based on the eduPerson attribute",
        "type": "String"
      },
      {
        "condition": "saml:edupersonorgunitdn",
        "description": "Filters actions based on the eduPerson attribute",
        "type": "String"
      },
      {
        "condition": "saml:edupersonprimaryaffiliation",
        "description": "Filters actions based on the eduPerson attribute",
        "type": "String"
      },
      {
        "condition": "saml:edupersonprimaryorgunitdn",
        "description": "Filters actions based on the eduPerson attribute",
        "type": "String"
      },
      {
        "condition": "saml:edupersonprincipalname",
        "description": "Filters actions based on the eduPerson attribute",
        "type": "String"
      },
      {
        "condition": "saml:edupersonscopedaffiliation",
        "description": "Filters actions based on the eduPerson attribute",
        "type": "String"
      },
      {
        "condition": "saml:edupersontargetedid",
        "description": "Filters actions based on the eduPerson attribute",
        "type": "String"
      },
      {
        "condition": "saml:givenName",
        "description": "Filters actions based on the givenName attribute",
        "type": "String"
      },
      {
        "condition": "saml:iss",
        "description": "Filters actions based on the issuer, which is represented by a URN",
        "type": "String"
      },
      {
        "condition": "saml:mail",
        "description": "Filters actions based on the mail attribute",
        "type": "String"
      },
      {
        "condition": "saml:name",
        "description": "Filters actions based on the name attribute",
        "type": "String"
      },
      {
        "condition": "saml:namequalifier",
        "description": "Filters actions based on the hash value of the issuer, account ID, and friendly name",
        "type": "String"
      },
      {
        "condition": "saml:organizationStatus",
        "description": "Filters actions based on the organizationStatus attribute",
        "type": "String"
      },
      {
        "condition": "saml:primaryGroupSID",
        "description": "Filters actions based on the primaryGroupSID attribute",
        "type": "String"
      },
      {
        "condition": "saml:sub",
        "description": "Filters actions based on the subject of the claim (the SAML user ID)",
        "type": "String"
      },
      {
        "condition": "saml:sub_type",
        "description": "Filters actions based on the value persistent, transient, or the full Format URI",
        "type": "String"
      },
      {
        "condition": "saml:surname",
        "description": "Filters actions based on the surname attribute",
        "type": "String"
      },
      {
        "condition": "saml:uid",
        "description": "Filters actions based on the uid attribute",
        "type": "String"
      },
      {
        "condition": "saml:x500UniqueIdentifier",
        "description": "Filters actions based on the uid attribute",
        "type": "String"
      },
      {
        "condition": "sts:ExternalId",
        "description": "Filters actions based on the unique identifier required when you assume a role in another account",
        "type": "String"
      },
      {
        "condition": "sts:RoleSessionName",
        "description": "Filters actions based on the role session name required when you assume a role",
        "type": "String"
      },
      {
        "condition": "sts:TransitiveTagKeys",
        "description": "Filters actions based on the transitive tag keys that are passed in the request",
        "type": "String"
      },
      {
        "condition": "www.amazon.com:app_id",
        "description": "Filters actions based on the Login with Amazon application ID",
        "type": "String"
      },
      {
        "condition": "www.amazon.com:user_id",
        "description": "Filters actions based on the Login with Amazon user ID",
        "type": "String"
      }
    ],
    "prefix": "sts",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Returns a set of temporary security credentials that you can use to access AWS resources that you might not normally have access to",
        "privilege": "AssumeRole",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:PrincipalTag/${TagKey}",
              "aws:RequestTag/${TagKey}",
              "sts:TransitiveTagKeys",
              "sts:ExternalId",
              "sts:RoleSessionName"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Returns a set of temporary security credentials for users who have been authenticated via a SAML authentication response",
        "privilege": "AssumeRoleWithSAML",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          },
          {
            "condition_keys": [
              "saml:namequalifier",
              "saml:sub",
              "saml:sub_type",
              "saml:aud",
              "saml:iss",
              "saml:doc",
              "saml:cn",
              "saml:commonName",
              "saml:eduorghomepageuri",
              "saml:eduorgidentityauthnpolicyuri",
              "saml:eduorglegalname",
              "saml:eduorgsuperioruri",
              "saml:eduorgwhitepagesuri",
              "saml:edupersonaffiliation",
              "saml:edupersonassurance",
              "saml:edupersonentitlement",
              "saml:edupersonnickname",
              "saml:edupersonorgdn",
              "saml:edupersonorgunitdn",
              "saml:edupersonprimaryaffiliation",
              "saml:edupersonprimaryorgunitdn",
              "saml:edupersonprincipalname",
              "saml:edupersonscopedaffiliation",
              "saml:edupersontargetedid",
              "saml:givenName",
              "saml:mail",
              "saml:name",
              "saml:organizationStatus",
              "saml:primaryGroupSID",
              "saml:surname",
              "saml:uid",
              "saml:x500UniqueIdentifier",
              "aws:TagKeys",
              "aws:PrincipalTag/${TagKey}",
              "aws:RequestTag/${TagKey}",
              "sts:TransitiveTagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Returns a set of temporary security credentials for users who have been authenticated in a mobile or web application with a web identity provider",
        "privilege": "AssumeRoleWithWebIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role*"
          },
          {
            "condition_keys": [
              "cognito-identity.amazonaws.com:amr",
              "cognito-identity.amazonaws.com:aud",
              "cognito-identity.amazonaws.com:sub",
              "www.amazon.com:app_id",
              "www.amazon.com:user_id",
              "graph.facebook.com:app_id",
              "graph.facebook.com:id",
              "accounts.google.com:aud",
              "accounts.google.com:oaud",
              "accounts.google.com:sub",
              "aws:TagKeys",
              "aws:PrincipalTag/${TagKey}",
              "aws:RequestTag/${TagKey}",
              "sts:TransitiveTagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Decodes additional information about the authorization status of a request from an encoded message returned in response to an AWS request",
        "privilege": "DecodeAuthorizationMessage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns details about the access key id passed as a parameter to the request.",
        "privilege": "GetAccessKeyInfo",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns details about the IAM identity whose credentials are used to call the API",
        "privilege": "GetCallerIdentity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a set of temporary security credentials (consisting of an access key ID, a secret access key, and a security token) for a federated user",
        "privilege": "GetFederationToken",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:PrincipalTag/${TagKey}",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a set of temporary security credentials (consisting of an access key ID, a secret access key, and a security token) for an AWS account or IAM user",
        "privilege": "GetSessionToken",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to add tags to a STS session",
        "privilege": "TagSession",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "role"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:PrincipalTag/${TagKey}",
              "aws:RequestTag/${TagKey}",
              "sts:TransitiveTagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:iam::${Account}:role/${RoleNameWithPath}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "role"
      },
      {
        "arn": "arn:${Partition}:iam::${Account}:user/${UserNameWithPath}",
        "condition_keys": [],
        "resource": "user"
      }
    ],
    "service_name": "AWS Security Token Service"
  },
  {
    "conditions": [],
    "prefix": "sumerian",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grant login access to the Sumerian console.",
        "privilege": "Login",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grant access to view a project release.",
        "privilege": "ViewRelease",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "project*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:sumerian:${Region}:${Account}:project:${ProjectName}",
        "condition_keys": [],
        "resource": "project"
      }
    ],
    "service_name": "Amazon Sumerian"
  },
  {
    "conditions": [],
    "prefix": "support",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Adds one or more attachments to an AWS Support case.",
        "privilege": "AddAttachmentsToSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds a customer communication to an AWS Support case.",
        "privilege": "AddCommunicationToCase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new AWS Support case.",
        "privilege": "CreateCase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the description for an attachment.",
        "privilege": "DescribeAttachment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "This is an internally managed function which allows secondary services to read AWS Support case attributes.",
        "privilege": "DescribeCaseAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of AWS Support cases that matches the given inputs.",
        "privilege": "DescribeCases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the communications and attachments for one or more AWS Support cases.",
        "privilege": "DescribeCommunications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns issue types for AWS Support cases.",
        "privilege": "DescribeIssueTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the current list of AWS services and categories that applies to each service.",
        "privilege": "DescribeServices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the list of severity levels that can be assigned to an AWS Support case.",
        "privilege": "DescribeSeverityLevels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the support level for an AWS Account identifier.",
        "privilege": "DescribeSupportLevel",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the status of a Trusted Advisor refresh check based on a list of check identifiers.",
        "privilege": "DescribeTrustedAdvisorCheckRefreshStatuses",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the results of the Trusted Advisor check that has the specified check identifier.",
        "privilege": "DescribeTrustedAdvisorCheckResult",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the summaries of the results of the Trusted Advisor checks that have the specified check identifiers.",
        "privilege": "DescribeTrustedAdvisorCheckSummaries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of all available Trusted Advisor checks, including name, identifier, category and description.",
        "privilege": "DescribeTrustedAdvisorChecks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This is an internally managed function to initiate a call on AWS Support Center.",
        "privilege": "InitiateCallForCase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This is an internally managed function to initiate a chat on AWS Support Center.",
        "privilege": "InitiateChatForCase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "This is an internally managed function which allows secondary services to attach attributes to AWS Support cases.",
        "privilege": "PutCaseAttributes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Rate an AWS Support case communication.",
        "privilege": "RateCaseCommunication",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Requests a refresh of the Trusted Advisor check that has the specified check identifier.",
        "privilege": "RefreshTrustedAdvisorCheck",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Resolves an AWS Support case.",
        "privilege": "ResolveCase",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of AWS Support cases that matches the given inputs.",
        "privilege": "SearchForCases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "AWS Support"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Tag for request.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Tag for resource.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Tag for key.",
        "type": "String"
      },
      {
        "condition": "swf:activityType.name",
        "description": "Constrains the policy statement to only an activity type of the specified name.",
        "type": "String"
      },
      {
        "condition": "swf:activityType.version",
        "description": "Contstrains the policy statement to only an activity type of the specified version.",
        "type": "String"
      },
      {
        "condition": "swf:defaultTaskList.name",
        "description": "Constrains the policy statement to only requests that specify a matching defaultTaskList name.",
        "type": "String"
      },
      {
        "condition": "swf:name",
        "description": "Constrains the policy statement to only activities or workflows with the specified name.",
        "type": "String"
      },
      {
        "condition": "swf:tagFilter.tag",
        "description": "Constrains the policy statement to only requests that specify a matching tagFilter.tag value.",
        "type": "String"
      },
      {
        "condition": "swf:tagList.member.0",
        "description": "Constrains the policy statement to only requests that contain the specified tag.",
        "type": "String"
      },
      {
        "condition": "swf:tagList.member.1",
        "description": "Constrains the policy statement to only requests that contain the specified tag.",
        "type": "String"
      },
      {
        "condition": "swf:tagList.member.2",
        "description": "Constrains the policy statement to only requests that contain the specified tag.",
        "type": "String"
      },
      {
        "condition": "swf:tagList.member.3",
        "description": "Constrains the policy statement to only requests that contain the specified tag.",
        "type": "String"
      },
      {
        "condition": "swf:tagList.member.4",
        "description": "Constrains the policy statement to only requests that contain the specified tag.",
        "type": "String"
      },
      {
        "condition": "swf:taskList.name",
        "description": "Constrains the policy statement to only requests that specify a tasklist with the specified name.",
        "type": "String"
      },
      {
        "condition": "swf:typeFilter.name",
        "description": "Constrains the policy statement to only requests that specify a type filter with the specified name.",
        "type": "String"
      },
      {
        "condition": "swf:typeFilter.version",
        "description": "Constrains the policy statement to only requests that specify a type filter with the specified version.",
        "type": "String"
      },
      {
        "condition": "swf:version",
        "description": "Constrains the policy statement to only activities or workflows with the specified version.",
        "type": "String"
      },
      {
        "condition": "swf:workflowType.name",
        "description": "Constrains the policy statement to only a workflow of the specified type.",
        "type": "String"
      },
      {
        "condition": "swf:workflowType.name",
        "description": "Constrains the policy statement to only requests that specify a workflow type of the specified name.",
        "type": "String"
      },
      {
        "condition": "swf:workflowType.version",
        "description": "Constrains the policy statement to only requests that specify a workflow type of the specified version.",
        "type": "String"
      }
    ],
    "prefix": "swf",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Description for CancelTimer",
        "privilege": "CancelTimer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Description for CancelWorkflowExecution",
        "privilege": "CancelWorkflowExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Description for CompleteWorkflowExecution",
        "privilege": "CompleteWorkflowExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Description for ContinueAsNewWorkflowExecution",
        "privilege": "ContinueAsNewWorkflowExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the number of closed workflow executions within the given domain that meet the specified filtering criteria.",
        "privilege": "CountClosedWorkflowExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "swf:tagFilter.tag",
              "swf:typeFilter.name",
              "swf:typeFilter.version"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the number of open workflow executions within the given domain that meet the specified filtering criteria.",
        "privilege": "CountOpenWorkflowExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "swf:tagFilter.tag",
              "swf:typeFilter.name",
              "swf:typeFilter.version"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the estimated number of activity tasks in the specified task list.",
        "privilege": "CountPendingActivityTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "swf:taskList.name"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the estimated number of decision tasks in the specified task list.",
        "privilege": "CountPendingDecisionTasks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "swf:taskList.name"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deprecates the specified activity type.",
        "privilege": "DeprecateActivityType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "swf:activityType.name",
              "swf:activityType.version"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deprecates the specified domain.",
        "privilege": "DeprecateDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deprecates the specified workflow type.",
        "privilege": "DeprecateWorkflowType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "swf:workflowType.name",
              "swf:workflowType.version"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the specified activity type.",
        "privilege": "DescribeActivityType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "swf:activityType.name",
              "swf:activityType.version"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the specified domain, including description and status.",
        "privilege": "DescribeDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the specified workflow execution including its type and some statistics.",
        "privilege": "DescribeWorkflowExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the specified workflow type.",
        "privilege": "DescribeWorkflowType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "swf:workflowType.name",
              "swf:workflowType.version"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Description for FailWorkflowExecution",
        "privilege": "FailWorkflowExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the history of the specified workflow execution.",
        "privilege": "GetWorkflowExecutionHistory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about all activities registered in the specified domain that match the specified name and registration status.",
        "privilege": "ListActivityTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of closed workflow executions in the specified domain that meet the filtering criteria.",
        "privilege": "ListClosedWorkflowExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "swf:tagFilter.tag",
              "swf:typeFilter.name",
              "swf:typeFilter.version"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the list of domains registered in the account.",
        "privilege": "ListDomains",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of open workflow executions in the specified domain that meet the filtering criteria.",
        "privilege": "ListOpenWorkflowExecutions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "swf:tagFilter.tag",
              "swf:typeFilter.name",
              "swf:typeFilter.version"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "This action lists tags for an AWS SWF resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns information about workflow types in the specified domain.",
        "privilege": "ListWorkflowTypes",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used by workers to get an ActivityTask from the specified activity taskList.",
        "privilege": "PollForActivityTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "swf:taskList.name"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used by deciders to get a DecisionTask from the specified decision taskList.",
        "privilege": "PollForDecisionTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "swf:taskList.name"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used by activity workers to report to the service that the ActivityTask represented by the specified taskToken is still making progress.",
        "privilege": "RecordActivityTaskHeartbeat",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Description for RecordMarker",
        "privilege": "RecordMarker",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers a new activity type along with its configuration settings in the specified domain.",
        "privilege": "RegisterActivityType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "swf:defaultTaskList.name",
              "swf:name",
              "swf:version"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers a new domain.",
        "privilege": "RegisterDomain",
        "resource_types": [
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers a new workflow type and its configuration settings in the specified domain.",
        "privilege": "RegisterWorkflowType",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "swf:defaultTaskList.name",
              "swf:name",
              "swf:version"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Description for RequestCancelActivityTask",
        "privilege": "RequestCancelActivityTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Description for RequestCancelExternalWorkflowExecution",
        "privilege": "RequestCancelExternalWorkflowExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Records a WorkflowExecutionCancelRequested event in the currently running workflow execution identified by the given domain, workflowId, and runId.",
        "privilege": "RequestCancelWorkflowExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used by workers to tell the service that the ActivityTask identified by the taskToken was successfully canceled.",
        "privilege": "RespondActivityTaskCanceled",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used by workers to tell the service that the ActivityTask identified by the taskToken completed successfully with a result (if provided).",
        "privilege": "RespondActivityTaskCompleted",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "swf:activityType.name",
              "swf:activityType.version",
              "swf:tagList.member.0",
              "swf:tagList.member.1",
              "swf:tagList.member.2",
              "swf:tagList.member.3",
              "swf:tagList.member.4",
              "swf:taskList.name",
              "swf:workflowType.name",
              "swf:workflowType.version"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used by workers to tell the service that the ActivityTask identified by the taskToken has failed with reason (if specified).",
        "privilege": "RespondActivityTaskFailed",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used by deciders to tell the service that the DecisionTask identified by the taskToken has successfully completed.",
        "privilege": "RespondDecisionTaskCompleted",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Description for ScheduleActivityTask",
        "privilege": "ScheduleActivityTask",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Description for SignalExternalWorkflowExecution",
        "privilege": "SignalExternalWorkflowExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Records a WorkflowExecutionSignaled event in the workflow execution history and creates a decision task for the workflow execution identified by the given domain, workflowId and runId.",
        "privilege": "SignalWorkflowExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Description for StartChildWorkflowExecution",
        "privilege": "StartChildWorkflowExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Description for StartTimer",
        "privilege": "StartTimer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts an execution of the workflow type in the specified domain using the provided workflowId and input data.",
        "privilege": "StartWorkflowExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          },
          {
            "condition_keys": [
              "swf:tagList.member.0",
              "swf:tagList.member.1",
              "swf:tagList.member.2",
              "swf:tagList.member.3",
              "swf:tagList.member.4",
              "swf:taskList.name",
              "swf:workflowType.name",
              "swf:workflowType.version"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action tags an AWS SWF resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Records a WorkflowExecutionTerminated event and forces closure of the workflow execution identified by the given domain, runId, and workflowId.",
        "privilege": "TerminateWorkflowExecution",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "This action removes a tag from an AWS SWF resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "domain"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:swf::${Account}:domain/${DomainName}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "domain"
      }
    ],
    "service_name": "Amazon Simple Workflow Service"
  },
  {
    "conditions": [],
    "prefix": "synthetics",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Create a canary.",
        "privilege": "CreateCanary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a canary. Amazon Synthetics deletes all the resources except for the Lambda function and the CloudWatch Alarms if you created one.",
        "privilege": "DeleteCanary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "canary*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information of all canaries.",
        "privilege": "DescribeCanaries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about the last test run associated with all canaries.",
        "privilege": "DescribeCanariesLastRun",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about all the test runs associated with a canary.",
        "privilege": "GetCanaryRuns",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "canary*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns a list of all tags and values associated with a canary.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "canary"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a canary, so that Amazon Synthetics starts monitoring a website.",
        "privilege": "StartCanary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "canary*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops a canary.",
        "privilege": "StopCanary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "canary*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds one or more tags to a canary.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "canary"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes one or more tags from a canary.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "canary"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a canary.",
        "privilege": "UpdateCanary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "canary*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:synthetics::${Account}:canary:${CanaryName}",
        "condition_keys": [],
        "resource": "canary"
      }
    ],
    "service_name": "Amazon CloudWatch Synthetics"
  },
  {
    "conditions": [],
    "prefix": "tag",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Describe the status of the StartReportCreation operation.",
        "privilege": "DescribeReportCreation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get a table that shows counts of resources that are noncompliant with their effective tag policies.",
        "privilege": "GetComplianceSummary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get tagged AWS resources that match the given tag filters",
        "privilege": "GetResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get all tagKeys for the account in the specific region",
        "privilege": "GetTagKeys",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get all tagValues for the account in the specific region",
        "privilege": "GetTagValues",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Generate a report that lists all tagged resources in accounts across your organization, and whether each resource is compliant with the effective tag policy.",
        "privilege": "StartReportCreation",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Add tags to AWS resources",
        "privilege": "TagResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Remove tags from AWS resources",
        "privilege": "UntagResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon Resource Group Tagging API"
  },
  {
    "conditions": [],
    "prefix": "textract",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Detects instances of real-world document entities within an image provided as input.",
        "privilege": "AnalyzeDocument",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:GetObject"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Detects text in document images.",
        "privilege": "DetectDocumentText",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:GetObject"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a document analysis job.",
        "privilege": "GetDocumentAnalysis",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a document text detection job.",
        "privilege": "GetDocumentTextDetection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts an asynchronous job to detect instances of real-world document entities within an image or pdf provided as input.",
        "privilege": "StartDocumentAnalysis",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:GetObject"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts an asynchronous job to detect text in document images or pdfs.",
        "privilege": "StartDocumentTextDetection",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:GetObject"
            ],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon Textract"
  },
  {
    "conditions": [],
    "prefix": "transcribe",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a new custom vocabulary that you can use to change the way Amazon Transcribe handles transcription of an audio file.",
        "privilege": "CreateVocabulary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:GetObject"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new vocabulary filter that you can use to filter out words from the transcription of an audio file generated by Amazon Transcribe",
        "privilege": "CreateVocabularyFilter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:GetObject"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a previously submitted medical transcription job.",
        "privilege": "DeleteMedicalTranscriptionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a previously submitted transcription job along with any other generated results such as the transcription, models, and so on.",
        "privilege": "DeleteTranscriptionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a vocabulary from Amazon Transcribe.",
        "privilege": "DeleteVocabulary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a vocabulary filter from Amazon Transcribe.",
        "privilege": "DeleteVocabularyFilter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a medical transcription job.",
        "privilege": "GetMedicalTranscriptionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns information about a transcription job.",
        "privilege": "GetTranscriptionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about a vocabulary.",
        "privilege": "GetVocabulary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets information about a vocabulary filter.",
        "privilege": "GetVocabularyFilter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists medical transcription jobs with the specified status.",
        "privilege": "ListMedicalTranscriptionJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists transcription jobs with the specified status.",
        "privilege": "ListTranscriptionJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of vocabularies that match the specified criteria. If no criteria are specified, returns the entire list of vocabularies.",
        "privilege": "ListVocabularies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of vocabulary filters that match the specified criteria. If no criteria are specified, returns the at most 5 vocabulary filters.",
        "privilege": "ListVocabularyFilters",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a protocol where audio is streamed to Transcribe Medical and the transcription results are streamed to your application.",
        "privilege": "StartMedicalStreamTranscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts an asynchronous job to transcribe medical speech to text.",
        "privilege": "StartMedicalTranscriptionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:GetObject"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts a bidirectional HTTP2 stream to transcribe speech to text in real time.",
        "privilege": "StartStreamTranscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts an asynchronous job to transcribe speech to text.",
        "privilege": "StartTranscriptionJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:GetObject"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing vocabulary with new values. The UpdateVocabulary operation overwrites all of the existing information with the values that you provide in the request.",
        "privilege": "UpdateVocabulary",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:GetObject"
            ],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates an existing vocabulary filter with new values. The UpdateVocabularyFilter operation overwrites all of the existing information with the values that you provide in the request.",
        "privilege": "UpdateVocabularyFilter",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "s3:GetObject"
            ],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon Transcribe"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "A key that is present in the request the user makes.",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "A key that is present on the resource the user makes.",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "The list of all the tag key names associated with the resource in the request.",
        "type": "String"
      }
    ],
    "prefix": "transfer",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Enables the caller to create a server.",
        "privilege": "CreateServer",
        "resource_types": [
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the caller to add a user associated with a server.",
        "privilege": "CreateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:PassRole"
            ],
            "resource_type": "server*"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the caller to delete a server.",
        "privilege": "DeleteServer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "server*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the caller to delete an SSH public key from a user.",
        "privilege": "DeleteSshPublicKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the caller to delete a user associated with a server.",
        "privilege": "DeleteUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Enables the caller to describe a server.",
        "privilege": "DescribeServer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "server*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Enables the caller to describe a user associated with a server.",
        "privilege": "DescribeUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the caller to add an SSH public key to a user.",
        "privilege": "ImportSshPublicKey",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Enables the caller to list servers",
        "privilege": "ListServers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Enables the caller to list tags for a server or a user.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "server"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Enables the caller to list users associated with a server.",
        "privilege": "ListUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the caller to start a server.",
        "privilege": "StartServer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "server*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the caller to stop a server.",
        "privilege": "StopServer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "server*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Enables the caller to tag a server or a user.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "server"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Enables the caller to test a server's custom identity provider.",
        "privilege": "TestIdentityProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "server*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Enables the caller to untag a server or a user.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "server"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the caller to update the configuration of a server",
        "privilege": "UpdateServer",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "server*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enables the caller to update the configuration of a user",
        "privilege": "UpdateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "server*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "user*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:transfer:${region}:${account}:user/${serverId}/${username}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "user"
      },
      {
        "arn": "arn:${Partition}:transfer:${region}:${account}:server/${serverId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "server"
      }
    ],
    "service_name": "AWS Transfer for SFTP"
  },
  {
    "conditions": [],
    "prefix": "translate",
    "privileges": [
      {
        "access_level": "Write",
        "description": "A synchronous action that deletes a custom terminology.",
        "privilege": "DeleteTerminology",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the properties associated with an asynchronous batch translation job including name, ID, status, source and target languages, input/output S3 buckets, and so on.",
        "privilege": "DescribeTextTranslationJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a custom terminology.",
        "privilege": "GetTerminology",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates or updates a custom terminology, depending on whether or not one already exists for the given terminology name.",
        "privilege": "ImportTerminology",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Provides a list of custom terminologies associated with your account.",
        "privilege": "ListTerminologies",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets a list of the batch translation jobs that you have submitted.",
        "privilege": "ListTextTranslationJobs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts an asynchronous batch translation job. Batch translation jobs can be used to translate large volumes of text across multiple documents at once.",
        "privilege": "StartTextTranslationJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops an asynchronous batch translation job that is in progress.",
        "privilege": "StopTextTranslationJob",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Translate text from a source language to a target language.",
        "privilege": "TranslateText",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon Translate"
  },
  {
    "conditions": [],
    "prefix": "trustedadvisor",
    "privileges": [
      {
        "access_level": "Read",
        "description": "View support plan and various TA preferences.",
        "privilege": "DescribeAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Resolve whether Account has disabled Trusted Advisor",
        "privilege": "DescribeAccountAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "View details for the check items",
        "privilege": "DescribeCheckItems",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "checks*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describe check refresh statuses",
        "privilege": "DescribeCheckRefreshStatuses",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "checks*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the check's summaries",
        "privilege": "DescribeCheckSummaries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "checks*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "List valid Trusted Advisor checks and details.",
        "privilege": "DescribeChecks",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the notification preferences for the account",
        "privilege": "DescribeNotificationPreferences",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Exclude recommendations for checks for a given customer",
        "privilege": "ExcludeCheckItems",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "checks*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Include recommendations for checks for a given customer",
        "privilege": "IncludeCheckItems",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "checks*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enqueue a refresh for the specified check",
        "privilege": "RefreshCheck",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "checks*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Toggle whether TrustedAdvisor is enabled/disabled for the account",
        "privilege": "SetAccountAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update notification preferences",
        "privilege": "UpdateNotificationPreferences",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:trustedadvisor:${Region}:${Account}:checks/${CategoryCode}/${CheckId}",
        "condition_keys": [],
        "resource": "checks"
      }
    ],
    "service_name": "AWS Trusted Advisor"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value assoicated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of mandatory tags in the request",
        "type": "String"
      }
    ],
    "prefix": "waf",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a ByteMatchSet.",
        "privilege": "CreateByteMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bytematchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a GeoMatchSet, which you use to specify which web requests you want to allow or block based on the country that the requests originate from.",
        "privilege": "CreateGeoMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "geomatchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an IPSet, which you use to specify which web requests you want to allow or block based on the IP addresses that the requests originate from.",
        "privilege": "CreateIPSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a RateBasedRule, which contains a RateLimit specifying the maximum number of requests that AWS WAF allows from a specified IP address in a five-minute period.",
        "privilege": "CreateRateBasedRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ratebasedrule*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a RegexMatchSet, which you use to specify which web requests you want to allow or block based on the regex patterns you specified in a RegexPatternSet.",
        "privilege": "CreateRegexMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexmatchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a RegexPatternSet, which you use to specify the regular expression (regex) pattern that you want AWS WAF to search for.",
        "privilege": "CreateRegexPatternSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexpatternset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a Rule, which contains the IPSet objects, ByteMatchSet objects, and other predicates that identify the requests that you want to block.",
        "privilege": "CreateRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a RuleGroup. A rule group is a collection of predefined rules that you add to a WebACL.",
        "privilege": "CreateRuleGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a SizeConstraintSet, which you use to identify the part of a web request that you want to check for length.",
        "privilege": "CreateSizeConstraintSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sizeconstraintset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a SqlInjectionMatchSet, which you use to allow, block, or count requests that contain snippets of SQL code in a specified part of web requests.",
        "privilege": "CreateSqlInjectionMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sqlinjectionmatchset*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Creates a WebACL, which contains the Rules that identify the CloudFront web requests that you want to allow, block, or count.",
        "privilege": "CreateWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an XssMatchSet, which you use to allow, block, or count requests that contain cross-site scripting attacks in the specified part of web requests.",
        "privilege": "CreateXssMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "xssmatchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes a ByteMatchSet.",
        "privilege": "DeleteByteMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bytematchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes an GeoMatchSet.",
        "privilege": "DeleteGeoMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "geomatchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes an IPSet.",
        "privilege": "DeleteIPSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes the LoggingConfiguration from the specified web ACL.",
        "privilege": "DeleteLoggingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Permanently deletes an IAM policy from the specified RuleGroup.",
        "privilege": "DeletePermissionPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes a RateBasedRule.",
        "privilege": "DeleteRateBasedRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ratebasedrule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes an RegexMatchSet.",
        "privilege": "DeleteRegexMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexmatchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes an RegexPatternSet.",
        "privilege": "DeleteRegexPatternSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexpatternset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes a Rule.",
        "privilege": "DeleteRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes a RuleGroup.",
        "privilege": "DeleteRuleGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes a SizeConstraintSet.",
        "privilege": "DeleteSizeConstraintSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sizeconstraintset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes a SqlInjectionMatchSet.",
        "privilege": "DeleteSqlInjectionMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sqlinjectionmatchset*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Permanently deletes a WebACL.",
        "privilege": "DeleteWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes an XssMatchSet.",
        "privilege": "DeleteXssMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "xssmatchset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the ByteMatchSet specified by ByteMatchSetId.",
        "privilege": "GetByteMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bytematchset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "When you want to create, update, or delete AWS WAF objects, get a change token and include the change token in the create, update, or delete request.",
        "privilege": "GetChangeToken",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the status of a ChangeToken that you got by calling GetChangeToken.",
        "privilege": "GetChangeTokenStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the GeoMatchSet specified by GeoMatchSetId.",
        "privilege": "GetGeoMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "geomatchset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the IPSet that is specified by IPSetId.",
        "privilege": "GetIPSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the LoggingConfiguration for the specified web ACL.",
        "privilege": "GetLoggingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the IAM policy attached to the RuleGroup.",
        "privilege": "GetPermissionPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the RateBasedRule that is specified by the RuleId that you included in the GetRateBasedRule request.",
        "privilege": "GetRateBasedRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ratebasedrule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns an array of IP addresses currently being blocked by the RateBasedRule that is specified by the RuleId.",
        "privilege": "GetRateBasedRuleManagedKeys",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ratebasedrule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the RegexMatchSet specified by RegexMatchSetId.",
        "privilege": "GetRegexMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexmatchset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the RegexPatternSet specified by RegexPatternSetId.",
        "privilege": "GetRegexPatternSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexpatternset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the Rule that is specified by the RuleId that you included in the GetRule request.",
        "privilege": "GetRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the RuleGroup that is specified by the RuleGroupId that you included in the GetRuleGroup request.",
        "privilege": "GetRuleGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets detailed information about a specified number of requests--a sample--that AWS WAF randomly selects from among the first 5,000 requests that your AWS resource received during a time range that you choose.",
        "privilege": "GetSampledRequests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the SizeConstraintSet specified by SizeConstraintSetId.",
        "privilege": "GetSizeConstraintSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sizeconstraintset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the SqlInjectionMatchSet that is specified by SqlInjectionMatchSetId.",
        "privilege": "GetSqlInjectionMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sqlinjectionmatchset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the WebACL that is specified by WebACLId.",
        "privilege": "GetWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the XssMatchSet that is specified by XssMatchSetId.",
        "privilege": "GetXssMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "xssmatchset*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of ActivatedRule objects.",
        "privilege": "ListActivatedRulesInRuleGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of ByteMatchSetSummary objects.",
        "privilege": "ListByteMatchSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of GeoMatchSetSummary objects.",
        "privilege": "ListGeoMatchSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of IPSetSummary objects in the response.",
        "privilege": "ListIPSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of LoggingConfiguration objects.",
        "privilege": "ListLoggingConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of RuleSummary objects.",
        "privilege": "ListRateBasedRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of RegexMatchSetSummary objects.",
        "privilege": "ListRegexMatchSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of RegexPatternSetSummary objects.",
        "privilege": "ListRegexPatternSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of RuleGroup objects.",
        "privilege": "ListRuleGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of RuleSummary objects.",
        "privilege": "ListRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of SizeConstraintSetSummary objects.",
        "privilege": "ListSizeConstraintSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of SqlInjectionMatchSet objects.",
        "privilege": "ListSqlInjectionMatchSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of RuleGroup objects that you are subscribed to.",
        "privilege": "ListSubscribedRuleGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the Tags for a given resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ratebasedrule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of WebACLSummary objects in the response.",
        "privilege": "ListWebACLs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of XssMatchSet objects.",
        "privilege": "ListXssMatchSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates a LoggingConfiguration with a specified web ACL.",
        "privilege": "PutLoggingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:CreateServiceLinkedRole"
            ],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Attaches a IAM policy to the specified resource. The only supported use for this action is to share a RuleGroup across accounts.",
        "privilege": "PutPermissionPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds a Tag to a given resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ratebasedrule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes a Tag from a given resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ratebasedrule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes ByteMatchTuple objects (filters) in a ByteMatchSet.",
        "privilege": "UpdateByteMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bytematchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes GeoMatchConstraint objects in a GeoMatchSet.",
        "privilege": "UpdateGeoMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "geomatchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes IPSetDescriptor objects in an IPSet.",
        "privilege": "UpdateIPSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes Predicate objects in a rule and updates the RateLimit in the rule.",
        "privilege": "UpdateRateBasedRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ratebasedrule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes RegexMatchTuple objects (filters) in a RegexMatchSet.",
        "privilege": "UpdateRegexMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexmatchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes RegexPatternStrings in a RegexPatternSet.",
        "privilege": "UpdateRegexPatternSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexpatternset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes Predicate objects in a Rule.",
        "privilege": "UpdateRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes ActivatedRule objects in a RuleGroup.",
        "privilege": "UpdateRuleGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes SizeConstraint objects (filters) in a SizeConstraintSet.",
        "privilege": "UpdateSizeConstraintSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sizeconstraintset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes SqlInjectionMatchTuple objects (filters) in a SqlInjectionMatchSet.",
        "privilege": "UpdateSqlInjectionMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sqlinjectionmatchset*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Inserts or deletes ActivatedRule objects in a WebACL.",
        "privilege": "UpdateWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes XssMatchTuple objects (filters) in an XssMatchSet.",
        "privilege": "UpdateXssMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "xssmatchset*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:waf::${Account}:bytematchset/${Id}",
        "condition_keys": [],
        "resource": "bytematchset"
      },
      {
        "arn": "arn:${Partition}:waf::${Account}:ipset/${Id}",
        "condition_keys": [],
        "resource": "ipset"
      },
      {
        "arn": "arn:${Partition}:waf::${Account}:ratebasedrule/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "ratebasedrule"
      },
      {
        "arn": "arn:${Partition}:waf::${Account}:rule/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "rule"
      },
      {
        "arn": "arn:${Partition}:waf::${Account}:sizeconstraintset/${Id}",
        "condition_keys": [],
        "resource": "sizeconstraintset"
      },
      {
        "arn": "arn:${Partition}:waf::${Account}:sqlinjectionmatchset/${Id}",
        "condition_keys": [],
        "resource": "sqlinjectionmatchset"
      },
      {
        "arn": "arn:${Partition}:waf::${Account}:webacl/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "webacl"
      },
      {
        "arn": "arn:${Partition}:waf::${Account}:xssmatchset/${Id}",
        "condition_keys": [],
        "resource": "xssmatchset"
      },
      {
        "arn": "arn:${Partition}:waf::${Account}:regexmatch/${Id}",
        "condition_keys": [],
        "resource": "regexmatchset"
      },
      {
        "arn": "arn:${Partition}:waf::${Account}:regexpatternset/${Id}",
        "condition_keys": [],
        "resource": "regexpatternset"
      },
      {
        "arn": "arn:${Partition}:waf::${Account}:geomatchset/${Id}",
        "condition_keys": [],
        "resource": "geomatchset"
      },
      {
        "arn": "arn:${Partition}:waf::${Account}:rulegroup/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "rulegroup"
      }
    ],
    "service_name": "AWS WAF"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value assoicated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of mandatory tags in the request",
        "type": "String"
      }
    ],
    "prefix": "waf-regional",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Associates a WebACL with a resource.",
        "privilege": "AssociateWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/app/*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a ByteMatchSet.",
        "privilege": "CreateByteMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bytematchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a GeoMatchSet, which you use to specify which web requests you want to allow or block based on the country that the requests originate rom.",
        "privilege": "CreateGeoMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "geomatchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an IPSet, which you use to specify which web requests you want to allow or block based on the IP addresses that the requests originate rom.",
        "privilege": "CreateIPSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a RateBasedRule, which contains a RateLimit specifying the maximum number of requests that AWS WAF allows from a specified IP address n a five-minute period.",
        "privilege": "CreateRateBasedRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ratebasedrule*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a RegexMatchSet, which you use to specify which web requests you want to allow or block based on the regex patterns you specified in a egexPatternSet.",
        "privilege": "CreateRegexMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexmatchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a RegexPatternSet, which you use to specify the regular expression (regex) pattern that you want AWS WAF to search for.",
        "privilege": "CreateRegexPatternSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexpatternset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a Rule, which contains the IPSet objects, ByteMatchSet objects, and other predicates that identify the requests that you want to lock.",
        "privilege": "CreateRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a RuleGroup. A rule group is a collection of predefined rules that you add to a WebACL.",
        "privilege": "CreateRuleGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a SizeConstraintSet, which you use to identify the part of a web request that you want to check for length.",
        "privilege": "CreateSizeConstraintSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sizeconstraintset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a SqlInjectionMatchSet, which you use to allow, block, or count requests that contain snippets of SQL code in a specified part of web equests.",
        "privilege": "CreateSqlInjectionMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sqlinjectionmatchset*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Creates a WebACL, which contains the Rules that identify the CloudFront web requests that you want to allow, block, or count.",
        "privilege": "CreateWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an XssMatchSet, which you use to allow, block, or count requests that contain cross-site scripting attacks in the specified part of web equests.",
        "privilege": "CreateXssMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "xssmatchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes a ByteMatchSet.",
        "privilege": "DeleteByteMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bytematchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes an GeoMatchSet.",
        "privilege": "DeleteGeoMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "geomatchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes an IPSet.",
        "privilege": "DeleteIPSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes the LoggingConfiguration from the specified web ACL.",
        "privilege": "DeleteLoggingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Permanently deletes an IAM policy from the specified RuleGroup.",
        "privilege": "DeletePermissionPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes a RateBasedRule.",
        "privilege": "DeleteRateBasedRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ratebasedrule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes an RegexMatchSet.",
        "privilege": "DeleteRegexMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexmatchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes an RegexPatternSet.",
        "privilege": "DeleteRegexPatternSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexpatternset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes a Rule.",
        "privilege": "DeleteRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes a RuleGroup.",
        "privilege": "DeleteRuleGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes a SizeConstraintSet.",
        "privilege": "DeleteSizeConstraintSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sizeconstraintset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes a SqlInjectionMatchSet.",
        "privilege": "DeleteSqlInjectionMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sqlinjectionmatchset*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Permanently deletes a WebACL.",
        "privilege": "DeleteWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Permanently deletes an XssMatchSet.",
        "privilege": "DeleteXssMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "xssmatchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes a WebACL from the specified resource.",
        "privilege": "DisassociateWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/app/*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the ByteMatchSet specified by ByteMatchSetId.",
        "privilege": "GetByteMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bytematchset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "When you want to create, update, or delete AWS WAF objects, get a change token and include the change token in the create, update, or delete equest.",
        "privilege": "GetChangeToken",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the status of a ChangeToken that you got by calling GetChangeToken.",
        "privilege": "GetChangeTokenStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the GeoMatchSet specified by GeoMatchSetId.",
        "privilege": "GetGeoMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "geomatchset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the IPSet that is specified by IPSetId.",
        "privilege": "GetIPSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the LoggingConfiguration for the specified web ACL.",
        "privilege": "GetLoggingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the IAM policy attached to the RuleGroup.",
        "privilege": "GetPermissionPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the RateBasedRule that is specified by the RuleId that you included in the GetRateBasedRule request.",
        "privilege": "GetRateBasedRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ratebasedrule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns an array of IP addresses currently being blocked by the RateBasedRule that is specified by the RuleId.",
        "privilege": "GetRateBasedRuleManagedKeys",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ratebasedrule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the RegexMatchSet specified by RegexMatchSetId.",
        "privilege": "GetRegexMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexmatchset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the RegexPatternSet specified by RegexPatternSetId.",
        "privilege": "GetRegexPatternSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexpatternset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the Rule that is specified by the RuleId that you included in the GetRule request.",
        "privilege": "GetRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the RuleGroup that is specified by the RuleGroupId that you included in the GetRuleGroup request.",
        "privilege": "GetRuleGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets detailed information about a specified number of requests--a sample--that AWS WAF randomly selects from among the first 5,000 requests hat your AWS resource received during a time range that you choose.",
        "privilege": "GetSampledRequests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the SizeConstraintSet specified by SizeConstraintSetId.",
        "privilege": "GetSizeConstraintSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sizeconstraintset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the SqlInjectionMatchSet that is specified by SqlInjectionMatchSetId.",
        "privilege": "GetSqlInjectionMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sqlinjectionmatchset*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the WebACL that is specified by WebACLId.",
        "privilege": "GetWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the WebACL for the specified resource.",
        "privilege": "GetWebACLForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/app/*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the XssMatchSet that is specified by XssMatchSetId.",
        "privilege": "GetXssMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "xssmatchset*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of ActivatedRule objects.",
        "privilege": "ListActivatedRulesInRuleGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of ByteMatchSetSummary objects.",
        "privilege": "ListByteMatchSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of GeoMatchSetSummary objects.",
        "privilege": "ListGeoMatchSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of IPSetSummary objects in the response.",
        "privilege": "ListIPSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of LoggingConfiguration objects.",
        "privilege": "ListLoggingConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of RuleSummary objects.",
        "privilege": "ListRateBasedRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of RegexMatchSetSummary objects.",
        "privilege": "ListRegexMatchSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of RegexPatternSetSummary objects.",
        "privilege": "ListRegexPatternSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of resources associated with the specified WebACL.",
        "privilege": "ListResourcesForWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of RuleGroup objects.",
        "privilege": "ListRuleGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of RuleSummary objects.",
        "privilege": "ListRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of SizeConstraintSetSummary objects.",
        "privilege": "ListSizeConstraintSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of SqlInjectionMatchSet objects.",
        "privilege": "ListSqlInjectionMatchSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of RuleGroup objects that you are subscribed to.",
        "privilege": "ListSubscribedRuleGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Lists the Tags for a given resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ratebasedrule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of WebACLSummary objects in the response.",
        "privilege": "ListWebACLs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an array of XssMatchSet objects.",
        "privilege": "ListXssMatchSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Associates a LoggingConfiguration with a specified web ACL.",
        "privilege": "PutLoggingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:CreateServiceLinkedRole"
            ],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Attaches a IAM policy to the specified resource. The only supported use for this action is to share a RuleGroup across accounts.",
        "privilege": "PutPermissionPolicy",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Adds a Tag to a given resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ratebasedrule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Removes a Tag from a given resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ratebasedrule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes ByteMatchTuple objects (filters) in a ByteMatchSet.",
        "privilege": "UpdateByteMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "bytematchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes GeoMatchConstraint objects in a GeoMatchSet.",
        "privilege": "UpdateGeoMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "geomatchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes IPSetDescriptor objects in an IPSet.",
        "privilege": "UpdateIPSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes Predicate objects in a rule and updates the RateLimit in the rule.",
        "privilege": "UpdateRateBasedRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ratebasedrule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes RegexMatchTuple objects (filters) in a RegexMatchSet.",
        "privilege": "UpdateRegexMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexmatchset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes RegexPatternStrings in a RegexPatternSet.",
        "privilege": "UpdateRegexPatternSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexpatternset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes Predicate objects in a Rule.",
        "privilege": "UpdateRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes ActivatedRule objects in a RuleGroup.",
        "privilege": "UpdateRuleGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes SizeConstraint objects (filters) in a SizeConstraintSet.",
        "privilege": "UpdateSizeConstraintSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sizeconstraintset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes SqlInjectionMatchTuple objects (filters) in a SqlInjectionMatchSet.",
        "privilege": "UpdateSqlInjectionMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sqlinjectionmatchset*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Inserts or deletes ActivatedRule objects in a WebACL.",
        "privilege": "UpdateWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Inserts or deletes XssMatchTuple objects (filters) in an XssMatchSet.",
        "privilege": "UpdateXssMatchSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "xssmatchset*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:bytematchset/${Id}",
        "condition_keys": [],
        "resource": "bytematchset"
      },
      {
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:ipset/${Id}",
        "condition_keys": [],
        "resource": "ipset"
      },
      {
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/app/${LoadBalancerName}/${LoadBalancerId}",
        "condition_keys": [],
        "resource": "loadbalancer/app/"
      },
      {
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:ratebasedrule/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "ratebasedrule"
      },
      {
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:rule/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "rule"
      },
      {
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:sizeconstraintset/${Id}",
        "condition_keys": [],
        "resource": "sizeconstraintset"
      },
      {
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:sqlinjectionmatchset/${Id}",
        "condition_keys": [],
        "resource": "sqlinjectionmatchset"
      },
      {
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "webacl"
      },
      {
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:xssmatchset/${Id}",
        "condition_keys": [],
        "resource": "xssmatchset"
      },
      {
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:regexmatch/${Id}",
        "condition_keys": [],
        "resource": "regexmatchset"
      },
      {
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:regexpatternset/${Id}",
        "condition_keys": [],
        "resource": "regexpatternset"
      },
      {
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:geomatchset/${Id}",
        "condition_keys": [],
        "resource": "geomatchset"
      },
      {
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:rulegroup/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "rulegroup"
      }
    ],
    "service_name": "AWS WAF Regional"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the allowed set of values for each of the tags",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag-value assoicated with the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of mandatory tags in the request",
        "type": "String"
      }
    ],
    "prefix": "wafv2",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to associate a WebACL with a resource.",
        "privilege": "AssociateWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apigateway"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/app/"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to calculate web ACL capacity unit (WCU) requirements for a specified scope and set of rules.",
        "privilege": "CheckCapacity",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an IPSet.",
        "privilege": "CreateIPSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a RegexPatternSet.",
        "privilege": "CreateRegexPatternSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexpatternset*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a RuleGroup.",
        "privilege": "CreateRuleGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to create a WebACL.",
        "privilege": "CreateWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          },
          {
            "condition_keys": [
              "aws:RequestTag/${TagKey}",
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified IPSet.",
        "privilege": "DeleteIPSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the LoggingConfiguration from the specified WebACL.",
        "privilege": "DeleteLoggingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified RegexPatternSet.",
        "privilege": "DeleteRegexPatternSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexpatternset*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified RuleGroup.",
        "privilege": "DeleteRuleGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to delete the specified WebACL.",
        "privilege": "DeleteWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view high-level information for a managed rule group.",
        "privilege": "DescribeManagedRuleGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission disassociate a WebACL from an application resource.",
        "privilege": "DisassociateWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apigateway"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/app/"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about the specified IPSet.",
        "privilege": "GetIPSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view LoggingConfiguration about the specified WebACL.",
        "privilege": "GetLoggingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the keys that are currently blocked by a rate-based rule.",
        "privilege": "GetRateBasedStatementManagedKeys",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about the specified RegexPatternSet.",
        "privilege": "GetRegexPatternSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexpatternset*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about the specified RuleGroup.",
        "privilege": "GetRuleGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view detailed information about a specified number of requests--a sample--that AWS WAF randomly selects from among the first 5,000 requests that your AWS resource received during a time range that you choose.",
        "privilege": "GetSampledRequests",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view details about the specified GetWebACL.",
        "privilege": "GetWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to view the WebACL for the specified resource.",
        "privilege": "GetWebACLForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "apigateway"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "loadbalancer/app/"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view an array of managed rule groups that are available for you to use.",
        "privilege": "ListAvailableManagedRuleGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view an array of IPSetSummary objects for the IP sets that you manage.",
        "privilege": "ListIPSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view an array of your LoggingConfiguration objects.",
        "privilege": "ListLoggingConfigurations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view an array of RegexPatternSetSummary objects for the regex pattern sets that you manage.",
        "privilege": "ListRegexPatternSets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view an array of the Amazon Resource Names (ARNs) for the resources that are associated with the specified web ACL.",
        "privilege": "ListResourcesForWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view an array of RuleGroupSummary objects for the rule groups that you manage.",
        "privilege": "ListRuleGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to lists tag for the specified resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexpatternset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view an array of WebACLSummary objects for the web ACLs that you manage.",
        "privilege": "ListWebACLs",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to enables the specified LoggingConfiguration, to start logging from a web ACL.",
        "privilege": "PutLoggingConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [
              "iam:CreateServiceLinkedRole"
            ],
            "resource_type": "webacl*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to associates tags with the specified AWS resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexpatternset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl"
          },
          {
            "condition_keys": [
              "aws:TagKeys",
              "aws:RequestTag/${TagKey}",
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to disassociates tags from an AWS resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexpatternset"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl"
          },
          {
            "condition_keys": [
              "aws:TagKeys"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the specified IPSet.",
        "privilege": "UpdateIPSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "ipset*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the specified RegexPatternSet.",
        "privilege": "UpdateRegexPatternSet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "regexpatternset*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the specified RuleGroup.",
        "privilege": "UpdateRuleGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "rulegroup*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Grants permission to update the specified WebACL.",
        "privilege": "UpdateWebACL",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "webacl*"
          },
          {
            "condition_keys": [
              "aws:ResourceTag/${TagKey}"
            ],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:wafv2:${Region}:${Account}:${Scope}/webacl/${Name}/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "webacl"
      },
      {
        "arn": "arn:${Partition}:wafv2:${Region}:${Account}:${Scope}/ipset/${Name}/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "ipset"
      },
      {
        "arn": "arn:${Partition}:wafv2:${Region}:${Account}:${Scope}/rulegroup/${Name}/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "rulegroup"
      },
      {
        "arn": "arn:${Partition}:wafv2:${Region}:${Account}:${Scope}/regexpatternset/${Name}/${Id}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "regexpatternset"
      },
      {
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/app/${LoadBalancerName}/${LoadBalancerId}",
        "condition_keys": [],
        "resource": "loadbalancer/app/"
      },
      {
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${ApiId}/stages/prod",
        "condition_keys": [],
        "resource": "apigateway"
      }
    ],
    "service_name": "AWS WAF V2"
  },
  {
    "conditions": [],
    "prefix": "wam",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Allows the Amazon WAM packaging instance to access your application package catalog.",
        "privilege": "AuthenticatePackager",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon WorkSpaces Application Manager"
  },
  {
    "conditions": [],
    "prefix": "wellarchitected",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Creates a new workload.",
        "privilege": "CreateWorkload",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Shares a workload with another account.",
        "privilege": "CreateWorkloadShare",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workload*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an existing workload.",
        "privilege": "DeleteWorkload",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workload*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves the specified workload.",
        "privilege": "GetWorkload",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workload*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the workloads in this account.",
        "privilege": "ListWorkloads",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:wellarchitected:${Region}:${Account}:workload/${ResourceId}",
        "condition_keys": [],
        "resource": "workload"
      }
    ],
    "service_name": "AWS Well-Architected Tool"
  },
  {
    "conditions": [],
    "prefix": "workdocs",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to abort the upload of the specified document version that was previously initiated by InitiateDocumentVersionUpload.",
        "privilege": "AbortDocumentVersionUpload",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to activate the specified user. Only active users can access Amazon WorkDocs.",
        "privilege": "ActivateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a set of permissions for the specified folder or document.",
        "privilege": "AddResourcePermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add a user to a group.",
        "privilege": "AddUserToGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to check an alias.",
        "privilege": "CheckAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add a new comment to the specified document version.",
        "privilege": "CreateComment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add one or more custom properties to the specified resource.",
        "privilege": "CreateCustomMetadata",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a folder with the specified name and parent folder.",
        "privilege": "CreateFolder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an instance.",
        "privilege": "CreateInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to add labels to the given resource.",
        "privilege": "CreateLabels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to configure WorkDocs to use Amazon SNS notifications.",
        "privilege": "CreateNotificationSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a user in a Simple AD or Microsoft AD directory.",
        "privilege": "CreateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to deactivate the specified user, which revokes the user's access to Amazon WorkDocs.",
        "privilege": "DeactivateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified comment from the document version.",
        "privilege": "DeleteComment",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete custom metadata from the specified resource.",
        "privilege": "DeleteCustomMetadata",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to permanently delete the specified document and its associated metadata.",
        "privilege": "DeleteDocument",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to permanently delete the specified folder and its contents.",
        "privilege": "DeleteFolder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the contents of the specified folder.",
        "privilege": "DeleteFolderContents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an instance.",
        "privilege": "DeleteInstance",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete one or more labels from a resource.",
        "privilege": "DeleteLabels",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified subscription from the specified organization.",
        "privilege": "DeleteNotificationSubscription",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete the specified user from a Simple AD or Microsoft AD directory.",
        "privilege": "DeleteUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to deregister a directory.",
        "privilege": "DeregisterDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to fetch user activities in a specified time period.",
        "privilege": "DescribeActivities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe available directories.",
        "privilege": "DescribeAvailableDirectories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list all the comments for the specified document version.",
        "privilege": "DescribeComments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to retrieve the document versions for the specified document.",
        "privilege": "DescribeDocumentVersions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the contents of the specified folder, including its documents and sub-folders.",
        "privilege": "DescribeFolderContents",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the user groups.",
        "privilege": "DescribeGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe instances.",
        "privilege": "DescribeInstances",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the specified notification subscriptions.",
        "privilege": "DescribeNotificationSubscriptions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view a description of a specified resource's permissions.",
        "privilege": "DescribeResourcePermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to describe the root folders.",
        "privilege": "DescribeRootFolders",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to view a description of the specified users. You can describe all users or filter the results (for example, by status or organization).",
        "privilege": "DescribeUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to download a specified document version.",
        "privilege": "DownloadDocumentVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the details of the current user.",
        "privilege": "GetCurrentUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the specified document object.",
        "privilege": "GetDocument",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the path information (the hierarchy from the root folder) for the requested document.",
        "privilege": "GetDocumentPath",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve version metadata for the specified document.",
        "privilege": "GetDocumentVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the metadata of the specified folder.",
        "privilege": "GetFolder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to retrieve the path information (the hierarchy from the root folder) for the specified folder.",
        "privilege": "GetFolderPath",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to get a collection of resources.",
        "privilege": "GetResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create a new document object and version object.",
        "privilege": "InitiateDocumentVersionUpload",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to register a directory.",
        "privilege": "RegisterDirectory",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove all the permissions from the specified resource.",
        "privilege": "RemoveAllResourcePermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to remove the permission for the specified principal from the specified resource.",
        "privilege": "RemoveResourcePermission",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the specified attributes of the specified document.",
        "privilege": "UpdateDocument",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to change the status of the document version to ACTIVE.",
        "privilege": "UpdateDocumentVersion",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the specified attributes of the specified folder.",
        "privilege": "UpdateFolder",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update an instance alias.",
        "privilege": "UpdateInstanceAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the specified attributes of the specified user, and grants or revokes administrative privileges to the Amazon WorkDocs site.",
        "privilege": "UpdateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      }
    ],
    "resources": [],
    "service_name": "Amazon WorkDocs"
  },
  {
    "conditions": [],
    "prefix": "worklink",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Grants permission to associate a domain with an Amazon WorkLink fleet",
        "privilege": "AssociateDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate a website authorization provider with an Amazon WorkLink fleet",
        "privilege": "AssociateWebsiteAuthorizationProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to associate a website certificate authority with an Amazon WorkLink fleet",
        "privilege": "AssociateWebsiteCertificateAuthority",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to create an Amazon WorkLink fleet",
        "privilege": "CreateFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to delete an Amazon WorkLink fleet",
        "privilege": "DeleteFleet",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe the audit stream configuration for an Amazon WorkLink fleet",
        "privilege": "DescribeAuditStreamConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe the company network configuration for an Amazon WorkLink fleet",
        "privilege": "DescribeCompanyNetworkConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe details of a device associated with an Amazon WorkLink fleet",
        "privilege": "DescribeDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe the device policy configuration for an Amazon WorkLink fleet",
        "privilege": "DescribeDevicePolicyConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe details about a domain associated with an Amazon WorkLink fleet",
        "privilege": "DescribeDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe metadata of an Amazon WorkLink fleet",
        "privilege": "DescribeFleetMetadata",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe the identity provider configuration for an Amazon WorkLink fleet",
        "privilege": "DescribeIdentityProviderConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Grants permission to describe a website certificate authority associated with an Amazon WorkLink fleet",
        "privilege": "DescribeWebsiteCertificateAuthority",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate a domain from an Amazon WorkLink fleet",
        "privilege": "DisassociateDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate a website authorization provider from an Amazon WorkLink fleet",
        "privilege": "DisassociateWebsiteAuthorizationProvider",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to disassociate a website certificate authority from an Amazon WorkLink fleet",
        "privilege": "DisassociateWebsiteCertificateAuthority",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the devices associated with an Amazon WorkLink fleet",
        "privilege": "ListDevices",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the associated domains for an Amazon WorkLink fleet",
        "privilege": "ListDomains",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the Amazon WorkLink fleets associated with the account",
        "privilege": "ListFleets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the website authorization providers for an Amazon WorkLink fleet",
        "privilege": "ListWebsiteAuthorizationProviders",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the website certificate authorities associated with an Amazon WorkLink fleet",
        "privilege": "ListWebsiteCertificateAuthorities",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to restore access to a domain associated with an Amazon WorkLink fleet",
        "privilege": "RestoreDomainAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to revoke access to a domain associated with an Amazon WorkLink fleet",
        "privilege": "RevokeDomainAccess",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to sign out a user from an Amazon WorkLink fleet",
        "privilege": "SignOutUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the audit stream configuration for an Amazon WorkLink fleet",
        "privilege": "UpdateAuditStreamConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update\u00a0the company network configuration for an Amazon WorkLink fleet",
        "privilege": "UpdateCompanyNetworkConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the device policy configuration for an Amazon WorkLink fleet",
        "privilege": "UpdateDevicePolicyConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the metadata for a domain associated with an Amazon WorkLink fleet",
        "privilege": "UpdateDomainMetadata",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the metadata of an Amazon WorkLink fleet",
        "privilege": "UpdateFleetMetadata",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Grants permission to update the identity provider configuration for an Amazon WorkLink fleet",
        "privilege": "UpdateIdentityProviderConfiguration",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "fleet*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:worklink::${Account}:fleet/${fleetName}",
        "condition_keys": [],
        "resource": "fleet"
      }
    ],
    "service_name": "Amazon WorkLink"
  },
  {
    "conditions": [
      {
        "condition": "aws:RequestTag/${TagKey}",
        "description": "Filters actions based on the presence of tag key-value pairs in the request",
        "type": "String"
      },
      {
        "condition": "aws:ResourceTag/${TagKey}",
        "description": "Filters actions based on tag key-value pairs attached to the resource",
        "type": "String"
      },
      {
        "condition": "aws:TagKeys",
        "description": "Filters actions based on the presence of tag keys in the request",
        "type": "String"
      }
    ],
    "prefix": "workmail",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Adds a list of members (users or groups) to a group.",
        "privilege": "AddMembersToGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds a member (user or group) to the resource's set of delegates.",
        "privilege": "AssociateDelegateToResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds a member (user or group) to the group's set.",
        "privilege": "AssociateMemberToGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds an alias to the set of a given member (user or group) of WorkMail.",
        "privilege": "CreateAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a group that can be used in WorkMail by calling the RegisterToWorkMail operation.",
        "privilege": "CreateGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create an inbound email flow rule which will apply to all email sent to an organization",
        "privilege": "CreateInboundMailFlowRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a mail domain.",
        "privilege": "CreateMailDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a user in the directory and the WorkMail storage but does not enable the user for mail.",
        "privilege": "CreateMailUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an organization, either using an existing directory or creates a new directory on-the-fly. Also creates and enables the complementary mail domain. Optionally creates KMS key",
        "privilege": "CreateOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Create an outbound email flow rule which will apply to all email sent from an organization",
        "privilege": "CreateOutboundMailFlowRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a new WorkMail resource.",
        "privilege": "CreateResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Register an SMTP device against a WorkMail organization",
        "privilege": "CreateSmtpGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a user who can be used in WorkMail by calling the RegisterToWorkMail operation.",
        "privilege": "CreateUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes an access control rule for the specified WorkMail organization.",
        "privilege": "DeleteAccessControlRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Remove one or more specified aliases from a set of aliases for a given user.",
        "privilege": "DeleteAlias",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a group from WorkMail.",
        "privilege": "DeleteGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Remove an inbound email flow rule to no longer apply to emails sent to an organization",
        "privilege": "DeleteInboundMailFlowRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes an unused mail domain from an organization",
        "privilege": "DeleteMailDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes permissions granted to a member (user or group).",
        "privilege": "DeleteMailboxPermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes a mobile device from a user",
        "privilege": "DeleteMobileDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes an organization from an account, either removing the directory from directory services or leaving it available for re-use",
        "privilege": "DeleteOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Remove an outbound email flow rule to no longer apply to emails sent from an organization",
        "privilege": "DeleteOutboundMailFlowRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified resource.",
        "privilege": "DeleteResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Remove an SMTP device from an organization",
        "privilege": "DeleteSmtpGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a user from WorkMail and all subsequent systems. The action cannot be undone.",
        "privilege": "DeleteUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Mark a user, group, or resource as no longer used in WorkMail.",
        "privilege": "DeregisterFromWorkMail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Shows a list of directories available for use in creating an organization",
        "privilege": "DescribeDirectories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the data available for the group.",
        "privilege": "DescribeGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the details of an inbound mail flow rule configured for an organization",
        "privilege": "DescribeInboundMailFlowRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Shows a list of KMS Keys available for use in creating an organization",
        "privilege": "DescribeKmsKeys",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Shows the details of all mail domains associated with the organization",
        "privilege": "DescribeMailDomains",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Shows the details of all groups associated with the organization",
        "privilege": "DescribeMailGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Shows the details of all users associated with the orgaization",
        "privilege": "DescribeMailUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Provides more information regarding a given organization based on its identifier.",
        "privilege": "DescribeOrganization",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Shows a summary of all organizations associated with the account",
        "privilege": "DescribeOrganizations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the details of an outbound mail flow rule configured for an organization",
        "privilege": "DescribeOutboundMailFlowRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns the data available for the resource.",
        "privilege": "DescribeResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the details of an SMTP device registered against an organization",
        "privilege": "DescribeSmtpGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Provides information regarding the user.",
        "privilege": "DescribeUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disable a mail group when it is not being used and, to allow it to be deleted",
        "privilege": "DisableMailGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disable a user mailbox when it is no longer being used, and to allow it to be deleted",
        "privilege": "DisableMailUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes a member from the resource's set of delegates.",
        "privilege": "DisassociateDelegateFromResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes a member from a group.",
        "privilege": "DisassociateMemberFromGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enable a mail domain in the organization",
        "privilege": "EnableMailDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enable a mail group after it has been created to allow it to receive mail",
        "privilege": "EnableMailGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Enable a user's mailbox after it has been created to allow it to receive mail",
        "privilege": "EnableMailUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Gets the effects of an organization's access control rules as they apply to a specified IPv4 address, access protocol action, or user ID.",
        "privilege": "GetAccessControlEffect",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns journaling and fallback email addresses configured for email journaling",
        "privilege": "GetJournalingRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the details of the mail domain",
        "privilege": "GetMailDomainDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the details of the mail group",
        "privilege": "GetMailGroupDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the details of the user's mailbox and account",
        "privilege": "GetMailUserDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Returns the details of the user's mailbox.",
        "privilege": "GetMailboxDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the details of the mobile device",
        "privilege": "GetMobileDeviceDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get a list of the mobile devices associated with the user",
        "privilege": "GetMobileDevicesForUser",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get the details of the mobile device policy associated with the organization",
        "privilege": "GetMobilePolicyDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the access control rules for the specified organization.",
        "privilege": "ListAccessControlRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Creates a paginated call to list the aliases associated with a given entity.",
        "privilege": "ListAliases",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns an overview of the members of a group. Users and groups can be members of a group.",
        "privilege": "ListGroupMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns summaries of the organization's groups.",
        "privilege": "ListGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of inbound mail flow rules configured for an organization",
        "privilege": "ListInboundMailFlowRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the mailbox permissions associated with a user, group, or resource mailbox.",
        "privilege": "ListMailboxPermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get a list of all the members in a mail group",
        "privilege": "ListMembersInMailGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns summaries of the customer's non-deleted organizations.",
        "privilege": "ListOrganizations",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of outbound mail flow rules configured for an organization",
        "privilege": "ListOutboundMailFlowRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Lists the delegates associated with a resource.",
        "privilege": "ListResourceDelegates",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns summaries of the organization's resources.",
        "privilege": "ListResources",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns a list of SMTP devices registered against the organization",
        "privilege": "ListSmtpGateways",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Grants permission to list the tags applied to an Amazon WorkMail organization resource.",
        "privilege": "ListTagsForResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Returns summaries of the organization's users.",
        "privilege": "ListUsers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds a new access control rule for the specified organization. The rule allows or denies access to the organization for the specified IPv4 addresses, access protocol actions, and user IDs. Adding a new rule with the same name as an existing rule replaces the older rule.",
        "privilege": "PutAccessControlRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Sets permissions for a user, group, or resource. This replaces any pre-existing permissions.",
        "privilege": "PutMailboxPermissions",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Registers an existing and disabled user, group, or resource for use by associating a mailbox and calendaring capabilities.",
        "privilege": "RegisterToWorkMail",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Remove members from a mail group",
        "privilege": "RemoveMembersFromGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Allows the administrator to reset the password for a user.",
        "privilege": "ResetPassword",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Reset the password for a user's account",
        "privilege": "ResetUserPassword",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Prefix search to find a specific user in a mail group",
        "privilege": "SearchMembers",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Mark a user as being an administrator",
        "privilege": "SetAdmin",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Set the default mail domain for the organization",
        "privilege": "SetDefaultMailDomain",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Set journaling and fallback email addresses for email journaling",
        "privilege": "SetJournalingRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Set the details of the mail group which has just been created",
        "privilege": "SetMailGroupDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Set the details for the user account which has just been created",
        "privilege": "SetMailUserDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Set the details of a mobile policy associated with the organization",
        "privilege": "SetMobilePolicyDetails",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to tag the specified Amazon WorkMail organization resource.",
        "privilege": "TagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Test what inbound rules will apply to an email with a given sender and recipient",
        "privilege": "TestInboundMailFlowRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Test what outbound rules will apply to an email with a given sender and recipient",
        "privilege": "TestOutboundMailFlowRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Grants permission to untag the specified Amazon WorkMail organization resource.",
        "privilege": "UntagResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the details of an inbound email flow rule which will apply to all email sent to an organization",
        "privilege": "UpdateInboundMailFlowRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the maximum size (in MB) of the user's mailbox.",
        "privilege": "UpdateMailboxQuota",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the details of an outbound email flow rule which will apply to all email sent from an organization",
        "privilege": "UpdateOutboundMailFlowRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates the primary email for a user, group, or resource.",
        "privilege": "UpdatePrimaryEmailAddress",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates data for the resource. To retrieve the latest information, it must be preceded by a DescribeResource call.",
        "privilege": "UpdateResource",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Update the details of an existing SMTP device registered against an organization",
        "privilege": "UpdateSmtpGateway",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Remotely wipe the mobile device associated with a user's account",
        "privilege": "WipeMobileDevice",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "organization*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:workmail:${Region}:${Account}:organization/${ResourceId}",
        "condition_keys": [
          "aws:ResourceTag/${TagKey}"
        ],
        "resource": "organization"
      }
    ],
    "service_name": "Amazon WorkMail"
  },
  {
    "conditions": [],
    "prefix": "workmailmessageflow",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Grants permission to read the content of email messages with the specified message ID",
        "privilege": "GetRawMessageContent",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "RawMessage*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:workmailmessageflow:${Region}:${Account}:message/${OrganizationId}/${Context}/${MessageId}",
        "condition_keys": [],
        "resource": "RawMessage"
      }
    ],
    "service_name": "Amazon WorkMail Message Flow"
  },
  {
    "conditions": [],
    "prefix": "workspaces",
    "privileges": [
      {
        "access_level": "Write",
        "description": "Associates the specified IP access control group with the specified directory.",
        "privilege": "AssociateIpGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Adds one or more rules to the specified IP access control group.",
        "privilege": "AuthorizeIpRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workspaceipgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates an IP access control group.",
        "privilege": "CreateIpGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Tagging",
        "description": "Creates tags for a WorkSpace.",
        "privilege": "CreateTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates one or more WorkSpaces.",
        "privilege": "CreateWorkspaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directoryid*"
          },
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workspacebundle*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified IP access control group.",
        "privilege": "DeleteIpGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workspaceipgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes tags from a Workspace.",
        "privilege": "DeleteTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes the specified workspace image.",
        "privilege": "DeleteWorkspaceImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves a list that describes the configuration of bring your own license (BYOL) for the specified account.",
        "privilege": "DescribeAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves a list that describes modifications to the configuration of bring your own license (BYOL) for the specified account.",
        "privilege": "DescribeAccountModifications",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describe client properties about the specified resources.",
        "privilege": "DescribeClientProperties",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directoryid*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves information about the IP access control groups of your account in the region.",
        "privilege": "DescribeIpGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workspaceipgroup*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Describes tags for a WorkSpace.",
        "privilege": "DescribeTags",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Obtains information about the WorkSpace bundles that are available to your account in the specified region.",
        "privilege": "DescribeWorkspaceBundles",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workspacebundle*"
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves information about the AWS Directory Service directories in the region that are registered with Amazon WorkSpaces and are available to your account.",
        "privilege": "DescribeWorkspaceDirectories",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Retrieves a list that describes one or more specified images.",
        "privilege": "DescribeWorkspaceImages",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "Obtains information about the specified WorkSpaces.",
        "privilege": "DescribeWorkspaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Describes the connection status of a specified WorkSpace.",
        "privilege": "DescribeWorkspacesConnectionStatus",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Disassociates the specified IP access control group from the specified directory.",
        "privilege": "DisassociateIpGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Import a licensed EC2 image to into Amazon WorkSpaces.",
        "privilege": "ImportWorkspaceImage",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "List",
        "description": "List available CIDR ranges for a CIDR range constraint.",
        "privilege": "ListAvailableManagementCidrRanges",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modify the configuration of bring your own license (BYOL) for the specified account.",
        "privilege": "ModifyAccount",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modify the client properties of a specified resource.",
        "privilege": "ModifyClientProperties",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "directoryid*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies the WorkSpace properties, including the running mode and AutoStop time.",
        "privilege": "ModifyWorkspaceProperties",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workspaceid*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modify the state of specified WorkSpaces.",
        "privilege": "ModifyWorkspaceState",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workspaceid*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Reboots the specified WorkSpaces.",
        "privilege": "RebootWorkspaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workspaceid*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Rebuilds the specified WorkSpaces.",
        "privilege": "RebuildWorkspaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workspaceid*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Removes one or more rules from the specified IP access control group.",
        "privilege": "RevokeIpRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workspaceipgroup*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Starts the specified WorkSpaces.",
        "privilege": "StartWorkspaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workspaceid*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Stops the specified WorkSpaces.",
        "privilege": "StopWorkspaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workspaceid*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Terminates the specified WorkSpaces.",
        "privilege": "TerminateWorkspaces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workspaceid*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Replaces the current rules of the specified IP access control group with the specified rules.",
        "privilege": "UpdateRulesOfIpGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "workspaceipgroup*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:workspaces:${Region}:${Account}:workspacebundle/${BundleId}",
        "condition_keys": [],
        "resource": "workspacebundle"
      },
      {
        "arn": "arn:${Partition}:workspaces:${Region}:${Account}:workspaceipgroup/${GroupId}",
        "condition_keys": [],
        "resource": "workspaceipgroup"
      },
      {
        "arn": "arn:${Partition}:workspaces:${Region}:${Account}:directory/${DirectoryId}",
        "condition_keys": [],
        "resource": "directoryid"
      },
      {
        "arn": "arn:${Partition}:workspaces:${Region}:${Account}:workspace/${WorkspaceId}",
        "condition_keys": [],
        "resource": "workspaceid"
      }
    ],
    "service_name": "Amazon WorkSpaces"
  },
  {
    "conditions": [],
    "prefix": "xray",
    "privileges": [
      {
        "access_level": "Read",
        "description": "Retrieves a list of traces specified by ID. Each trace is a collection of segment documents that originates from a single request. Use GetTraceSummaries to get a list of trace IDs.",
        "privilege": "BatchGetTraces",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a group resource with a name and a filter expression.",
        "privilege": "CreateGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Creates a rule to control sampling behavior for instrumented applications.",
        "privilege": "CreateSamplingRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sampling-rule*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a group resource.",
        "privilege": "DeleteGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Deletes a sampling rule.",
        "privilege": "DeleteSamplingRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sampling-rule*"
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Retrieves the current encryption configuration for X-Ray data.",
        "privilege": "GetEncryptionConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves group resource details.",
        "privilege": "GetGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves all active group details.",
        "privilege": "GetGroups",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves all sampling rules.",
        "privilege": "GetSamplingRules",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves information about recent sampling results for all sampling rules.",
        "privilege": "GetSamplingStatisticSummaries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Requests a sampling quota for rules that the service is using to sample requests.",
        "privilege": "GetSamplingTargets",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a document that describes services that process incoming requests, and downstream services that they call as a result.",
        "privilege": "GetServiceGraph",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Get an aggregation of service statistics defined by a specific time range bucketed into time intervals.",
        "privilege": "GetTimeSeriesServiceStatistics",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves a service graph for one or more specific trace IDs.",
        "privilege": "GetTraceGraph",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Read",
        "description": "Retrieves IDs and metadata for traces available for a specified time frame using an optional filter. To get the full traces, pass the trace IDs to BatchGetTraces.",
        "privilege": "GetTraceSummaries",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Permissions management",
        "description": "Updates the encryption configuration for X-Ray data.",
        "privilege": "PutEncryptionConfig",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Used by the AWS X-Ray daemon to send telemetry to the service.",
        "privilege": "PutTelemetryRecords",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Uploads segment documents to AWS X-Ray. The X-Ray SDK generates segment documents and sends them to the X-Ray daemon, which uploads them in batches.",
        "privilege": "PutTraceSegments",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": ""
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Updates a group resource.",
        "privilege": "UpdateGroup",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "group*"
          }
        ]
      },
      {
        "access_level": "Write",
        "description": "Modifies a sampling rule's configuration.",
        "privilege": "UpdateSamplingRule",
        "resource_types": [
          {
            "condition_keys": [],
            "dependent_actions": [],
            "resource_type": "sampling-rule*"
          }
        ]
      }
    ],
    "resources": [
      {
        "arn": "arn:${Partition}:xray:${Region}:${Account}:group/${GroupName}/${Id}",
        "condition_keys": [],
        "resource": "group"
      },
      {
        "arn": "arn:${Partition}:xray:${Region}:${Account}:sampling-rule/${SamplingRuleName}",
        "condition_keys": [],
        "resource": "sampling-rule"
      }
    ],
    "service_name": "AWS X-Ray"
  }
]
